{
  "id": "c7ff7038c0f055b7098c6c0768134784",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.4",
  "solcLongVersion": "",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/AccessRolesBox.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\ncontract AccessRolesBox is AccessControl{\n\n    string public value;\n\n    event ColorChanged(string newValue);\n\n    bytes32 public constant VALUE_GETTER = keccak256(\"VALUE_GETTER\");\n    bytes32 public constant VALUE_SETTER = keccak256(\"VALUE_SETTER\");\n\n\n    constructor(string memory initialValue) {\n        value = initialValue;\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(VALUE_GETTER, msg.sender);\n        _grantRole(VALUE_SETTER, msg.sender);\n    }\n\n    function changeValue(string calldata newValue) public onlyRole(VALUE_SETTER) {\n        value = newValue;\n        emit ColorChanged(newValue);\n    }\n\n    function getValue() public view onlyRole(VALUE_GETTER) returns(string memory) {\n        return value;\n    }\n}"
      },
      "@openzeppelin/contracts/access/AccessControl.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(uint160(account), 20),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Strings.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/governance/TimelockController.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (governance/TimelockController.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../access/AccessControl.sol\";\nimport \"../token/ERC721/IERC721Receiver.sol\";\nimport \"../token/ERC1155/IERC1155Receiver.sol\";\nimport \"../utils/Address.sol\";\n\n/**\n * @dev Contract module which acts as a timelocked controller. When set as the\n * owner of an `Ownable` smart contract, it enforces a timelock on all\n * `onlyOwner` maintenance operations. This gives time for users of the\n * controlled contract to exit before a potentially dangerous maintenance\n * operation is applied.\n *\n * By default, this contract is self administered, meaning administration tasks\n * have to go through the timelock process. The proposer (resp executor) role\n * is in charge of proposing (resp executing) operations. A common use case is\n * to position this {TimelockController} as the owner of a smart contract, with\n * a multisig or a DAO as the sole proposer.\n *\n * _Available since v3.3._\n */\ncontract TimelockController is AccessControl, IERC721Receiver, IERC1155Receiver {\n    bytes32 public constant TIMELOCK_ADMIN_ROLE = keccak256(\"TIMELOCK_ADMIN_ROLE\");\n    bytes32 public constant PROPOSER_ROLE = keccak256(\"PROPOSER_ROLE\");\n    bytes32 public constant EXECUTOR_ROLE = keccak256(\"EXECUTOR_ROLE\");\n    bytes32 public constant CANCELLER_ROLE = keccak256(\"CANCELLER_ROLE\");\n    uint256 internal constant _DONE_TIMESTAMP = uint256(1);\n\n    mapping(bytes32 => uint256) private _timestamps;\n    uint256 private _minDelay;\n\n    /**\n     * @dev Emitted when a call is scheduled as part of operation `id`.\n     */\n    event CallScheduled(\n        bytes32 indexed id,\n        uint256 indexed index,\n        address target,\n        uint256 value,\n        bytes data,\n        bytes32 predecessor,\n        uint256 delay\n    );\n\n    /**\n     * @dev Emitted when a call is performed as part of operation `id`.\n     */\n    event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data);\n\n    /**\n     * @dev Emitted when operation `id` is cancelled.\n     */\n    event Cancelled(bytes32 indexed id);\n\n    /**\n     * @dev Emitted when the minimum delay for future operations is modified.\n     */\n    event MinDelayChange(uint256 oldDuration, uint256 newDuration);\n\n    /**\n     * @dev Initializes the contract with a given `minDelay`, and a list of\n     * initial proposers and executors. The proposers receive both the\n     * proposer and the canceller role (for backward compatibility). The\n     * executors receive the executor role.\n     *\n     * NOTE: At construction, both the deployer and the timelock itself are\n     * administrators. This helps further configuration of the timelock by the\n     * deployer. After configuration is done, it is recommended that the\n     * deployer renounces its admin position and relies on timelocked\n     * operations to perform future maintenance.\n     */\n    constructor(\n        uint256 minDelay,\n        address[] memory proposers,\n        address[] memory executors\n    ) {\n        _setRoleAdmin(TIMELOCK_ADMIN_ROLE, TIMELOCK_ADMIN_ROLE);\n        _setRoleAdmin(PROPOSER_ROLE, TIMELOCK_ADMIN_ROLE);\n        _setRoleAdmin(EXECUTOR_ROLE, TIMELOCK_ADMIN_ROLE);\n        _setRoleAdmin(CANCELLER_ROLE, TIMELOCK_ADMIN_ROLE);\n\n        // deployer + self administration\n        _setupRole(TIMELOCK_ADMIN_ROLE, _msgSender());\n        _setupRole(TIMELOCK_ADMIN_ROLE, address(this));\n\n        // register proposers and cancellers\n        for (uint256 i = 0; i < proposers.length; ++i) {\n            _setupRole(PROPOSER_ROLE, proposers[i]);\n            _setupRole(CANCELLER_ROLE, proposers[i]);\n        }\n\n        // register executors\n        for (uint256 i = 0; i < executors.length; ++i) {\n            _setupRole(EXECUTOR_ROLE, executors[i]);\n        }\n\n        _minDelay = minDelay;\n        emit MinDelayChange(0, minDelay);\n    }\n\n    /**\n     * @dev Modifier to make a function callable only by a certain role. In\n     * addition to checking the sender's role, `address(0)` 's role is also\n     * considered. Granting a role to `address(0)` is equivalent to enabling\n     * this role for everyone.\n     */\n    modifier onlyRoleOrOpenRole(bytes32 role) {\n        if (!hasRole(role, address(0))) {\n            _checkRole(role, _msgSender());\n        }\n        _;\n    }\n\n    /**\n     * @dev Contract might receive/hold ETH as part of the maintenance process.\n     */\n    receive() external payable {}\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, AccessControl) returns (bool) {\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns whether an id correspond to a registered operation. This\n     * includes both Pending, Ready and Done operations.\n     */\n    function isOperation(bytes32 id) public view virtual returns (bool registered) {\n        return getTimestamp(id) > 0;\n    }\n\n    /**\n     * @dev Returns whether an operation is pending or not.\n     */\n    function isOperationPending(bytes32 id) public view virtual returns (bool pending) {\n        return getTimestamp(id) > _DONE_TIMESTAMP;\n    }\n\n    /**\n     * @dev Returns whether an operation is ready or not.\n     */\n    function isOperationReady(bytes32 id) public view virtual returns (bool ready) {\n        uint256 timestamp = getTimestamp(id);\n        return timestamp > _DONE_TIMESTAMP && timestamp <= block.timestamp;\n    }\n\n    /**\n     * @dev Returns whether an operation is done or not.\n     */\n    function isOperationDone(bytes32 id) public view virtual returns (bool done) {\n        return getTimestamp(id) == _DONE_TIMESTAMP;\n    }\n\n    /**\n     * @dev Returns the timestamp at with an operation becomes ready (0 for\n     * unset operations, 1 for done operations).\n     */\n    function getTimestamp(bytes32 id) public view virtual returns (uint256 timestamp) {\n        return _timestamps[id];\n    }\n\n    /**\n     * @dev Returns the minimum delay for an operation to become valid.\n     *\n     * This value can be changed by executing an operation that calls `updateDelay`.\n     */\n    function getMinDelay() public view virtual returns (uint256 duration) {\n        return _minDelay;\n    }\n\n    /**\n     * @dev Returns the identifier of an operation containing a single\n     * transaction.\n     */\n    function hashOperation(\n        address target,\n        uint256 value,\n        bytes calldata data,\n        bytes32 predecessor,\n        bytes32 salt\n    ) public pure virtual returns (bytes32 hash) {\n        return keccak256(abi.encode(target, value, data, predecessor, salt));\n    }\n\n    /**\n     * @dev Returns the identifier of an operation containing a batch of\n     * transactions.\n     */\n    function hashOperationBatch(\n        address[] calldata targets,\n        uint256[] calldata values,\n        bytes[] calldata payloads,\n        bytes32 predecessor,\n        bytes32 salt\n    ) public pure virtual returns (bytes32 hash) {\n        return keccak256(abi.encode(targets, values, payloads, predecessor, salt));\n    }\n\n    /**\n     * @dev Schedule an operation containing a single transaction.\n     *\n     * Emits a {CallScheduled} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have the 'proposer' role.\n     */\n    function schedule(\n        address target,\n        uint256 value,\n        bytes calldata data,\n        bytes32 predecessor,\n        bytes32 salt,\n        uint256 delay\n    ) public virtual onlyRole(PROPOSER_ROLE) {\n        bytes32 id = hashOperation(target, value, data, predecessor, salt);\n        _schedule(id, delay);\n        emit CallScheduled(id, 0, target, value, data, predecessor, delay);\n    }\n\n    /**\n     * @dev Schedule an operation containing a batch of transactions.\n     *\n     * Emits one {CallScheduled} event per transaction in the batch.\n     *\n     * Requirements:\n     *\n     * - the caller must have the 'proposer' role.\n     */\n    function scheduleBatch(\n        address[] calldata targets,\n        uint256[] calldata values,\n        bytes[] calldata payloads,\n        bytes32 predecessor,\n        bytes32 salt,\n        uint256 delay\n    ) public virtual onlyRole(PROPOSER_ROLE) {\n        require(targets.length == values.length, \"TimelockController: length mismatch\");\n        require(targets.length == payloads.length, \"TimelockController: length mismatch\");\n\n        bytes32 id = hashOperationBatch(targets, values, payloads, predecessor, salt);\n        _schedule(id, delay);\n        for (uint256 i = 0; i < targets.length; ++i) {\n            emit CallScheduled(id, i, targets[i], values[i], payloads[i], predecessor, delay);\n        }\n    }\n\n    /**\n     * @dev Schedule an operation that is to becomes valid after a given delay.\n     */\n    function _schedule(bytes32 id, uint256 delay) private {\n        require(!isOperation(id), \"TimelockController: operation already scheduled\");\n        require(delay >= getMinDelay(), \"TimelockController: insufficient delay\");\n        _timestamps[id] = block.timestamp + delay;\n    }\n\n    /**\n     * @dev Cancel an operation.\n     *\n     * Requirements:\n     *\n     * - the caller must have the 'canceller' role.\n     */\n    function cancel(bytes32 id) public virtual onlyRole(CANCELLER_ROLE) {\n        require(isOperationPending(id), \"TimelockController: operation cannot be cancelled\");\n        delete _timestamps[id];\n\n        emit Cancelled(id);\n    }\n\n    /**\n     * @dev Execute an (ready) operation containing a single transaction.\n     *\n     * Emits a {CallExecuted} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have the 'executor' role.\n     */\n    // This function can reenter, but it doesn't pose a risk because _afterCall checks that the proposal is pending,\n    // thus any modifications to the operation during reentrancy should be caught.\n    // slither-disable-next-line reentrancy-eth\n    function execute(\n        address target,\n        uint256 value,\n        bytes calldata payload,\n        bytes32 predecessor,\n        bytes32 salt\n    ) public payable virtual onlyRoleOrOpenRole(EXECUTOR_ROLE) {\n        bytes32 id = hashOperation(target, value, payload, predecessor, salt);\n\n        _beforeCall(id, predecessor);\n        _execute(target, value, payload);\n        emit CallExecuted(id, 0, target, value, payload);\n        _afterCall(id);\n    }\n\n    /**\n     * @dev Execute an (ready) operation containing a batch of transactions.\n     *\n     * Emits one {CallExecuted} event per transaction in the batch.\n     *\n     * Requirements:\n     *\n     * - the caller must have the 'executor' role.\n     */\n    function executeBatch(\n        address[] calldata targets,\n        uint256[] calldata values,\n        bytes[] calldata payloads,\n        bytes32 predecessor,\n        bytes32 salt\n    ) public payable virtual onlyRoleOrOpenRole(EXECUTOR_ROLE) {\n        require(targets.length == values.length, \"TimelockController: length mismatch\");\n        require(targets.length == payloads.length, \"TimelockController: length mismatch\");\n\n        bytes32 id = hashOperationBatch(targets, values, payloads, predecessor, salt);\n\n        _beforeCall(id, predecessor);\n        for (uint256 i = 0; i < targets.length; ++i) {\n            address target = targets[i];\n            uint256 value = values[i];\n            bytes calldata payload = payloads[i];\n            _execute(target, value, payload);\n            emit CallExecuted(id, i, target, value, payload);\n        }\n        _afterCall(id);\n    }\n\n    /**\n     * @dev Execute an operation's call.\n     */\n    function _execute(\n        address target,\n        uint256 value,\n        bytes calldata data\n    ) internal virtual {\n        (bool success, ) = target.call{value: value}(data);\n        require(success, \"TimelockController: underlying transaction reverted\");\n    }\n\n    /**\n     * @dev Checks before execution of an operation's calls.\n     */\n    function _beforeCall(bytes32 id, bytes32 predecessor) private view {\n        require(isOperationReady(id), \"TimelockController: operation is not ready\");\n        require(predecessor == bytes32(0) || isOperationDone(predecessor), \"TimelockController: missing dependency\");\n    }\n\n    /**\n     * @dev Checks after execution of an operation's calls.\n     */\n    function _afterCall(bytes32 id) private {\n        require(isOperationReady(id), \"TimelockController: operation is not ready\");\n        _timestamps[id] = _DONE_TIMESTAMP;\n    }\n\n    /**\n     * @dev Changes the minimum timelock duration for future operations.\n     *\n     * Emits a {MinDelayChange} event.\n     *\n     * Requirements:\n     *\n     * - the caller must be the timelock itself. This can only be achieved by scheduling and later executing\n     * an operation where the timelock is the target and the data is the ABI-encoded call to this function.\n     */\n    function updateDelay(uint256 newDelay) external virtual {\n        require(msg.sender == address(this), \"TimelockController: caller must be timelock\");\n        emit MinDelayChange(_minDelay, newDelay);\n        _minDelay = newDelay;\n    }\n\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     */\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n\n    /**\n     * @dev See {IERC1155Receiver-onERC1155Received}.\n     */\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }\n\n    /**\n     * @dev See {IERC1155Receiver-onERC1155BatchReceived}.\n     */\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] memory,\n        uint256[] memory,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
      },
      "contracts/Timelock.sol": {
        "content": "//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/governance/TimelockController.sol\";"
      },
      "@openzeppelin/contracts/governance/Governor.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.2) (governance/Governor.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../token/ERC721/IERC721Receiver.sol\";\nimport \"../token/ERC1155/IERC1155Receiver.sol\";\nimport \"../utils/cryptography/ECDSA.sol\";\nimport \"../utils/cryptography/draft-EIP712.sol\";\nimport \"../utils/introspection/ERC165.sol\";\nimport \"../utils/math/SafeCast.sol\";\nimport \"../utils/structs/DoubleEndedQueue.sol\";\nimport \"../utils/Address.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Timers.sol\";\nimport \"./IGovernor.sol\";\n\n/**\n * @dev Core of the governance system, designed to be extended though various modules.\n *\n * This contract is abstract and requires several function to be implemented in various modules:\n *\n * - A counting module must implement {quorum}, {_quorumReached}, {_voteSucceeded} and {_countVote}\n * - A voting module must implement {_getVotes}\n * - Additionanly, the {votingPeriod} must also be implemented\n *\n * _Available since v4.3._\n */\nabstract contract Governor is Context, ERC165, EIP712, IGovernor, IERC721Receiver, IERC1155Receiver {\n    using DoubleEndedQueue for DoubleEndedQueue.Bytes32Deque;\n    using SafeCast for uint256;\n    using Timers for Timers.BlockNumber;\n\n    bytes32 public constant BALLOT_TYPEHASH = keccak256(\"Ballot(uint256 proposalId,uint8 support)\");\n    bytes32 public constant EXTENDED_BALLOT_TYPEHASH =\n        keccak256(\"ExtendedBallot(uint256 proposalId,uint8 support,string reason,bytes params)\");\n\n    struct ProposalCore {\n        Timers.BlockNumber voteStart;\n        Timers.BlockNumber voteEnd;\n        bool executed;\n        bool canceled;\n    }\n\n    string private _name;\n\n    mapping(uint256 => ProposalCore) private _proposals;\n\n    // This queue keeps track of the governor operating on itself. Calls to functions protected by the\n    // {onlyGovernance} modifier needs to be whitelisted in this queue. Whitelisting is set in {_beforeExecute},\n    // consumed by the {onlyGovernance} modifier and eventually reset in {_afterExecute}. This ensures that the\n    // execution of {onlyGovernance} protected calls can only be achieved through successful proposals.\n    DoubleEndedQueue.Bytes32Deque private _governanceCall;\n\n    /**\n     * @dev Restricts a function so it can only be executed through governance proposals. For example, governance\n     * parameter setters in {GovernorSettings} are protected using this modifier.\n     *\n     * The governance executing address may be different from the Governor's own address, for example it could be a\n     * timelock. This can be customized by modules by overriding {_executor}. The executor is only able to invoke these\n     * functions during the execution of the governor's {execute} function, and not under any other circumstances. Thus,\n     * for example, additional timelock proposers are not able to change governance parameters without going through the\n     * governance protocol (since v4.6).\n     */\n    modifier onlyGovernance() {\n        require(_msgSender() == _executor(), \"Governor: onlyGovernance\");\n        if (_executor() != address(this)) {\n            bytes32 msgDataHash = keccak256(_msgData());\n            // loop until popping the expected operation - throw if deque is empty (operation not authorized)\n            while (_governanceCall.popFront() != msgDataHash) {}\n        }\n        _;\n    }\n\n    /**\n     * @dev Sets the value for {name} and {version}\n     */\n    constructor(string memory name_) EIP712(name_, version()) {\n        _name = name_;\n    }\n\n    /**\n     * @dev Function to receive ETH that will be handled by the governor (disabled if executor is a third party contract)\n     */\n    receive() external payable virtual {\n        require(_executor() == address(this));\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165) returns (bool) {\n        // In addition to the current interfaceId, also support previous version of the interfaceId that did not\n        // include the castVoteWithReasonAndParams() function as standard\n        return\n            interfaceId ==\n            (type(IGovernor).interfaceId ^\n                this.castVoteWithReasonAndParams.selector ^\n                this.castVoteWithReasonAndParamsBySig.selector ^\n                this.getVotesWithParams.selector) ||\n            interfaceId == type(IGovernor).interfaceId ||\n            interfaceId == type(IERC1155Receiver).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IGovernor-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IGovernor-version}.\n     */\n    function version() public view virtual override returns (string memory) {\n        return \"1\";\n    }\n\n    /**\n     * @dev See {IGovernor-hashProposal}.\n     *\n     * The proposal id is produced by hashing the ABI encoded `targets` array, the `values` array, the `calldatas` array\n     * and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id\n     * can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in\n     * advance, before the proposal is submitted.\n     *\n     * Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the\n     * same proposal (with same operation and same description) will have the same id if submitted on multiple governors\n     * across multiple networks. This also means that in order to execute the same operation twice (on the same\n     * governor) the proposer will have to change the description in order to avoid proposal id conflicts.\n     */\n    function hashProposal(\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        bytes32 descriptionHash\n    ) public pure virtual override returns (uint256) {\n        return uint256(keccak256(abi.encode(targets, values, calldatas, descriptionHash)));\n    }\n\n    /**\n     * @dev See {IGovernor-state}.\n     */\n    function state(uint256 proposalId) public view virtual override returns (ProposalState) {\n        ProposalCore storage proposal = _proposals[proposalId];\n\n        if (proposal.executed) {\n            return ProposalState.Executed;\n        }\n\n        if (proposal.canceled) {\n            return ProposalState.Canceled;\n        }\n\n        uint256 snapshot = proposalSnapshot(proposalId);\n\n        if (snapshot == 0) {\n            revert(\"Governor: unknown proposal id\");\n        }\n\n        if (snapshot >= block.number) {\n            return ProposalState.Pending;\n        }\n\n        uint256 deadline = proposalDeadline(proposalId);\n\n        if (deadline >= block.number) {\n            return ProposalState.Active;\n        }\n\n        if (_quorumReached(proposalId) && _voteSucceeded(proposalId)) {\n            return ProposalState.Succeeded;\n        } else {\n            return ProposalState.Defeated;\n        }\n    }\n\n    /**\n     * @dev See {IGovernor-proposalSnapshot}.\n     */\n    function proposalSnapshot(uint256 proposalId) public view virtual override returns (uint256) {\n        return _proposals[proposalId].voteStart.getDeadline();\n    }\n\n    /**\n     * @dev See {IGovernor-proposalDeadline}.\n     */\n    function proposalDeadline(uint256 proposalId) public view virtual override returns (uint256) {\n        return _proposals[proposalId].voteEnd.getDeadline();\n    }\n\n    /**\n     * @dev Part of the Governor Bravo's interface: _\"The number of votes required in order for a voter to become a proposer\"_.\n     */\n    function proposalThreshold() public view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Amount of votes already cast passes the threshold limit.\n     */\n    function _quorumReached(uint256 proposalId) internal view virtual returns (bool);\n\n    /**\n     * @dev Is the proposal successful or not.\n     */\n    function _voteSucceeded(uint256 proposalId) internal view virtual returns (bool);\n\n    /**\n     * @dev Get the voting weight of `account` at a specific `blockNumber`, for a vote as described by `params`.\n     */\n    function _getVotes(\n        address account,\n        uint256 blockNumber,\n        bytes memory params\n    ) internal view virtual returns (uint256);\n\n    /**\n     * @dev Register a vote for `proposalId` by `account` with a given `support`, voting `weight` and voting `params`.\n     *\n     * Note: Support is generic and can represent various things depending on the voting system used.\n     */\n    function _countVote(\n        uint256 proposalId,\n        address account,\n        uint8 support,\n        uint256 weight,\n        bytes memory params\n    ) internal virtual;\n\n    /**\n     * @dev Default additional encoded parameters used by castVote methods that don't include them\n     *\n     * Note: Should be overridden by specific implementations to use an appropriate value, the\n     * meaning of the additional params, in the context of that implementation\n     */\n    function _defaultParams() internal view virtual returns (bytes memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IGovernor-propose}.\n     */\n    function propose(\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        string memory description\n    ) public virtual override returns (uint256) {\n        require(\n            getVotes(_msgSender(), block.number - 1) >= proposalThreshold(),\n            \"Governor: proposer votes below proposal threshold\"\n        );\n\n        uint256 proposalId = hashProposal(targets, values, calldatas, keccak256(bytes(description)));\n\n        require(targets.length == values.length, \"Governor: invalid proposal length\");\n        require(targets.length == calldatas.length, \"Governor: invalid proposal length\");\n        require(targets.length > 0, \"Governor: empty proposal\");\n\n        ProposalCore storage proposal = _proposals[proposalId];\n        require(proposal.voteStart.isUnset(), \"Governor: proposal already exists\");\n\n        uint64 snapshot = block.number.toUint64() + votingDelay().toUint64();\n        uint64 deadline = snapshot + votingPeriod().toUint64();\n\n        proposal.voteStart.setDeadline(snapshot);\n        proposal.voteEnd.setDeadline(deadline);\n\n        emit ProposalCreated(\n            proposalId,\n            _msgSender(),\n            targets,\n            values,\n            new string[](targets.length),\n            calldatas,\n            snapshot,\n            deadline,\n            description\n        );\n\n        return proposalId;\n    }\n\n    /**\n     * @dev See {IGovernor-execute}.\n     */\n    function execute(\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        bytes32 descriptionHash\n    ) public payable virtual override returns (uint256) {\n        uint256 proposalId = hashProposal(targets, values, calldatas, descriptionHash);\n\n        ProposalState status = state(proposalId);\n        require(\n            status == ProposalState.Succeeded || status == ProposalState.Queued,\n            \"Governor: proposal not successful\"\n        );\n        _proposals[proposalId].executed = true;\n\n        emit ProposalExecuted(proposalId);\n\n        _beforeExecute(proposalId, targets, values, calldatas, descriptionHash);\n        _execute(proposalId, targets, values, calldatas, descriptionHash);\n        _afterExecute(proposalId, targets, values, calldatas, descriptionHash);\n\n        return proposalId;\n    }\n\n    /**\n     * @dev Internal execution mechanism. Can be overridden to implement different execution mechanism\n     */\n    function _execute(\n        uint256, /* proposalId */\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        bytes32 /*descriptionHash*/\n    ) internal virtual {\n        string memory errorMessage = \"Governor: call reverted without message\";\n        for (uint256 i = 0; i < targets.length; ++i) {\n            (bool success, bytes memory returndata) = targets[i].call{value: values[i]}(calldatas[i]);\n            Address.verifyCallResult(success, returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Hook before execution is triggered.\n     */\n    function _beforeExecute(\n        uint256, /* proposalId */\n        address[] memory targets,\n        uint256[] memory, /* values */\n        bytes[] memory calldatas,\n        bytes32 /*descriptionHash*/\n    ) internal virtual {\n        if (_executor() != address(this)) {\n            for (uint256 i = 0; i < targets.length; ++i) {\n                if (targets[i] == address(this)) {\n                    _governanceCall.pushBack(keccak256(calldatas[i]));\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Hook after execution is triggered.\n     */\n    function _afterExecute(\n        uint256, /* proposalId */\n        address[] memory, /* targets */\n        uint256[] memory, /* values */\n        bytes[] memory, /* calldatas */\n        bytes32 /*descriptionHash*/\n    ) internal virtual {\n        if (_executor() != address(this)) {\n            if (!_governanceCall.empty()) {\n                _governanceCall.clear();\n            }\n        }\n    }\n\n    /**\n     * @dev Internal cancel mechanism: locks up the proposal timer, preventing it from being re-submitted. Marks it as\n     * canceled to allow distinguishing it from executed proposals.\n     *\n     * Emits a {IGovernor-ProposalCanceled} event.\n     */\n    function _cancel(\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        bytes32 descriptionHash\n    ) internal virtual returns (uint256) {\n        uint256 proposalId = hashProposal(targets, values, calldatas, descriptionHash);\n        ProposalState status = state(proposalId);\n\n        require(\n            status != ProposalState.Canceled && status != ProposalState.Expired && status != ProposalState.Executed,\n            \"Governor: proposal not active\"\n        );\n        _proposals[proposalId].canceled = true;\n\n        emit ProposalCanceled(proposalId);\n\n        return proposalId;\n    }\n\n    /**\n     * @dev See {IGovernor-getVotes}.\n     */\n    function getVotes(address account, uint256 blockNumber) public view virtual override returns (uint256) {\n        return _getVotes(account, blockNumber, _defaultParams());\n    }\n\n    /**\n     * @dev See {IGovernor-getVotesWithParams}.\n     */\n    function getVotesWithParams(\n        address account,\n        uint256 blockNumber,\n        bytes memory params\n    ) public view virtual override returns (uint256) {\n        return _getVotes(account, blockNumber, params);\n    }\n\n    /**\n     * @dev See {IGovernor-castVote}.\n     */\n    function castVote(uint256 proposalId, uint8 support) public virtual override returns (uint256) {\n        address voter = _msgSender();\n        return _castVote(proposalId, voter, support, \"\");\n    }\n\n    /**\n     * @dev See {IGovernor-castVoteWithReason}.\n     */\n    function castVoteWithReason(\n        uint256 proposalId,\n        uint8 support,\n        string calldata reason\n    ) public virtual override returns (uint256) {\n        address voter = _msgSender();\n        return _castVote(proposalId, voter, support, reason);\n    }\n\n    /**\n     * @dev See {IGovernor-castVoteWithReasonAndParams}.\n     */\n    function castVoteWithReasonAndParams(\n        uint256 proposalId,\n        uint8 support,\n        string calldata reason,\n        bytes memory params\n    ) public virtual override returns (uint256) {\n        address voter = _msgSender();\n        return _castVote(proposalId, voter, support, reason, params);\n    }\n\n    /**\n     * @dev See {IGovernor-castVoteBySig}.\n     */\n    function castVoteBySig(\n        uint256 proposalId,\n        uint8 support,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override returns (uint256) {\n        address voter = ECDSA.recover(\n            _hashTypedDataV4(keccak256(abi.encode(BALLOT_TYPEHASH, proposalId, support))),\n            v,\n            r,\n            s\n        );\n        return _castVote(proposalId, voter, support, \"\");\n    }\n\n    /**\n     * @dev See {IGovernor-castVoteWithReasonAndParamsBySig}.\n     */\n    function castVoteWithReasonAndParamsBySig(\n        uint256 proposalId,\n        uint8 support,\n        string calldata reason,\n        bytes memory params,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override returns (uint256) {\n        address voter = ECDSA.recover(\n            _hashTypedDataV4(\n                keccak256(\n                    abi.encode(\n                        EXTENDED_BALLOT_TYPEHASH,\n                        proposalId,\n                        support,\n                        keccak256(bytes(reason)),\n                        keccak256(params)\n                    )\n                )\n            ),\n            v,\n            r,\n            s\n        );\n\n        return _castVote(proposalId, voter, support, reason, params);\n    }\n\n    /**\n     * @dev Internal vote casting mechanism: Check that the vote is pending, that it has not been cast yet, retrieve\n     * voting weight using {IGovernor-getVotes} and call the {_countVote} internal function. Uses the _defaultParams().\n     *\n     * Emits a {IGovernor-VoteCast} event.\n     */\n    function _castVote(\n        uint256 proposalId,\n        address account,\n        uint8 support,\n        string memory reason\n    ) internal virtual returns (uint256) {\n        return _castVote(proposalId, account, support, reason, _defaultParams());\n    }\n\n    /**\n     * @dev Internal vote casting mechanism: Check that the vote is pending, that it has not been cast yet, retrieve\n     * voting weight using {IGovernor-getVotes} and call the {_countVote} internal function.\n     *\n     * Emits a {IGovernor-VoteCast} event.\n     */\n    function _castVote(\n        uint256 proposalId,\n        address account,\n        uint8 support,\n        string memory reason,\n        bytes memory params\n    ) internal virtual returns (uint256) {\n        ProposalCore storage proposal = _proposals[proposalId];\n        require(state(proposalId) == ProposalState.Active, \"Governor: vote not currently active\");\n\n        uint256 weight = _getVotes(account, proposal.voteStart.getDeadline(), params);\n        _countVote(proposalId, account, support, weight, params);\n\n        if (params.length == 0) {\n            emit VoteCast(account, proposalId, support, weight, reason);\n        } else {\n            emit VoteCastWithParams(account, proposalId, support, weight, reason, params);\n        }\n\n        return weight;\n    }\n\n    /**\n     * @dev Relays a transaction or function call to an arbitrary target. In cases where the governance executor\n     * is some contract other than the governor itself, like when using a timelock, this function can be invoked\n     * in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake.\n     * Note that if the executor is simply the governor itself, use of `relay` is redundant.\n     */\n    function relay(\n        address target,\n        uint256 value,\n        bytes calldata data\n    ) external virtual onlyGovernance {\n        Address.functionCallWithValue(target, data, value);\n    }\n\n    /**\n     * @dev Address through which the governor executes action. Will be overloaded by module that execute actions\n     * through another contract such as a timelock.\n     */\n    function _executor() internal view virtual returns (address) {\n        return address(this);\n    }\n\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     */\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n\n    /**\n     * @dev See {IERC1155Receiver-onERC1155Received}.\n     */\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }\n\n    /**\n     * @dev See {IERC1155Receiver-onERC1155BatchReceived}.\n     */\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] memory,\n        uint256[] memory,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.3) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        } else if (error == RecoverError.InvalidSignatureV) {\n            revert(\"ECDSA: invalid signature 'v' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n        if (v != 27 && v != 28) {\n            return (address(0), RecoverError.InvalidSignatureV);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/cryptography/draft-EIP712.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ECDSA.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * _Available since v3.4._\n */\nabstract contract EIP712 {\n    /* solhint-disable var-name-mixedcase */\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _CACHED_DOMAIN_SEPARATOR;\n    uint256 private immutable _CACHED_CHAIN_ID;\n    address private immutable _CACHED_THIS;\n\n    bytes32 private immutable _HASHED_NAME;\n    bytes32 private immutable _HASHED_VERSION;\n    bytes32 private immutable _TYPE_HASH;\n\n    /* solhint-enable var-name-mixedcase */\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        bytes32 hashedName = keccak256(bytes(name));\n        bytes32 hashedVersion = keccak256(bytes(version));\n        bytes32 typeHash = keccak256(\n            \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n        );\n        _HASHED_NAME = hashedName;\n        _HASHED_VERSION = hashedVersion;\n        _CACHED_CHAIN_ID = block.chainid;\n        _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(typeHash, hashedName, hashedVersion);\n        _CACHED_THIS = address(this);\n        _TYPE_HASH = typeHash;\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _CACHED_THIS && block.chainid == _CACHED_CHAIN_ID) {\n            return _CACHED_DOMAIN_SEPARATOR;\n        } else {\n            return _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION);\n        }\n    }\n\n    function _buildDomainSeparator(\n        bytes32 typeHash,\n        bytes32 nameHash,\n        bytes32 versionHash\n    ) private view returns (bytes32) {\n        return keccak256(abi.encode(typeHash, nameHash, versionHash, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/math/SafeCast.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/math/SafeCast.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     *\n     * _Available since v3.0._\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt248(int256 value) internal pure returns (int248) {\n        require(value >= type(int248).min && value <= type(int248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return int248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt240(int256 value) internal pure returns (int240) {\n        require(value >= type(int240).min && value <= type(int240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return int240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt232(int256 value) internal pure returns (int232) {\n        require(value >= type(int232).min && value <= type(int232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return int232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt224(int256 value) internal pure returns (int224) {\n        require(value >= type(int224).min && value <= type(int224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return int224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt216(int256 value) internal pure returns (int216) {\n        require(value >= type(int216).min && value <= type(int216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return int216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt208(int256 value) internal pure returns (int208) {\n        require(value >= type(int208).min && value <= type(int208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return int208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt200(int256 value) internal pure returns (int200) {\n        require(value >= type(int200).min && value <= type(int200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return int200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt192(int256 value) internal pure returns (int192) {\n        require(value >= type(int192).min && value <= type(int192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return int192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt184(int256 value) internal pure returns (int184) {\n        require(value >= type(int184).min && value <= type(int184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return int184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt176(int256 value) internal pure returns (int176) {\n        require(value >= type(int176).min && value <= type(int176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return int176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt168(int256 value) internal pure returns (int168) {\n        require(value >= type(int168).min && value <= type(int168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return int168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt160(int256 value) internal pure returns (int160) {\n        require(value >= type(int160).min && value <= type(int160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return int160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt152(int256 value) internal pure returns (int152) {\n        require(value >= type(int152).min && value <= type(int152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return int152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt144(int256 value) internal pure returns (int144) {\n        require(value >= type(int144).min && value <= type(int144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return int144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt136(int256 value) internal pure returns (int136) {\n        require(value >= type(int136).min && value <= type(int136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return int136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128) {\n        require(value >= type(int128).min && value <= type(int128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return int128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt120(int256 value) internal pure returns (int120) {\n        require(value >= type(int120).min && value <= type(int120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return int120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt112(int256 value) internal pure returns (int112) {\n        require(value >= type(int112).min && value <= type(int112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return int112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt104(int256 value) internal pure returns (int104) {\n        require(value >= type(int104).min && value <= type(int104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return int104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt96(int256 value) internal pure returns (int96) {\n        require(value >= type(int96).min && value <= type(int96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return int96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt88(int256 value) internal pure returns (int88) {\n        require(value >= type(int88).min && value <= type(int88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return int88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt80(int256 value) internal pure returns (int80) {\n        require(value >= type(int80).min && value <= type(int80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return int80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt72(int256 value) internal pure returns (int72) {\n        require(value >= type(int72).min && value <= type(int72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return int72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64) {\n        require(value >= type(int64).min && value <= type(int64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return int64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt56(int256 value) internal pure returns (int56) {\n        require(value >= type(int56).min && value <= type(int56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return int56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt48(int256 value) internal pure returns (int48) {\n        require(value >= type(int48).min && value <= type(int48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return int48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt40(int256 value) internal pure returns (int40) {\n        require(value >= type(int40).min && value <= type(int40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return int40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32) {\n        require(value >= type(int32).min && value <= type(int32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return int32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt24(int256 value) internal pure returns (int24) {\n        require(value >= type(int24).min && value <= type(int24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return int24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16) {\n        require(value >= type(int16).min && value <= type(int16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return int16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8) {\n        require(value >= type(int8).min && value <= type(int8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return int8(value);\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     *\n     * _Available since v3.0._\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/structs/DoubleEndedQueue.sol)\npragma solidity ^0.8.4;\n\nimport \"../math/SafeCast.sol\";\n\n/**\n * @dev A sequence of items with the ability to efficiently push and pop items (i.e. insert and remove) on both ends of\n * the sequence (called front and back). Among other access patterns, it can be used to implement efficient LIFO and\n * FIFO queues. Storage use is optimized, and all operations are O(1) constant time. This includes {clear}, given that\n * the existing queue contents are left in storage.\n *\n * The struct is called `Bytes32Deque`. Other types can be cast to and from `bytes32`. This data structure can only be\n * used in storage, and not in memory.\n * ```\n * DoubleEndedQueue.Bytes32Deque queue;\n * ```\n *\n * _Available since v4.6._\n */\nlibrary DoubleEndedQueue {\n    /**\n     * @dev An operation (e.g. {front}) couldn't be completed due to the queue being empty.\n     */\n    error Empty();\n\n    /**\n     * @dev An operation (e.g. {at}) couldn't be completed due to an index being out of bounds.\n     */\n    error OutOfBounds();\n\n    /**\n     * @dev Indices are signed integers because the queue can grow in any direction. They are 128 bits so begin and end\n     * are packed in a single storage slot for efficient access. Since the items are added one at a time we can safely\n     * assume that these 128-bit indices will not overflow, and use unchecked arithmetic.\n     *\n     * Struct members have an underscore prefix indicating that they are \"private\" and should not be read or written to\n     * directly. Use the functions provided below instead. Modifying the struct manually may violate assumptions and\n     * lead to unexpected behavior.\n     *\n     * Indices are in the range [begin, end) which means the first item is at data[begin] and the last item is at\n     * data[end - 1].\n     */\n    struct Bytes32Deque {\n        int128 _begin;\n        int128 _end;\n        mapping(int128 => bytes32) _data;\n    }\n\n    /**\n     * @dev Inserts an item at the end of the queue.\n     */\n    function pushBack(Bytes32Deque storage deque, bytes32 value) internal {\n        int128 backIndex = deque._end;\n        deque._data[backIndex] = value;\n        unchecked {\n            deque._end = backIndex + 1;\n        }\n    }\n\n    /**\n     * @dev Removes the item at the end of the queue and returns it.\n     *\n     * Reverts with `Empty` if the queue is empty.\n     */\n    function popBack(Bytes32Deque storage deque) internal returns (bytes32 value) {\n        if (empty(deque)) revert Empty();\n        int128 backIndex;\n        unchecked {\n            backIndex = deque._end - 1;\n        }\n        value = deque._data[backIndex];\n        delete deque._data[backIndex];\n        deque._end = backIndex;\n    }\n\n    /**\n     * @dev Inserts an item at the beginning of the queue.\n     */\n    function pushFront(Bytes32Deque storage deque, bytes32 value) internal {\n        int128 frontIndex;\n        unchecked {\n            frontIndex = deque._begin - 1;\n        }\n        deque._data[frontIndex] = value;\n        deque._begin = frontIndex;\n    }\n\n    /**\n     * @dev Removes the item at the beginning of the queue and returns it.\n     *\n     * Reverts with `Empty` if the queue is empty.\n     */\n    function popFront(Bytes32Deque storage deque) internal returns (bytes32 value) {\n        if (empty(deque)) revert Empty();\n        int128 frontIndex = deque._begin;\n        value = deque._data[frontIndex];\n        delete deque._data[frontIndex];\n        unchecked {\n            deque._begin = frontIndex + 1;\n        }\n    }\n\n    /**\n     * @dev Returns the item at the beginning of the queue.\n     *\n     * Reverts with `Empty` if the queue is empty.\n     */\n    function front(Bytes32Deque storage deque) internal view returns (bytes32 value) {\n        if (empty(deque)) revert Empty();\n        int128 frontIndex = deque._begin;\n        return deque._data[frontIndex];\n    }\n\n    /**\n     * @dev Returns the item at the end of the queue.\n     *\n     * Reverts with `Empty` if the queue is empty.\n     */\n    function back(Bytes32Deque storage deque) internal view returns (bytes32 value) {\n        if (empty(deque)) revert Empty();\n        int128 backIndex;\n        unchecked {\n            backIndex = deque._end - 1;\n        }\n        return deque._data[backIndex];\n    }\n\n    /**\n     * @dev Return the item at a position in the queue given by `index`, with the first item at 0 and last item at\n     * `length(deque) - 1`.\n     *\n     * Reverts with `OutOfBounds` if the index is out of bounds.\n     */\n    function at(Bytes32Deque storage deque, uint256 index) internal view returns (bytes32 value) {\n        // int256(deque._begin) is a safe upcast\n        int128 idx = SafeCast.toInt128(int256(deque._begin) + SafeCast.toInt256(index));\n        if (idx >= deque._end) revert OutOfBounds();\n        return deque._data[idx];\n    }\n\n    /**\n     * @dev Resets the queue back to being empty.\n     *\n     * NOTE: The current items are left behind in storage. This does not affect the functioning of the queue, but misses\n     * out on potential gas refunds.\n     */\n    function clear(Bytes32Deque storage deque) internal {\n        deque._begin = 0;\n        deque._end = 0;\n    }\n\n    /**\n     * @dev Returns the number of items in the queue.\n     */\n    function length(Bytes32Deque storage deque) internal view returns (uint256) {\n        // The interface preserves the invariant that begin <= end so we assume this will not overflow.\n        // We also assume there are at most int256.max items in the queue.\n        unchecked {\n            return uint256(int256(deque._end) - int256(deque._begin));\n        }\n    }\n\n    /**\n     * @dev Returns true if the queue is empty.\n     */\n    function empty(Bytes32Deque storage deque) internal view returns (bool) {\n        return deque._end <= deque._begin;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Timers.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Timers.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Tooling for timepoints, timers and delays\n */\nlibrary Timers {\n    struct Timestamp {\n        uint64 _deadline;\n    }\n\n    function getDeadline(Timestamp memory timer) internal pure returns (uint64) {\n        return timer._deadline;\n    }\n\n    function setDeadline(Timestamp storage timer, uint64 timestamp) internal {\n        timer._deadline = timestamp;\n    }\n\n    function reset(Timestamp storage timer) internal {\n        timer._deadline = 0;\n    }\n\n    function isUnset(Timestamp memory timer) internal pure returns (bool) {\n        return timer._deadline == 0;\n    }\n\n    function isStarted(Timestamp memory timer) internal pure returns (bool) {\n        return timer._deadline > 0;\n    }\n\n    function isPending(Timestamp memory timer) internal view returns (bool) {\n        return timer._deadline > block.timestamp;\n    }\n\n    function isExpired(Timestamp memory timer) internal view returns (bool) {\n        return isStarted(timer) && timer._deadline <= block.timestamp;\n    }\n\n    struct BlockNumber {\n        uint64 _deadline;\n    }\n\n    function getDeadline(BlockNumber memory timer) internal pure returns (uint64) {\n        return timer._deadline;\n    }\n\n    function setDeadline(BlockNumber storage timer, uint64 timestamp) internal {\n        timer._deadline = timestamp;\n    }\n\n    function reset(BlockNumber storage timer) internal {\n        timer._deadline = 0;\n    }\n\n    function isUnset(BlockNumber memory timer) internal pure returns (bool) {\n        return timer._deadline == 0;\n    }\n\n    function isStarted(BlockNumber memory timer) internal pure returns (bool) {\n        return timer._deadline > 0;\n    }\n\n    function isPending(BlockNumber memory timer) internal view returns (bool) {\n        return timer._deadline > block.number;\n    }\n\n    function isExpired(BlockNumber memory timer) internal view returns (bool) {\n        return isStarted(timer) && timer._deadline <= block.number;\n    }\n}\n"
      },
      "@openzeppelin/contracts/governance/IGovernor.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.2) (governance/IGovernor.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Interface of the {Governor} core.\n *\n * _Available since v4.3._\n */\nabstract contract IGovernor is IERC165 {\n    enum ProposalState {\n        Pending,\n        Active,\n        Canceled,\n        Defeated,\n        Succeeded,\n        Queued,\n        Expired,\n        Executed\n    }\n\n    /**\n     * @dev Emitted when a proposal is created.\n     */\n    event ProposalCreated(\n        uint256 proposalId,\n        address proposer,\n        address[] targets,\n        uint256[] values,\n        string[] signatures,\n        bytes[] calldatas,\n        uint256 startBlock,\n        uint256 endBlock,\n        string description\n    );\n\n    /**\n     * @dev Emitted when a proposal is canceled.\n     */\n    event ProposalCanceled(uint256 proposalId);\n\n    /**\n     * @dev Emitted when a proposal is executed.\n     */\n    event ProposalExecuted(uint256 proposalId);\n\n    /**\n     * @dev Emitted when a vote is cast without params.\n     *\n     * Note: `support` values should be seen as buckets. Their interpretation depends on the voting module used.\n     */\n    event VoteCast(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason);\n\n    /**\n     * @dev Emitted when a vote is cast with params.\n     *\n     * Note: `support` values should be seen as buckets. Their interpretation depends on the voting module used.\n     * `params` are additional encoded parameters. Their intepepretation also depends on the voting module used.\n     */\n    event VoteCastWithParams(\n        address indexed voter,\n        uint256 proposalId,\n        uint8 support,\n        uint256 weight,\n        string reason,\n        bytes params\n    );\n\n    /**\n     * @notice module:core\n     * @dev Name of the governor instance (used in building the ERC712 domain separator).\n     */\n    function name() public view virtual returns (string memory);\n\n    /**\n     * @notice module:core\n     * @dev Version of the governor instance (used in building the ERC712 domain separator). Default: \"1\"\n     */\n    function version() public view virtual returns (string memory);\n\n    /**\n     * @notice module:voting\n     * @dev A description of the possible `support` values for {castVote} and the way these votes are counted, meant to\n     * be consumed by UIs to show correct vote options and interpret the results. The string is a URL-encoded sequence of\n     * key-value pairs that each describe one aspect, for example `support=bravo&quorum=for,abstain`.\n     *\n     * There are 2 standard keys: `support` and `quorum`.\n     *\n     * - `support=bravo` refers to the vote options 0 = Against, 1 = For, 2 = Abstain, as in `GovernorBravo`.\n     * - `quorum=bravo` means that only For votes are counted towards quorum.\n     * - `quorum=for,abstain` means that both For and Abstain votes are counted towards quorum.\n     *\n     * If a counting module makes use of encoded `params`, it should  include this under a `params` key with a unique\n     * name that describes the behavior. For example:\n     *\n     * - `params=fractional` might refer to a scheme where votes are divided fractionally between for/against/abstain.\n     * - `params=erc721` might refer to a scheme where specific NFTs are delegated to vote.\n     *\n     * NOTE: The string can be decoded by the standard\n     * https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams[`URLSearchParams`]\n     * JavaScript class.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function COUNTING_MODE() public pure virtual returns (string memory);\n\n    /**\n     * @notice module:core\n     * @dev Hashing function used to (re)build the proposal id from the proposal details..\n     */\n    function hashProposal(\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        bytes32 descriptionHash\n    ) public pure virtual returns (uint256);\n\n    /**\n     * @notice module:core\n     * @dev Current state of a proposal, following Compound's convention\n     */\n    function state(uint256 proposalId) public view virtual returns (ProposalState);\n\n    /**\n     * @notice module:core\n     * @dev Block number used to retrieve user's votes and quorum. As per Compound's Comp and OpenZeppelin's\n     * ERC20Votes, the snapshot is performed at the end of this block. Hence, voting for this proposal starts at the\n     * beginning of the following block.\n     */\n    function proposalSnapshot(uint256 proposalId) public view virtual returns (uint256);\n\n    /**\n     * @notice module:core\n     * @dev Block number at which votes close. Votes close at the end of this block, so it is possible to cast a vote\n     * during this block.\n     */\n    function proposalDeadline(uint256 proposalId) public view virtual returns (uint256);\n\n    /**\n     * @notice module:user-config\n     * @dev Delay, in number of block, between the proposal is created and the vote starts. This can be increassed to\n     * leave time for users to buy voting power, or delegate it, before the voting of a proposal starts.\n     */\n    function votingDelay() public view virtual returns (uint256);\n\n    /**\n     * @notice module:user-config\n     * @dev Delay, in number of blocks, between the vote start and vote ends.\n     *\n     * NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting\n     * duration compared to the voting delay.\n     */\n    function votingPeriod() public view virtual returns (uint256);\n\n    /**\n     * @notice module:user-config\n     * @dev Minimum number of cast voted required for a proposal to be successful.\n     *\n     * Note: The `blockNumber` parameter corresponds to the snapshot used for counting vote. This allows to scale the\n     * quorum depending on values such as the totalSupply of a token at this block (see {ERC20Votes}).\n     */\n    function quorum(uint256 blockNumber) public view virtual returns (uint256);\n\n    /**\n     * @notice module:reputation\n     * @dev Voting power of an `account` at a specific `blockNumber`.\n     *\n     * Note: this can be implemented in a number of ways, for example by reading the delegated balance from one (or\n     * multiple), {ERC20Votes} tokens.\n     */\n    function getVotes(address account, uint256 blockNumber) public view virtual returns (uint256);\n\n    /**\n     * @notice module:reputation\n     * @dev Voting power of an `account` at a specific `blockNumber` given additional encoded parameters.\n     */\n    function getVotesWithParams(\n        address account,\n        uint256 blockNumber,\n        bytes memory params\n    ) public view virtual returns (uint256);\n\n    /**\n     * @notice module:voting\n     * @dev Returns weither `account` has cast a vote on `proposalId`.\n     */\n    function hasVoted(uint256 proposalId, address account) public view virtual returns (bool);\n\n    /**\n     * @dev Create a new proposal. Vote start {IGovernor-votingDelay} blocks after the proposal is created and ends\n     * {IGovernor-votingPeriod} blocks after the voting starts.\n     *\n     * Emits a {ProposalCreated} event.\n     */\n    function propose(\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        string memory description\n    ) public virtual returns (uint256 proposalId);\n\n    /**\n     * @dev Execute a successful proposal. This requires the quorum to be reached, the vote to be successful, and the\n     * deadline to be reached.\n     *\n     * Emits a {ProposalExecuted} event.\n     *\n     * Note: some module can modify the requirements for execution, for example by adding an additional timelock.\n     */\n    function execute(\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        bytes32 descriptionHash\n    ) public payable virtual returns (uint256 proposalId);\n\n    /**\n     * @dev Cast a vote\n     *\n     * Emits a {VoteCast} event.\n     */\n    function castVote(uint256 proposalId, uint8 support) public virtual returns (uint256 balance);\n\n    /**\n     * @dev Cast a vote with a reason\n     *\n     * Emits a {VoteCast} event.\n     */\n    function castVoteWithReason(\n        uint256 proposalId,\n        uint8 support,\n        string calldata reason\n    ) public virtual returns (uint256 balance);\n\n    /**\n     * @dev Cast a vote with a reason and additional encoded parameters\n     *\n     * Emits a {VoteCast} or {VoteCastWithParams} event depending on the length of params.\n     */\n    function castVoteWithReasonAndParams(\n        uint256 proposalId,\n        uint8 support,\n        string calldata reason,\n        bytes memory params\n    ) public virtual returns (uint256 balance);\n\n    /**\n     * @dev Cast a vote using the user's cryptographic signature.\n     *\n     * Emits a {VoteCast} event.\n     */\n    function castVoteBySig(\n        uint256 proposalId,\n        uint8 support,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual returns (uint256 balance);\n\n    /**\n     * @dev Cast a vote with a reason and additional encoded parameters using the user's cryptographic signature.\n     *\n     * Emits a {VoteCast} or {VoteCastWithParams} event depending on the length of params.\n     */\n    function castVoteWithReasonAndParamsBySig(\n        uint256 proposalId,\n        uint8 support,\n        string calldata reason,\n        bytes memory params,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual returns (uint256 balance);\n}\n"
      },
      "contracts/DummyGovernor.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/governance/Governor.sol\";\nimport \"@openzeppelin/contracts/governance/extensions/GovernorSettings.sol\";\nimport \"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol\";\nimport \"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol\";\n\ncontract DummyGovernor is Governor, GovernorSettings, GovernorCountingSimple {\n  uint256[] public proposalsId;\n\n  struct ProposalInfo {\n    address[] targets;\n    uint256[] values;\n    bytes[] calldatas;\n    string description;\n  }\n\n  mapping(uint256 => ProposalInfo) private _proposalsInfo;\n\n  constructor()\n    Governor(\"DummyGovernor\")\n    GovernorSettings(\n      1, /* 1 block */\n      5, /* 1 minute */\n      0\n    )\n  {}\n\n  function getAllProposalsId() public view returns (uint256[] memory) {\n    return proposalsId;\n  }\n\n  function getProposal(uint256 proposalId) public view returns (ProposalInfo memory) {\n    return _proposalsInfo[proposalId];\n  }\n\n  function quorum(uint256 blockNumber) public pure override returns (uint256) {\n    return 0e18;\n  }\n\n  function _quorumReached(uint256 proposalId)\n    internal\n    pure\n    override(Governor, GovernorCountingSimple)\n    returns (bool)\n  {\n    return true;\n  }\n\n  function _countVote(\n    uint256 proposalId,\n    address account,\n    uint8 support,\n    uint256 weight,\n    bytes memory // params\n  ) internal pure override(Governor, GovernorCountingSimple) {}\n  \n\n  function _voteSucceeded(uint256 proposalId)\n    internal\n    pure\n    override(Governor, GovernorCountingSimple)\n    returns (bool)\n  {\n    return true;\n  }\n\n  function _getVotes(\n    address account,\n    uint256 blockNumber,\n    bytes memory /*params*/\n  ) internal view virtual override returns (uint256) {\n    return 1;\n  }\n\n  // The following functions are overrides required by Solidity.\n\n  function propose(\n    address[] memory targets,\n    uint256[] memory values,\n    bytes[] memory calldatas,\n    string memory description\n  ) public override(Governor) returns (uint256) {\n    uint256 proposalId = super.propose(targets, values, calldatas, description);\n\n    proposalsId.push(proposalId);\n    _proposalsInfo[proposalId] = ProposalInfo(targets, values, calldatas, description);\n\n    return proposalId;\n  }\n\n  function votingDelay() public view override(IGovernor, GovernorSettings) returns (uint256) {\n    return super.votingDelay();\n  }\n\n  function votingPeriod() public view override(IGovernor, GovernorSettings) returns (uint256) {\n    return super.votingPeriod();\n  }\n\n  function proposalThreshold() public view override(Governor, GovernorSettings) returns (uint256) {\n    return super.proposalThreshold();\n  }\n}\n"
      },
      "@openzeppelin/contracts/governance/extensions/GovernorSettings.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (governance/extensions/GovernorSettings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Governor.sol\";\n\n/**\n * @dev Extension of {Governor} for settings updatable through governance.\n *\n * _Available since v4.4._\n */\nabstract contract GovernorSettings is Governor {\n    uint256 private _votingDelay;\n    uint256 private _votingPeriod;\n    uint256 private _proposalThreshold;\n\n    event VotingDelaySet(uint256 oldVotingDelay, uint256 newVotingDelay);\n    event VotingPeriodSet(uint256 oldVotingPeriod, uint256 newVotingPeriod);\n    event ProposalThresholdSet(uint256 oldProposalThreshold, uint256 newProposalThreshold);\n\n    /**\n     * @dev Initialize the governance parameters.\n     */\n    constructor(\n        uint256 initialVotingDelay,\n        uint256 initialVotingPeriod,\n        uint256 initialProposalThreshold\n    ) {\n        _setVotingDelay(initialVotingDelay);\n        _setVotingPeriod(initialVotingPeriod);\n        _setProposalThreshold(initialProposalThreshold);\n    }\n\n    /**\n     * @dev See {IGovernor-votingDelay}.\n     */\n    function votingDelay() public view virtual override returns (uint256) {\n        return _votingDelay;\n    }\n\n    /**\n     * @dev See {IGovernor-votingPeriod}.\n     */\n    function votingPeriod() public view virtual override returns (uint256) {\n        return _votingPeriod;\n    }\n\n    /**\n     * @dev See {Governor-proposalThreshold}.\n     */\n    function proposalThreshold() public view virtual override returns (uint256) {\n        return _proposalThreshold;\n    }\n\n    /**\n     * @dev Update the voting delay. This operation can only be performed through a governance proposal.\n     *\n     * Emits a {VotingDelaySet} event.\n     */\n    function setVotingDelay(uint256 newVotingDelay) public virtual onlyGovernance {\n        _setVotingDelay(newVotingDelay);\n    }\n\n    /**\n     * @dev Update the voting period. This operation can only be performed through a governance proposal.\n     *\n     * Emits a {VotingPeriodSet} event.\n     */\n    function setVotingPeriod(uint256 newVotingPeriod) public virtual onlyGovernance {\n        _setVotingPeriod(newVotingPeriod);\n    }\n\n    /**\n     * @dev Update the proposal threshold. This operation can only be performed through a governance proposal.\n     *\n     * Emits a {ProposalThresholdSet} event.\n     */\n    function setProposalThreshold(uint256 newProposalThreshold) public virtual onlyGovernance {\n        _setProposalThreshold(newProposalThreshold);\n    }\n\n    /**\n     * @dev Internal setter for the voting delay.\n     *\n     * Emits a {VotingDelaySet} event.\n     */\n    function _setVotingDelay(uint256 newVotingDelay) internal virtual {\n        emit VotingDelaySet(_votingDelay, newVotingDelay);\n        _votingDelay = newVotingDelay;\n    }\n\n    /**\n     * @dev Internal setter for the voting period.\n     *\n     * Emits a {VotingPeriodSet} event.\n     */\n    function _setVotingPeriod(uint256 newVotingPeriod) internal virtual {\n        // voting period must be at least one block long\n        require(newVotingPeriod > 0, \"GovernorSettings: voting period too low\");\n        emit VotingPeriodSet(_votingPeriod, newVotingPeriod);\n        _votingPeriod = newVotingPeriod;\n    }\n\n    /**\n     * @dev Internal setter for the proposal threshold.\n     *\n     * Emits a {ProposalThresholdSet} event.\n     */\n    function _setProposalThreshold(uint256 newProposalThreshold) internal virtual {\n        emit ProposalThresholdSet(_proposalThreshold, newProposalThreshold);\n        _proposalThreshold = newProposalThreshold;\n    }\n}\n"
      },
      "@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (governance/extensions/GovernorCountingSimple.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Governor.sol\";\n\n/**\n * @dev Extension of {Governor} for simple, 3 options, vote counting.\n *\n * _Available since v4.3._\n */\nabstract contract GovernorCountingSimple is Governor {\n    /**\n     * @dev Supported vote types. Matches Governor Bravo ordering.\n     */\n    enum VoteType {\n        Against,\n        For,\n        Abstain\n    }\n\n    struct ProposalVote {\n        uint256 againstVotes;\n        uint256 forVotes;\n        uint256 abstainVotes;\n        mapping(address => bool) hasVoted;\n    }\n\n    mapping(uint256 => ProposalVote) private _proposalVotes;\n\n    /**\n     * @dev See {IGovernor-COUNTING_MODE}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function COUNTING_MODE() public pure virtual override returns (string memory) {\n        return \"support=bravo&quorum=for,abstain\";\n    }\n\n    /**\n     * @dev See {IGovernor-hasVoted}.\n     */\n    function hasVoted(uint256 proposalId, address account) public view virtual override returns (bool) {\n        return _proposalVotes[proposalId].hasVoted[account];\n    }\n\n    /**\n     * @dev Accessor to the internal vote counts.\n     */\n    function proposalVotes(uint256 proposalId)\n        public\n        view\n        virtual\n        returns (\n            uint256 againstVotes,\n            uint256 forVotes,\n            uint256 abstainVotes\n        )\n    {\n        ProposalVote storage proposalvote = _proposalVotes[proposalId];\n        return (proposalvote.againstVotes, proposalvote.forVotes, proposalvote.abstainVotes);\n    }\n\n    /**\n     * @dev See {Governor-_quorumReached}.\n     */\n    function _quorumReached(uint256 proposalId) internal view virtual override returns (bool) {\n        ProposalVote storage proposalvote = _proposalVotes[proposalId];\n\n        return quorum(proposalSnapshot(proposalId)) <= proposalvote.forVotes + proposalvote.abstainVotes;\n    }\n\n    /**\n     * @dev See {Governor-_voteSucceeded}. In this module, the forVotes must be strictly over the againstVotes.\n     */\n    function _voteSucceeded(uint256 proposalId) internal view virtual override returns (bool) {\n        ProposalVote storage proposalvote = _proposalVotes[proposalId];\n\n        return proposalvote.forVotes > proposalvote.againstVotes;\n    }\n\n    /**\n     * @dev See {Governor-_countVote}. In this module, the support follows the `VoteType` enum (from Governor Bravo).\n     */\n    function _countVote(\n        uint256 proposalId,\n        address account,\n        uint8 support,\n        uint256 weight,\n        bytes memory // params\n    ) internal virtual override {\n        ProposalVote storage proposalvote = _proposalVotes[proposalId];\n\n        require(!proposalvote.hasVoted[account], \"GovernorVotingSimple: vote already cast\");\n        proposalvote.hasVoted[account] = true;\n\n        if (support == uint8(VoteType.Against)) {\n            proposalvote.againstVotes += weight;\n        } else if (support == uint8(VoteType.For)) {\n            proposalvote.forVotes += weight;\n        } else if (support == uint8(VoteType.Abstain)) {\n            proposalvote.abstainVotes += weight;\n        } else {\n            revert(\"GovernorVotingSimple: invalid value for enum VoteType\");\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/governance/extensions/GovernorVotes.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (governance/extensions/GovernorVotes.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Governor.sol\";\nimport \"../utils/IVotes.sol\";\n\n/**\n * @dev Extension of {Governor} for voting weight extraction from an {ERC20Votes} token, or since v4.5 an {ERC721Votes} token.\n *\n * _Available since v4.3._\n */\nabstract contract GovernorVotes is Governor {\n    IVotes public immutable token;\n\n    constructor(IVotes tokenAddress) {\n        token = tokenAddress;\n    }\n\n    /**\n     * Read the voting weight from the token's built in snapshot mechanism (see {Governor-_getVotes}).\n     */\n    function _getVotes(\n        address account,\n        uint256 blockNumber,\n        bytes memory /*params*/\n    ) internal view virtual override returns (uint256) {\n        return token.getPastVotes(account, blockNumber);\n    }\n}\n"
      },
      "@openzeppelin/contracts/governance/utils/IVotes.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.0;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n *\n * _Available since v4.5._\n */\ninterface IVotes {\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\n     */\n    function getPastVotes(address account, uint256 blockNumber) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 blockNumber) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n"
      },
      "@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.2) (governance/extensions/GovernorVotesQuorumFraction.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./GovernorVotes.sol\";\nimport \"../../utils/Checkpoints.sol\";\nimport \"../../utils/math/SafeCast.sol\";\n\n/**\n * @dev Extension of {Governor} for voting weight extraction from an {ERC20Votes} token and a quorum expressed as a\n * fraction of the total supply.\n *\n * _Available since v4.3._\n */\nabstract contract GovernorVotesQuorumFraction is GovernorVotes {\n    using Checkpoints for Checkpoints.History;\n\n    uint256 private _quorumNumerator; // DEPRECATED\n    Checkpoints.History private _quorumNumeratorHistory;\n\n    event QuorumNumeratorUpdated(uint256 oldQuorumNumerator, uint256 newQuorumNumerator);\n\n    /**\n     * @dev Initialize quorum as a fraction of the token's total supply.\n     *\n     * The fraction is specified as `numerator / denominator`. By default the denominator is 100, so quorum is\n     * specified as a percent: a numerator of 10 corresponds to quorum being 10% of total supply. The denominator can be\n     * customized by overriding {quorumDenominator}.\n     */\n    constructor(uint256 quorumNumeratorValue) {\n        _updateQuorumNumerator(quorumNumeratorValue);\n    }\n\n    /**\n     * @dev Returns the current quorum numerator. See {quorumDenominator}.\n     */\n    function quorumNumerator() public view virtual returns (uint256) {\n        return _quorumNumeratorHistory._checkpoints.length == 0 ? _quorumNumerator : _quorumNumeratorHistory.latest();\n    }\n\n    /**\n     * @dev Returns the quorum numerator at a specific block number. See {quorumDenominator}.\n     */\n    function quorumNumerator(uint256 blockNumber) public view virtual returns (uint256) {\n        // If history is empty, fallback to old storage\n        uint256 length = _quorumNumeratorHistory._checkpoints.length;\n        if (length == 0) {\n            return _quorumNumerator;\n        }\n\n        // Optimistic search, check the latest checkpoint\n        Checkpoints.Checkpoint memory latest = _quorumNumeratorHistory._checkpoints[length - 1];\n        if (latest._blockNumber <= blockNumber) {\n            return latest._value;\n        }\n\n        // Otherwize, do the binary search\n        return _quorumNumeratorHistory.getAtBlock(blockNumber);\n    }\n\n    /**\n     * @dev Returns the quorum denominator. Defaults to 100, but may be overridden.\n     */\n    function quorumDenominator() public view virtual returns (uint256) {\n        return 100;\n    }\n\n    /**\n     * @dev Returns the quorum for a block number, in terms of number of votes: `supply * numerator / denominator`.\n     */\n    function quorum(uint256 blockNumber) public view virtual override returns (uint256) {\n        return (token.getPastTotalSupply(blockNumber) * quorumNumerator(blockNumber)) / quorumDenominator();\n    }\n\n    /**\n     * @dev Changes the quorum numerator.\n     *\n     * Emits a {QuorumNumeratorUpdated} event.\n     *\n     * Requirements:\n     *\n     * - Must be called through a governance proposal.\n     * - New numerator must be smaller or equal to the denominator.\n     */\n    function updateQuorumNumerator(uint256 newQuorumNumerator) external virtual onlyGovernance {\n        _updateQuorumNumerator(newQuorumNumerator);\n    }\n\n    /**\n     * @dev Changes the quorum numerator.\n     *\n     * Emits a {QuorumNumeratorUpdated} event.\n     *\n     * Requirements:\n     *\n     * - New numerator must be smaller or equal to the denominator.\n     */\n    function _updateQuorumNumerator(uint256 newQuorumNumerator) internal virtual {\n        require(\n            newQuorumNumerator <= quorumDenominator(),\n            \"GovernorVotesQuorumFraction: quorumNumerator over quorumDenominator\"\n        );\n\n        uint256 oldQuorumNumerator = quorumNumerator();\n\n        // Make sure we keep track of the original numerator in contracts upgraded from a version without checkpoints.\n        if (oldQuorumNumerator != 0 && _quorumNumeratorHistory._checkpoints.length == 0) {\n            _quorumNumeratorHistory._checkpoints.push(\n                Checkpoints.Checkpoint({_blockNumber: 0, _value: SafeCast.toUint224(oldQuorumNumerator)})\n            );\n        }\n\n        // Set new quorum for future proposals\n        _quorumNumeratorHistory.push(newQuorumNumerator);\n\n        emit QuorumNumeratorUpdated(oldQuorumNumerator, newQuorumNumerator);\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Checkpoints.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Checkpoints.sol)\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SafeCast.sol\";\n\n/**\n * @dev This library defines the `History` struct, for checkpointing values as they change at different points in\n * time, and later looking up past values by block number. See {Votes} as an example.\n *\n * To create a history of checkpoints define a variable type `Checkpoints.History` in your contract, and store a new\n * checkpoint for the current transaction block using the {push} function.\n *\n * _Available since v4.5._\n */\nlibrary Checkpoints {\n    struct Checkpoint {\n        uint32 _blockNumber;\n        uint224 _value;\n    }\n\n    struct History {\n        Checkpoint[] _checkpoints;\n    }\n\n    /**\n     * @dev Returns the value in the latest checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(History storage self) internal view returns (uint256) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : self._checkpoints[pos - 1]._value;\n    }\n\n    /**\n     * @dev Returns the value at a given block number. If a checkpoint is not available at that block, the closest one\n     * before it is returned, or zero otherwise.\n     */\n    function getAtBlock(History storage self, uint256 blockNumber) internal view returns (uint256) {\n        require(blockNumber < block.number, \"Checkpoints: block not yet mined\");\n\n        uint256 high = self._checkpoints.length;\n        uint256 low = 0;\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (self._checkpoints[mid]._blockNumber > blockNumber) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high == 0 ? 0 : self._checkpoints[high - 1]._value;\n    }\n\n    /**\n     * @dev Pushes a value onto a History so that it is stored as the checkpoint for the current block.\n     *\n     * Returns previous value and new value.\n     */\n    function push(History storage self, uint256 value) internal returns (uint256, uint256) {\n        uint256 pos = self._checkpoints.length;\n        uint256 old = latest(self);\n        if (pos > 0 && self._checkpoints[pos - 1]._blockNumber == block.number) {\n            self._checkpoints[pos - 1]._value = SafeCast.toUint224(value);\n        } else {\n            self._checkpoints.push(\n                Checkpoint({_blockNumber: SafeCast.toUint32(block.number), _value: SafeCast.toUint224(value)})\n            );\n        }\n        return (old, value);\n    }\n\n    /**\n     * @dev Pushes a value onto a History, by updating the latest value using binary operation `op`. The new value will\n     * be set to `op(latest, delta)`.\n     *\n     * Returns previous value and new value.\n     */\n    function push(\n        History storage self,\n        function(uint256, uint256) view returns (uint256) op,\n        uint256 delta\n    ) internal returns (uint256, uint256) {\n        return push(self, op(latest(self), delta));\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/math/Math.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`.\n        // We also know that `k`, the position of the most significant bit, is such that `msb(a) = 2**k`.\n        // This gives `2**k < a <= 2**(k+1)` → `2**(k/2) <= sqrt(a) < 2 ** (k/2+1)`.\n        // Using an algorithm similar to the msb conmputation, we are able to compute `result = 2**(k/2)` which is a\n        // good first aproximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1;\n        uint256 x = a;\n        if (x >> 128 > 0) {\n            x >>= 128;\n            result <<= 64;\n        }\n        if (x >> 64 > 0) {\n            x >>= 64;\n            result <<= 32;\n        }\n        if (x >> 32 > 0) {\n            x >>= 32;\n            result <<= 16;\n        }\n        if (x >> 16 > 0) {\n            x >>= 16;\n            result <<= 8;\n        }\n        if (x >> 8 > 0) {\n            x >>= 8;\n            result <<= 4;\n        }\n        if (x >> 4 > 0) {\n            x >>= 4;\n            result <<= 2;\n        }\n        if (x >> 2 > 0) {\n            result <<= 1;\n        }\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = sqrt(a);\n        if (rounding == Rounding.Up && result * result < a) {\n            result += 1;\n        }\n        return result;\n    }\n}\n"
      },
      "contracts/DaoNat.sol": {
        "content": "// contracts/Box.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/governance/Governor.sol\";\nimport \"@openzeppelin/contracts/governance/extensions/GovernorSettings.sol\";\nimport \"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol\";\nimport \"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol\";\nimport \"@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol\";\nimport \"@openzeppelin/contracts/governance/extensions/GovernorTimelockControl.sol\";\n\n/// @title A box containing some hex color\n/// @author Mr Tumeric A. Gardner\n/// @notice You can use this contract for only the most basic simulation\n/// @dev All function calls are currently implemented without..\n/// @custom:experimental This is an experimental contract.\ncontract DaoNat is\n  Ownable,\n  Governor,\n  GovernorSettings,\n  GovernorCountingSimple,\n  GovernorVotes,\n  GovernorVotesQuorumFraction,\n  GovernorTimelockControl,\n  ReentrancyGuard\n{\n  uint256[] public proposalsId;\n\n  struct ClearProposal {\n    address[] targets;\n    uint256[] values;\n    bytes[] calldatas;\n    string description;\n  }\n\n  mapping(uint256 => ClearProposal) private _clearProposals;\n\n  /// @notice Returns public state (automatic accessor, also using this opportunity to add more content to test a rather long NatSpec)\n  string public aPublicString = \"So public\";\n\n  /**\n   * @notice Some struct example\n   * @member coolName Simple string\n   * @member coolLevel Simple uint\n   * @custom:member coolName Simple string\n   * @custom:member coolLevel Simple uint\n   */\n  struct CoolStruct {\n    string coolName;\n    uint256 coolLevel;\n  }\n\n  ///@notice An event\n  event Nothing(string anyThing);\n\n  constructor(\n    uint256 _anyNumber,\n    IVotes _testAddressToken,\n    TimelockController _testAddressTimeLock\n  )\n    Governor(\"GovernanceOrchestrator\")\n    GovernorSettings(_anyNumber, _anyNumber, 0)\n    GovernorVotes(_testAddressToken)\n    GovernorVotesQuorumFraction(_anyNumber)\n    GovernorTimelockControl(_testAddressTimeLock)\n  {}\n\n  function getAllProposalsId() public view returns (uint256[] memory) {\n    return proposalsId;\n  }\n\n  function getProposal(uint256 proposalId) public view returns (ClearProposal memory) {\n    return _clearProposals[proposalId];\n  }\n\n  // The following functions are overrides required by Governor.\n\n  function votingDelay() public view override(IGovernor, GovernorSettings) returns (uint256) {\n    return super.votingDelay();\n  }\n\n  function votingPeriod() public view override(IGovernor, GovernorSettings) returns (uint256) {\n    return super.votingPeriod();\n  }\n\n  function quorum(uint256 blockNumber)\n    public\n    view\n    override(IGovernor, GovernorVotesQuorumFraction)\n    returns (uint256)\n  {\n    return super.quorum(blockNumber);\n  }\n\n  function getVotes(address account, uint256 blockNumber)\n    public\n    view\n    override(IGovernor, Governor)\n    returns (uint256)\n  {\n    return super.getVotes(account, blockNumber);\n  }\n\n  function state(uint256 proposalId)\n    public\n    view\n    override(Governor, GovernorTimelockControl)\n    returns (ProposalState)\n  {\n    return super.state(proposalId);\n  }\n\n  function propose(\n    address[] memory targets,\n    uint256[] memory values,\n    bytes[] memory calldatas,\n    string memory description\n  ) public override(Governor, IGovernor) returns (uint256) {\n    uint256 proposalId = super.propose(targets, values, calldatas, description);\n\n    proposalsId.push(proposalId);\n    _clearProposals[proposalId] = ClearProposal(targets, values, calldatas, description);\n\n    return proposalId;\n  }\n\n  function proposalThreshold() public view override(Governor, GovernorSettings) returns (uint256) {\n    return super.proposalThreshold();\n  }\n\n  function _execute(\n    uint256 proposalId,\n    address[] memory targets,\n    uint256[] memory values,\n    bytes[] memory calldatas,\n    bytes32 descriptionHash\n  ) internal override(Governor, GovernorTimelockControl) {\n    super._execute(proposalId, targets, values, calldatas, descriptionHash);\n  }\n\n  function _cancel(\n    address[] memory targets,\n    uint256[] memory values,\n    bytes[] memory calldatas,\n    bytes32 descriptionHash\n  ) internal override(Governor, GovernorTimelockControl) returns (uint256) {\n    return super._cancel(targets, values, calldatas, descriptionHash);\n  }\n\n  function _executor() internal view override(Governor, GovernorTimelockControl) returns (address) {\n    return super._executor();\n  }\n\n  function supportsInterface(bytes4 interfaceId)\n    public\n    view\n    override(Governor, GovernorTimelockControl)\n    returns (bool)\n  {\n    return super.supportsInterface(interfaceId);\n  }\n}\n"
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
      },
      "@openzeppelin/contracts/governance/extensions/GovernorTimelockControl.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (governance/extensions/GovernorTimelockControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IGovernorTimelock.sol\";\nimport \"../Governor.sol\";\nimport \"../TimelockController.sol\";\n\n/**\n * @dev Extension of {Governor} that binds the execution process to an instance of {TimelockController}. This adds a\n * delay, enforced by the {TimelockController} to all successful proposal (in addition to the voting duration). The\n * {Governor} needs the proposer (and ideally the executor) roles for the {Governor} to work properly.\n *\n * Using this model means the proposal will be operated by the {TimelockController} and not by the {Governor}. Thus,\n * the assets and permissions must be attached to the {TimelockController}. Any asset sent to the {Governor} will be\n * inaccessible.\n *\n * WARNING: Setting up the TimelockController to have additional proposers besides the governor is very risky, as it\n * grants them powers that they must be trusted or known not to use: 1) {onlyGovernance} functions like {relay} are\n * available to them through the timelock, and 2) approved governance proposals can be blocked by them, effectively\n * executing a Denial of Service attack. This risk will be mitigated in a future release.\n *\n * _Available since v4.3._\n */\nabstract contract GovernorTimelockControl is IGovernorTimelock, Governor {\n    TimelockController private _timelock;\n    mapping(uint256 => bytes32) private _timelockIds;\n\n    /**\n     * @dev Emitted when the timelock controller used for proposal execution is modified.\n     */\n    event TimelockChange(address oldTimelock, address newTimelock);\n\n    /**\n     * @dev Set the timelock.\n     */\n    constructor(TimelockController timelockAddress) {\n        _updateTimelock(timelockAddress);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, Governor) returns (bool) {\n        return interfaceId == type(IGovernorTimelock).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Overridden version of the {Governor-state} function with added support for the `Queued` status.\n     */\n    function state(uint256 proposalId) public view virtual override(IGovernor, Governor) returns (ProposalState) {\n        ProposalState status = super.state(proposalId);\n\n        if (status != ProposalState.Succeeded) {\n            return status;\n        }\n\n        // core tracks execution, so we just have to check if successful proposal have been queued.\n        bytes32 queueid = _timelockIds[proposalId];\n        if (queueid == bytes32(0)) {\n            return status;\n        } else if (_timelock.isOperationDone(queueid)) {\n            return ProposalState.Executed;\n        } else if (_timelock.isOperationPending(queueid)) {\n            return ProposalState.Queued;\n        } else {\n            return ProposalState.Canceled;\n        }\n    }\n\n    /**\n     * @dev Public accessor to check the address of the timelock\n     */\n    function timelock() public view virtual override returns (address) {\n        return address(_timelock);\n    }\n\n    /**\n     * @dev Public accessor to check the eta of a queued proposal\n     */\n    function proposalEta(uint256 proposalId) public view virtual override returns (uint256) {\n        uint256 eta = _timelock.getTimestamp(_timelockIds[proposalId]);\n        return eta == 1 ? 0 : eta; // _DONE_TIMESTAMP (1) should be replaced with a 0 value\n    }\n\n    /**\n     * @dev Function to queue a proposal to the timelock.\n     */\n    function queue(\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        bytes32 descriptionHash\n    ) public virtual override returns (uint256) {\n        uint256 proposalId = hashProposal(targets, values, calldatas, descriptionHash);\n\n        require(state(proposalId) == ProposalState.Succeeded, \"Governor: proposal not successful\");\n\n        uint256 delay = _timelock.getMinDelay();\n        _timelockIds[proposalId] = _timelock.hashOperationBatch(targets, values, calldatas, 0, descriptionHash);\n        _timelock.scheduleBatch(targets, values, calldatas, 0, descriptionHash, delay);\n\n        emit ProposalQueued(proposalId, block.timestamp + delay);\n\n        return proposalId;\n    }\n\n    /**\n     * @dev Overridden execute function that run the already queued proposal through the timelock.\n     */\n    function _execute(\n        uint256, /* proposalId */\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        bytes32 descriptionHash\n    ) internal virtual override {\n        _timelock.executeBatch{value: msg.value}(targets, values, calldatas, 0, descriptionHash);\n    }\n\n    /**\n     * @dev Overridden version of the {Governor-_cancel} function to cancel the timelocked proposal if it as already\n     * been queued.\n     */\n    // This function can reenter through the external call to the timelock, but we assume the timelock is trusted and\n    // well behaved (according to TimelockController) and this will not happen.\n    // slither-disable-next-line reentrancy-no-eth\n    function _cancel(\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        bytes32 descriptionHash\n    ) internal virtual override returns (uint256) {\n        uint256 proposalId = super._cancel(targets, values, calldatas, descriptionHash);\n\n        if (_timelockIds[proposalId] != 0) {\n            _timelock.cancel(_timelockIds[proposalId]);\n            delete _timelockIds[proposalId];\n        }\n\n        return proposalId;\n    }\n\n    /**\n     * @dev Address through which the governor executes action. In this case, the timelock.\n     */\n    function _executor() internal view virtual override returns (address) {\n        return address(_timelock);\n    }\n\n    /**\n     * @dev Public endpoint to update the underlying timelock instance. Restricted to the timelock itself, so updates\n     * must be proposed, scheduled, and executed through governance proposals.\n     *\n     * CAUTION: It is not recommended to change the timelock while there are other queued governance proposals.\n     */\n    function updateTimelock(TimelockController newTimelock) external virtual onlyGovernance {\n        _updateTimelock(newTimelock);\n    }\n\n    function _updateTimelock(TimelockController newTimelock) private {\n        emit TimelockChange(address(_timelock), address(newTimelock));\n        _timelock = newTimelock;\n    }\n}\n"
      },
      "@openzeppelin/contracts/governance/extensions/IGovernorTimelock.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (governance/extensions/IGovernorTimelock.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IGovernor.sol\";\n\n/**\n * @dev Extension of the {IGovernor} for timelock supporting modules.\n *\n * _Available since v4.3._\n */\nabstract contract IGovernorTimelock is IGovernor {\n    event ProposalQueued(uint256 proposalId, uint256 eta);\n\n    function timelock() public view virtual returns (address);\n\n    function proposalEta(uint256 proposalId) public view virtual returns (uint256);\n\n    function queue(\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        bytes32 descriptionHash\n    ) public virtual returns (uint256 proposalId);\n}\n"
      },
      "contracts/VerifyableBox.sol": {
        "content": "// contracts/Box.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/// @title A box containing some value\n/// @author Mr Tumeric A. Gardner\n/// @notice You can use this contract for only the most basic simulation\n/// @dev All function calls are currently implemented without..\n/// @custom:experimental This is an experimental contract.\ncontract VerifiableBox is Ownable {\n  string private value;\n  bool public shouldRevert;\n  mapping (string => uint) public testMapping;\n\n  // Emitted when the stored value changes\n  event ValueChanged(string newValue);\n  event ShouldRevertChanged(bool newValue);\n\n  constructor(string memory initialValue) {\n    require(true, \"if this revert call 911\");\n    value = initialValue;\n    shouldRevert = false;\n  }\n\n  function switchShouldRevert() public onlyOwner {\n    shouldRevert = !shouldRevert;\n    emit ShouldRevertChanged(shouldRevert);\n  }\n\n  function updateMapping(string memory _testKey, uint _testVal) public {\n    testMapping[_testKey] = _testVal;\n  }\n\n  function getMapping(string memory _testKey) public view returns (uint) {\n    return testMapping[_testKey];\n  }\n\n  function testRevert() pure public {\n    require(false, \"Call has been reverted!\");\n  }\n\n  /// @notice Allow to change the value stored in the Box\n  /// @notice Only the Owner can call this function\n  /// @dev The Alexandr N. Tetearing algorithm could increase precision\n  /// @param newValue The new value to be stored in the box state\n  function changeValueCouldRevert(string calldata newValue) public {\n    require(!shouldRevert, \"Set to revert\");\n    value = newValue;\n    emit ValueChanged(newValue);\n  }\n\n  /// @notice Allow to change the value stored in the Box\n  /// @notice Only the Owner can call this function\n  /// @dev The Alexandr N. Tetearing algorithm could increase precision\n  /// @param newValue The new value to be stored in the box state\n  function changeValueOwner(string calldata newValue) public onlyOwner {\n    value = newValue;\n    emit ValueChanged(newValue);\n  }\n\n  /// @notice Allow to simulate changing the value stored in the Box\n  /// @dev The Alexandr N. Tetearing algorithm could increase precision\n  /// @param newValue The new value to be stored in the box state\n  /// @custom:event-only This function simply emit an event.\n  function changeValueDryRun(string calldata newValue) public {\n    emit ValueChanged(newValue);\n  }\n\n  /// @notice Returns current value in the box.\n  /// @dev Returns only a string.\n  /// @return The current value of in the box state\n  function getValue() public view returns (string memory) {\n    require(!shouldRevert, \"Set to revert\");\n    return value;\n  }\n\n  /// @notice Returns current version of the contract.\n  /// @dev Returns only a string.\n  /// @return The current version of the contract\n  function getVersion() virtual public pure returns (string memory) {\n    return \"V1\";\n  }\n}\n"
      },
      "contracts/RevertibleBox.sol": {
        "content": "// contracts/Box.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/// @title A box containing some value\n/// @author Mr Tumeric A. Gardner\n/// @notice You can use this contract for only the most basic simulation\n/// @dev All function calls are currently implemented without..\n/// @custom:experimental This is an experimental contract.\ncontract RevertibleBox is Ownable {\n  string private value;\n  bool public shouldRevert;\n  mapping (string => uint) public testMapping;\n\n  event ValueChanged(string newValue);\n  event ShouldRevertChanged(bool newValue);\n\n  constructor(string memory initialValue) {\n    value = initialValue;\n    shouldRevert = false;\n  }\n\n  function switchShouldRevert() public onlyOwner {\n    shouldRevert = !shouldRevert;\n    emit ShouldRevertChanged(shouldRevert);\n  }\n\n  function updateMapping(string memory _testKey, uint _testVal) public {\n    testMapping[_testKey] = _testVal;\n  }\n\n  function getMapping(string memory _testKey) public view returns (uint) {\n    return testMapping[_testKey];\n  }\n\n  function changeValueNoRevert(string calldata newValue) public {\n    value = newValue;\n    emit ValueChanged(newValue);\n  }\n\n  /// @notice Allow to change the value stored in the Box\n  /// @notice Only the Owner can call this function\n  /// @dev The Alexandr N. Tetearing algorithm could increase precision\n  /// @param newValue The new value to be stored in the box state\n  function changeValueCouldRevert(string calldata newValue) public {\n    require(!shouldRevert, \"Set to revert\");\n    value = newValue;\n    emit ValueChanged(newValue);\n  }\n\n  /// @notice Allow to change the value stored in the Box\n  /// @notice Only the Owner can call this function\n  /// @dev The Alexandr N. Tetearing algorithm could increase precision\n  /// @param newValue The new value to be stored in the box state\n  function changeValueOwner(string calldata newValue) public onlyOwner {\n    value = newValue;\n    emit ValueChanged(newValue);\n  }\n\n  /// @notice Allow to simulate changing the value stored in the Box\n  /// @dev The Alexandr N. Tetearing algorithm could increase precision\n  /// @param newValue The new value to be stored in the box state\n  /// @custom:event-only This function simply emit an event.\n  function changeValueDryRun(string calldata newValue) public {\n    emit ValueChanged(newValue);\n  }\n\n  /// @notice Returns current value in the box.\n  /// @dev Returns only a string.\n  /// @return The current value of in the box state\n  function getValue() public view returns (string memory) {\n    require(!shouldRevert, \"Set to revert\");\n    return value;\n  }\n\n  /// @notice Returns current version of the contract.\n  /// @dev Returns only a string.\n  /// @return The current version of the contract\n  function getVersion() virtual public pure returns (string memory) {\n    return \"V1\";\n  }\n}\n"
      },
      "contracts/PausableBox.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract PausableBox is Pausable, Ownable {\n\n    string public value;\n\n    event ColorChanged(string newValue);\n\n\n    constructor(string memory initialValue) {\n        value = initialValue;\n    }\n\n    function changeValue(string calldata newValue) public whenNotPaused {\n        value = newValue;\n        emit ColorChanged(newValue);\n    }\n\n    function getValue() public view whenNotPaused returns(string memory) {\n        return value;\n    }\n    \n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n}"
      },
      "@openzeppelin/contracts/security/Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/presets/ERC20PresetFixedSupply.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/presets/ERC20PresetFixedSupply.sol)\npragma solidity ^0.8.0;\n\nimport \"../extensions/ERC20Burnable.sol\";\n\n/**\n * @dev {ERC20} token, including:\n *\n *  - Preminted initial supply\n *  - Ability for holders to burn (destroy) their tokens\n *  - No access control mechanism (for minting/pausing) and hence no governance\n *\n * This contract uses {ERC20Burnable} to include burn capabilities - head to\n * its documentation for details.\n *\n * _Available since v3.4._\n *\n * _Deprecated in favor of https://wizard.openzeppelin.com/[Contracts Wizard]._\n */\ncontract ERC20PresetFixedSupply is ERC20Burnable {\n    /**\n     * @dev Mints `initialSupply` amount of token and transfers them to `owner`.\n     *\n     * See {ERC20-constructor}.\n     */\n    constructor(\n        string memory name,\n        string memory symbol,\n        uint256 initialSupply,\n        address owner\n    ) ERC20(name, symbol) {\n        _mint(owner, initialSupply);\n    }\n}\n"
      },
      "contracts/test/MockERC20Token.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetFixedSupply.sol\";\n\ncontract MockERC20Token is ERC20PresetFixedSupply {\n    constructor(string memory _name, string memory _symbol)\n        ERC20PresetFixedSupply(_name, _symbol, 1000000000000000000000000000, _msgSender())\n    {}\n}\n"
      },
      "contracts/FactoredBox.sol": {
        "content": "// contracts/Box.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract BoxFactory {\n   FactoredBox[] public boxes;\n\n   function createNewBox(string memory _value) public {\n     FactoredBox newBox = new FactoredBox(_value);\n     boxes.push(newBox);\n   }\n\n   function getAllBoxes() public view returns ( FactoredBox[] memory){\n      return boxes;\n   }\n}\n\n\ncontract FactoredBox is Ownable {\n  string private value;\n  bool public shouldRevert;\n  mapping (string => uint) public testMapping;\n\n  // Emitted when the stored value changes\n  event ValueChanged(string newValue);\n  event ShouldRevertChanged(bool newValue);\n\n  constructor(string memory initialValue) {\n    value = initialValue;\n    shouldRevert = false;\n  }\n\n  function switchShouldRevert() public onlyOwner {\n    shouldRevert = !shouldRevert;\n    emit ShouldRevertChanged(shouldRevert);\n  }\n\n  function updateMapping(string memory _testKey, uint _testVal) public {\n    testMapping[_testKey] = _testVal;\n  }\n\n  function getMapping(string memory _testKey) public view returns (uint) {\n    return testMapping[_testKey];\n  }\n\n  function testRevert() pure public {\n    require(false, \"Call has been reverted!\");\n  }\n\n\n  function changeValueCouldRevert(string calldata newValue) public {\n    require(!shouldRevert, \"Set to revert\");\n    value = newValue;\n    emit ValueChanged(newValue);\n  }\n\n  \n  function changeValueOwner(string calldata newValue) public onlyOwner {\n    value = newValue;\n    emit ValueChanged(newValue);\n  }\n\n\n  function changeValueDryRun(string calldata newValue) public {\n    emit ValueChanged(newValue);\n  }\n\n \n  function getValue() public view returns (string memory) {\n    require(!shouldRevert, \"Set to revert\");\n    return value;\n  }\n\n  function getVersion() virtual public pure returns (string memory) {\n    return \"V1\";\n  }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "@openzeppelin/contracts/access/AccessControl.sol": {
        "AccessControl": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ]
        }
      },
      "@openzeppelin/contracts/access/IAccessControl.sol": {
        "IAccessControl": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ]
        }
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ]
        }
      },
      "@openzeppelin/contracts/governance/Governor.sol": {
        "Governor": {
          "abi": [
            {
              "inputs": [],
              "name": "Empty",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "ProposalCanceled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "proposer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "string[]",
                  "name": "signatures",
                  "type": "string[]"
                },
                {
                  "indexed": false,
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "startBlock",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "endBlock",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "ProposalCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "ProposalExecuted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                }
              ],
              "name": "VoteCast",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "VoteCastWithParams",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "BALLOT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "COUNTING_MODE",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "EXTENDED_BALLOT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                }
              ],
              "name": "castVote",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "castVoteBySig",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                }
              ],
              "name": "castVoteWithReason",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "castVoteWithReasonAndParams",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "castVoteWithReasonAndParamsBySig",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "descriptionHash",
                  "type": "bytes32"
                }
              ],
              "name": "execute",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "getVotes",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "getVotesWithParams",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasVoted",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "descriptionHash",
                  "type": "bytes32"
                }
              ],
              "name": "hashProposal",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155BatchReceived",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "proposalDeadline",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "proposalSnapshot",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "proposalThreshold",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "propose",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "quorum",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "relay",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "state",
              "outputs": [
                {
                  "internalType": "enum IGovernor.ProposalState",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "votingDelay",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "votingPeriod",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ]
        }
      },
      "@openzeppelin/contracts/governance/IGovernor.sol": {
        "IGovernor": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "ProposalCanceled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "proposer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "string[]",
                  "name": "signatures",
                  "type": "string[]"
                },
                {
                  "indexed": false,
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "startBlock",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "endBlock",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "ProposalCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "ProposalExecuted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                }
              ],
              "name": "VoteCast",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "VoteCastWithParams",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "COUNTING_MODE",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                }
              ],
              "name": "castVote",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "castVoteBySig",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                }
              ],
              "name": "castVoteWithReason",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "castVoteWithReasonAndParams",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "castVoteWithReasonAndParamsBySig",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "descriptionHash",
                  "type": "bytes32"
                }
              ],
              "name": "execute",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "getVotes",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "getVotesWithParams",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasVoted",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "descriptionHash",
                  "type": "bytes32"
                }
              ],
              "name": "hashProposal",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "proposalDeadline",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "proposalSnapshot",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "propose",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "quorum",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "state",
              "outputs": [
                {
                  "internalType": "enum IGovernor.ProposalState",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "votingDelay",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "votingPeriod",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ]
        }
      },
      "@openzeppelin/contracts/governance/TimelockController.sol": {
        "TimelockController": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "minDelay",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "proposers",
                  "type": "address[]"
                },
                {
                  "internalType": "address[]",
                  "name": "executors",
                  "type": "address[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "CallExecuted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "predecessor",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "delay",
                  "type": "uint256"
                }
              ],
              "name": "CallScheduled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                }
              ],
              "name": "Cancelled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oldDuration",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newDuration",
                  "type": "uint256"
                }
              ],
              "name": "MinDelayChange",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "CANCELLER_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "EXECUTOR_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PROPOSER_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "TIMELOCK_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                }
              ],
              "name": "cancel",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "payload",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "predecessor",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                }
              ],
              "name": "execute",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "payloads",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "predecessor",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                }
              ],
              "name": "executeBatch",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getMinDelay",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                }
              ],
              "name": "getTimestamp",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "predecessor",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                }
              ],
              "name": "hashOperation",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "payloads",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "predecessor",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                }
              ],
              "name": "hashOperationBatch",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                }
              ],
              "name": "isOperation",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "registered",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                }
              ],
              "name": "isOperationDone",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "done",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                }
              ],
              "name": "isOperationPending",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "pending",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                }
              ],
              "name": "isOperationReady",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "ready",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155BatchReceived",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "predecessor",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "delay",
                  "type": "uint256"
                }
              ],
              "name": "schedule",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "payloads",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "predecessor",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "delay",
                  "type": "uint256"
                }
              ],
              "name": "scheduleBatch",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newDelay",
                  "type": "uint256"
                }
              ],
              "name": "updateDelay",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "legacyAssembly": null,
            "bytecode": {
              "object": "000400000000000200020000000103550000006003100270000007b90030019d000007b903300197000000000131034f00030000000103550000006001100270000107b90010019d000000010120018f000000000110004c0000000d0000c13d1edd080f0000040f1edd000e0000040f00460000000000020000008001000039000000400800003900000000001804350000000001000416000000000110004c0000046b0000c13d00000000010000310000001f02100039000000200300008a000000000332016f00000000090804330000000002930019000000000332004b00000000030000190000000103004039000007ba0420009c0000046d0000213d000000010330018f000000000330004c0000046d0000c13d00000000002804350000001f0210018f00000002030003670000000504100270000000000540004c000000320000613d000000000500001900000005065002100000000007690019000000000663034f000000000606043b00000000006704350000000105500039000000000645004b0000002a0000413d000000000520004c000000410000613d0000000504400210000000000343034f00000000044900190000000302200210000000000504043300000000052501cf000000000525022f000000000303043b0000010002200089000000000323022f00000000022301cf000000000252019f0000000000240435000007bb020000410000005f0310008c00000000030000190000000003022019000007bb04100197000000000540004c0000000002008019000007bb0440009c000000000203c019000000000220004c000004740000613d000c00000008001d0000000002090433000200000002001d004600200000003d00000020029000390000000004020433000007bc0340009c000004760000813d00000000021900190000000001940019000a00000002001d000b00000009001d1edd13a70000040f0000000b03000029000800000001001d00000040013000390000000001010433000007bc0210009c000004780000813d00000000013100190000000a020000291edd13a70000040f004500000000001d000007bd0200004100000000002004350000002002000039000100000002001d0000000000020435000500000001001d000007be0100004100008010020000390000000003000415000000440330008a00000020033000c91edd1ea70000040f000000440100035f000000ff03000039000000430230024f000000010220008c000000990000c13d000000000101043b0000000101100039000b00000003001d1edd1edb0000040f0000000c0200002900000045022001ef000a00000001001d000007c101200197000007be011001c700008010020000390000000003000415000000420330008a00000020033000c91edd1ea70000040f000000420100035f0000000b02000029000000410220024f000000000220004c000000b70000613d000000000101043b0000000102100039000007bd010000411edd1ed90000040f0000000c0600002900000000050604330000004501000029000000000210004c000900000005001d000000d50000c13d000007c2020000410000000403000039000000000023041f000007bd020000410000000a03000029000000000032041e000000000002041e000000ef0000013d00000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000000a70000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000000a00000413d000000000420004c000000b50000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000000c50000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000000be0000413d000000000420004c000000d30000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf00010430000000200210021000000004022001bf0000000003050433000007c204000041000000000042041f000007bd020000410000000a04000029000000000042041e000000000032041e00000000025100190000002003500039000000000432004b000000ef0000a13d000000e70000013d000000000004041e0000004003300039000000000432004b000000ef0000a13d000000000532004900000000040304330000003f0550008c000000e30000a13d00000020053000390000000005050433000000000054041e000000e40000013d000007c302000041000000000021043500000045016001ef000007c101100197000007be011001c700008010020000390000000003000415000000400330008a00000020033000c91edd1ea70000040f000000400100035f0000000b020000290000003f0220024f000000000220004c000001210000613d000000000101043b00000001011000391edd1edb0000040f0000000c0200002900000045022001ef000a00000001001d000007c101200197000007be011001c7000080100200003900000000030004150000003e0330008a00000020033000c91edd1ea70000040f0000003e0100035f0000000b020000290000003d0220024f000000000220004c0000013f0000613d000000000101043b0000000102100039000007bd010000411edd1ed90000040f0000004501000029000000000210004c0000015d0000c13d000007c2020000410000000403000039000000000023041f000007c3020000410000000a03000029000000000032041e000007bd02000041000000000002041e0000000c060000290000017a0000013d00000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c0000012f0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000001280000413d000000000420004c0000013d0000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c0000014d0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000001460000413d000000000420004c0000015b0000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf00010430000000200210021000000004022001bf00000009050000290000000003050433000007c204000041000000000042041f000007c3020000410000000a04000029000000000042041e000007bd02000041000000000032041e00000000025100190000002003500039000000000432004b0000000c060000290000017a0000a13d000001720000013d000000000004041e0000004003300039000000000432004b0000017a0000a13d000000000532004900000000040304330000003f0550008c0000016e0000a13d00000020053000390000000005050433000000000054041e0000016f0000013d000007c402000041000000000021043500000045016001ef000007c101100197000007be011001c7000080100200003900000000030004150000003c0330008a00000020033000c91edd1ea70000040f0000003c0100035f0000000b020000290000003b0220024f000000000220004c000001ac0000613d000000000101043b00000001011000391edd1edb0000040f0000000c0200002900000045022001ef000a00000001001d000007c101200197000007be011001c7000080100200003900000000030004150000003a0330008a00000020033000c91edd1ea70000040f0000003a0100035f0000000b02000029000000390220024f000000000220004c000001ca0000613d000000000101043b0000000102100039000007bd010000411edd1ed90000040f0000004501000029000000000210004c000001e80000c13d000007c2020000410000000403000039000000000023041f000007c4020000410000000a03000029000000000032041e000007bd02000041000000000002041e0000000c06000029000002050000013d00000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000001ba0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000001b30000413d000000000420004c000001c80000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000001d80000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000001d10000413d000000000420004c000001e60000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf00010430000000200210021000000004022001bf00000009050000290000000003050433000007c204000041000000000042041f000007c4020000410000000a04000029000000000042041e000007bd02000041000000000032041e00000000025100190000002003500039000000000432004b0000000c06000029000002050000a13d000001fd0000013d000000000004041e0000004003300039000000000432004b000002050000a13d000000000532004900000000040304330000003f0550008c000001f90000a13d00000020053000390000000005050433000000000054041e000001fa0000013d000007c502000041000000000021043500000045016001ef000007c101100197000007be011001c700008010020000390000000003000415000000380330008a00000020033000c91edd1ea70000040f000000380100035f0000000b02000029000000370220024f000000000220004c000002370000613d000000000101043b00000001011000391edd1edb0000040f0000000c0200002900000045022001ef000a00000001001d000007c101200197000007be011001c700008010020000390000000003000415000000360330008a00000020033000c91edd1ea70000040f000000360100035f0000000b02000029000000350220024f000000000220004c000002550000613d000000000101043b0000000102100039000007bd010000411edd1ed90000040f0000004501000029000000000210004c000002730000c13d000007c2020000410000000403000039000000000023041f000007c5020000410000000a03000029000000000032041e000007bd02000041000000000002041e0000000c06000029000002900000013d00000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000002450000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b0000023e0000413d000000000420004c000002530000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000002630000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b0000025c0000413d000000000420004c000002710000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf00010430000000200210021000000004022001bf00000009050000290000000003050433000007c204000041000000000042041f000007c5020000410000000a04000029000000000042041e000007bd02000041000000000032041e00000000025100190000002003500039000000000432004b0000000c06000029000002900000a13d000002880000013d000000000004041e0000004003300039000000000432004b000002900000a13d000000000532004900000000040304330000003f0550008c000002840000a13d00000020053000390000000005050433000000000054041e000002850000013d000007bd02000041000000000021043500000045016001ef000007c101100197000007be011001c700008010020000390000000003000415000000340330008a00000020033000c91edd1ea70000040f000000340100035f0000000b02000029000000330220024f000000000220004c000002f60000613d000000000101043b00000045020000290000000003000411000400000003001d0000000000320435000000460200002900000000001204350000000c0100002900000045011001ef000007c101100197000007be011001c700008010020000390000000003000415000000320330008a00000020033000c91edd1ea70000040f000000320100035f0000000b02000029000000310220024f000000000220004c000003140000613d000000000101043b1edd1edb0000040f0000004502000029000000ff0110018f000000000110004c0000000c060000290000038a0000c13d000007bd01000041000000000012043500000045010000290000004602000029000000000012043500000045016001ef000007c101100197000007be011001c700008010020000390000000003000415000000300330008a00000020033000c91edd1ea70000040f000000300100035f0000000b020000290000002f0220024f000000000220004c000003320000613d000000000101043b000000450200002900000004030000290000000000320435000000460200002900000000001204350000000c0100002900000045011001ef000007c101100197000007be011001c7000080100200003900000000030004150000002c0330008a00000020033000c91edd1ea70000040f0000002c0100035f0000000b020000290000002b0220024f000000000220004c000003500000613d000000000101043b000a00000001001d1edd1edb0000040f000001000200008a000000000121016f00000001011001bf0000000a020000291edd1ed90000040f0000004502000029000000000120004c0000036e0000c13d000007c6010000410000000402000039000000000012041f000007bd010000410000000402000029000000000021041e000000000002041e00000000020000190000000c060000290000038a0000013d00000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000003040000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000002fd0000413d000000000420004c000003120000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000003220000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b0000031b0000413d000000000420004c000003300000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000003400000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000003390000413d000000000420004c0000034e0000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c0000035e0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000003570000413d000000000420004c0000036c0000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf00010430000000200120021000000004011001bf00000009050000290000000003050433000007c604000041000000000041041f000007bd010000410000000404000029000000000041041e000000000034041e00000000015200190000002003500039000000000431004b0000000c060000290000038a0000a13d000003820000013d000000000004041e0000004003300039000000000431004b0000038a0000a13d000000000531004900000000040304330000003f0550008c0000037e0000a13d00000020053000390000000005050433000000000054041e0000037f0000013d000007bd01000041000000000012043500000045010000290000004602000029000000000012043500000045016001ef000007c101100197000007be011001c7000080100200003900000000030004150000002e0330008a00000020033000c91edd1ea70000040f0000002e0100035f0000000b020000290000002d0220024f000000000220004c000003f30000613d000000000101043b00000045020000290000000003000410000a00000003001d0000000000320435000000460200002900000000001204350000000c0100002900000045011001ef000007c101100197000007be011001c7000080100200003900000000030004150000002a0330008a00000020033000c91edd1ea70000040f0000002a0100035f0000000b02000029000000290220024f000000000220004c000004110000613d000000000101043b1edd1edb0000040f000000ff0110018f000000000110004c0000000c06000029000004970000c13d0000004501000029000007bd02000041000000000021043500000045010000290000004602000029000000000012043500000045016001ef000007c101100197000007be011001c700008010020000390000000003000415000000280330008a00000020033000c91edd1ea70000040f000000280100035f0000000b02000029000000270220024f000000000220004c0000042f0000613d000000000101043b00000045020000290000000a030000290000000000320435000000460200002900000000001204350000000c0100002900000045011001ef000007c101100197000007be011001c700008010020000390000000003000415000000260330008a00000020033000c91edd1ea70000040f000000260100035f0000000b02000029000000250220024f000000000220004c0000044d0000613d000000000101043b000700000001001d1edd1edb0000040f000001000200008a000000000121016f00000001011001bf00000007020000291edd1ed90000040f0000004501000029000000000210004c0000047a0000c13d000007c6010000410000000402000039000000000012041f000007bd010000410000000a02000029000000000021041e0000000401000029000000000001041e0000000c06000029000004970000013d00000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000004010000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000003fa0000413d000000000420004c0000040f0000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c0000041f0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000004180000413d000000000420004c0000042d0000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c0000043d0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000004360000413d000000000420004c0000044b0000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c0000045b0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000004540000413d000000000420004c000004690000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf00010430000000000100001900001edf00010430000007c8010000410000000000100435000000410100003900000004020000390000000000120435000007c90100004100001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000200210021000000004022001bf00000009050000290000000003050433000007c604000041000000000042041f000007bd020000410000000a04000029000000000042041e0000000402000029000000000032041e00000000015100190000002002500039000000000321004b0000000c06000029000004970000a13d0000048f0000013d000000000003041e0000004002200039000000000321004b000004970000a13d000000000421004900000000030204330000003f0440008c0000048b0000a13d00000020042000390000000004040433000000000043041e0000048c0000013d000000080200002900000000010204330000004503000029000000000113004b000005ce0000813d0000801001000039000a00000001001d000004ae0000013d000007c6010000410000000402000039000000000012041f000007c5010000410000000702000029000000000021041e0000000401000029000000000001041e0000000c060000290000000903000029000000010330003900000008020000290000000001020433000000000113004b000005ce0000813d000900000003001d000000050130021000000000012100190000002001100039000600000001001d0000000001010433000700000001001d0000004501000029000007c302000041000000000021043500000045010000290000004602000029000000000012043500000045016001ef000007c101100197000007be011001c70000000003000415000000240330008a00000020033000c90000000a020000291edd1ea70000040f0000000701000029000007c703100197000000240100035f0000000b02000029000000230220024f000000010220008c000006dc0000c13d000000000101043b0000004502000029000700000003001d0000000000320435000000460200002900000000001204350000000c0100002900000045011001ef000007c101100197000007be011001c70000000003000415000000220330008a00000020033000c90000000a020000291edd1ea70000040f000000220100035f0000000b02000029000000210220024f000000000220004c000006fa0000613d000000000101043b1edd1edb0000040f000000ff0110018f000000000110004c0000000c060000290000000a020000290000056b0000613d000000080100002900000000010104330000000902000029000000000121004b000007180000a13d00000006010000290000000001010433000700000001001d0000004501000029000007c502000041000000000021043500000045010000290000004602000029000000000012043500000045016001ef000007c101100197000007be011001c7000080100200003900000000030004150000001e0330008a00000020033000c91edd1ea70000040f0000000701000029000007c7031001970000001e0100035f0000000b020000290000001d0220024f000000000220004c0000071f0000613d000000000101043b0000004502000029000700000003001d0000000000320435000000460200002900000000001204350000000c0100002900000045011001ef000007c101100197000007be011001c7000080100200003900000000030004150000001a0330008a00000020033000c91edd1ea70000040f0000001a0100035f0000000b02000029000000190220024f000000000220004c0000073d0000613d000000000101043b1edd1edb0000040f000000ff0110018f000000000110004c0000000c06000029000004a80000c13d0000004501000029000007c502000041000000000021043500000045010000290000004602000029000000000012043500000045016001ef000007c101100197000007be011001c700008010020000390000000003000415000000180330008a00000020033000c91edd1ea70000040f000000180100035f0000000b02000029000000170220024f000000000220004c000007970000613d000000000101043b000000450200002900000007030000290000000000320435000000460200002900000000001204350000000c0100002900000045011001ef000007c101100197000007be011001c700008010020000390000000003000415000000160330008a00000020033000c91edd1ea70000040f000000160100035f0000000b02000029000000150220024f000000000220004c000007b50000613d000000000101043b000600000001001d1edd1edb0000040f000001000200008a000000000121016f00000001011001bf00000006020000291edd1ed90000040f0000004501000029000000000210004c0000049f0000613d0000000c060000290000000002060433000000200310021000000004033001bf0000000004020433000007c605000041000000000053041f000007c5030000410000000705000029000000000053041e0000000403000029000000000043041e00000000012100190000002002200039000000000321004b000004a80000a13d000005630000013d000000000003041e0000004002200039000000000321004b000005c30000a13d000000000421004900000000030204330000003f0440008c0000055f0000a13d00000020042000390000000004040433000000000043041e000005600000013d0000004501000029000007c303000041000000000031043500000045010000290000004603000029000000000013043500000045016001ef000007c101100197000007be011001c70000000003000415000000200330008a00000020033000c91edd1ea70000040f000000200100035f0000000b020000290000001f0220024f000000000220004c000007d30000613d000000000101043b000000450200002900000007030000290000000000320435000000460200002900000000001204350000000c0100002900000045011001ef000007c101100197000007be011001c700000000030004150000001c0330008a00000020033000c90000000a020000291edd1ea70000040f0000001c0100035f0000000b020000290000001b0220024f000000000220004c000007f10000613d000000000101043b000300000001001d1edd1edb0000040f000001000200008a000000000121016f00000001011001bf00000003020000291edd1ed90000040f0000004501000029000000000210004c000005b90000613d0000000c060000290000000002060433000000200310021000000004033001bf0000000004020433000007c605000041000000000053041f000007c3030000410000000705000029000000000053041e0000000403000029000000000043041e00000000012100190000002002200039000000000321004b000004e50000a13d000005b10000013d000000000003041e0000004002200039000000000321004b000004e50000a13d000000000421004900000000030204330000003f0440008c000005ad0000a13d00000020042000390000000004040433000000000043041e000005ae0000013d000007c6010000410000000402000039000000000012041f000007c3010000410000000702000029000000000021041e0000000401000029000000000001041e0000000c06000029000004e50000013d000000010100008a0000000902000029000000000112004b000004a80000c13d000007c8010000410000000000100435000000110100003900000004020000390000000000120435000007c90100004100001edf00010430000000050200002900000000010204330000004503000029000000000113004b000006790000813d0000801005000039000001000100008a000600000001001d000a00000005001d000005e80000013d000007c6010000410000000402000039000000000012041f000007c4010000410000000802000029000000000021041e0000000401000029000000000001041e0000000c060000290000000a050000290000000903000029000000010330003900000005020000290000000001020433000000000113004b000006790000813d000900000003001d0000000501300210000000000121001900000020011000390000000001010433000800000001001d0000004501000029000007c402000041000000000021043500000045010000290000004602000029000000000012043500000045016001ef000007c101100197000007be011001c70000000003000415000000140330008a00000020033000c900000000020500191edd1ea70000040f0000000801000029000007c703100197000000140100035f0000000b02000029000000130220024f000000010220008c000006a00000c13d000000000101043b0000004502000029000800000003001d0000000000320435000000460200002900000000001204350000000c0100002900000045011001ef000007c101100197000007be011001c70000000003000415000000120330008a00000020033000c90000000a020000291edd1ea70000040f000000120100035f0000000b02000029000000110220024f000000000220004c000006be0000613d000000000101043b1edd1edb0000040f000000ff0110018f000000000110004c0000000c060000290000000a05000029000005e20000c13d0000004501000029000007c402000041000000000021043500000045010000290000004602000029000000000012043500000045016001ef000007c101100197000007be011001c70000000003000415000000100330008a00000020033000c900000000020500191edd1ea70000040f000000100100035f0000000b020000290000000f0220024f000000000220004c0000075b0000613d000000000101043b000000450200002900000008030000290000000000320435000000460200002900000000001204350000000c0100002900000045011001ef000007c101100197000007be011001c700000000030004150000000e0330008a00000020033000c90000000a020000291edd1ea70000040f0000000e0100035f0000000b020000290000000d0220024f000000000220004c000007790000613d000000000101043b000700000001001d1edd1edb0000040f0000000602000029000000000121016f00000001011001bf00000007020000291edd1ed90000040f0000004501000029000000000210004c000005d80000613d0000000c060000290000000002060433000000200310021000000004033001bf0000000004020433000007c605000041000000000053041f000007c4030000410000000805000029000000000053041e0000000403000029000000000043041e00000000012100190000002002200039000000000321004b0000000a05000029000005e20000a13d000006660000013d000000000003041e0000004002200039000000000321004b0000066e0000a13d000000000421004900000000030204330000003f0440008c000006620000a13d00000020042000390000000004040433000000000043041e000006630000013d000000010100008a0000000902000029000000000112004b000005e20000c13d000007c8010000410000000000100435000000110100003900000004020000390000000000120435000007c90100004100001edf000104300000004501000029000b00000001001d000000020200003900000002010000291edd1ed90000040f0000000c0100002900000000010104330000000b020000290000000000210435000000460210002900000002030000290000000000320435000007ca02000041000007cb03000041000000000023041f000000410200008a000000000221004b000006990000213d0000004002100039000006910000013d000000000003041e0000004001100039000000000312004b000006990000a13d000000000412004900000000030104330000003f0440008c0000068d0000a13d00000020041000390000000004040433000000000043041e0000068e0000013d00000100010000390000000102000029000000000021043900000120010000390000000000010439000007cc0100004100001ede0001042e00000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000006ae0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000006a70000413d000000000420004c000006bc0000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000006cc0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000006c50000413d000000000420004c000006da0000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000006ea0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000006e30000413d000000000420004c000006f80000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000007080000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000007010000413d000000000420004c000007160000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf00010430000007c8010000410000000000100435000000320100003900000004020000390000000000120435000007c90100004100001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c0000072d0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000007260000413d000000000420004c0000073b0000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c0000074b0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000007440000413d000000000420004c000007590000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000007690000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000007620000413d000000000420004c000007770000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000007870000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000007800000413d000000000420004c000007950000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000007a50000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b0000079e0000413d000000000420004c000007b30000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000007c30000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000007bc0000413d000000000420004c000007d10000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000007e10000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000007da0000413d000000000420004c000007ef0000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000007ff0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000007f80000413d000000000420004c0000080d0000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf00010430005500000000000200000000010004110000000005000410000080020250008c000e00000001001d0000082c0000613d000080010210008c0000082c0000613d000007cd0100004100000000001004390000000401000039000d00000005001d0000000000510439000007ce0100004100008002020000390000000003000415000000550330008a00000020033000c91edd1ea70000040f000000ff01000039000000540110024f000000000110004c00000e8a0000613d000000550100035f000000000101043b000000000110004c0000000e010000290000000d0500002900000e8c0000613d005300400000003d0000008002000039000000400a00003900000000002a0435005200040000003d0000000002000031000000030320008c00000e490000a13d005100000000001d0000000209000367000000000309043b000000e003300270000007cf0430009c000008700000a13d000007d00430009c000a0000000a001d000009200000213d000007d80430009c00000a3b0000a13d000007d90430009c00000e8e0000a13d000007da0330009c00000f710000c13d0000000003000416000000000330004c0000101d0000c13d000000040320008a000007bb040000410000009f0530008c00000000050000190000000005042019000007bb03300197000000000630004c0000000004008019000007bb0330009c00000000030500190000000003046019000000000330004c0000101f0000613d0000000403900370000000000303043b000007f60330009c000010210000813d0000002403900370000000000303043b000007f60330009c000010230000813d0000004401900370000000000101043b000007bc0310009c000010250000813d00000004011000391edd15410000040f00000002010003670000006401100370000000000101043b000007bc0210009c000010270000813d000000000200003100000004011000391edd15410000040f00000002010003670000008401100370000000000101043b000007bc0210009c00000cac0000413d000000000100001900001edf00010430000007e10430009c0000098d0000213d000007ef0430009c00000bfa0000a13d000007f00130009c00000eb30000c13d004b00000000001d004c00000000001d004d00000000001d004e00000000001d004f00000000001d005000000000001d0000000001000415000000500110008a00000020011000c91edd13ef0000040f0000005001000029000b00000001001d0000004f01000029000a00000001001d0000004e01000029000c00000001001d0000004d01000029000d00000001001d0000004c01000029000800000001001d0000004b01000029000500000001001d0000005101000029000007c402000041000000000021043500000051010000290000002002000039000700000002001d00000000001204350000004001100210000007c1011001970000006002000039000900000002001d00000053022001ef000007c002200197000000000121019f000007f8011001c7000080100200003900000000030004150000004a0330008a00000020033000c91edd1ea70000040f0000004a0100035f000000ff02000039000600000002001d000000490220024f000000010220008c000010290000c13d000000000101043b0000005102000029000000000022043500000007020000290000000000120435000000090100002900000053011001ef000007c001100197000000400200003900000051022001ef000007c102200197000000000112019f000007f8011001c700008010020000390000000003000415000000480330008a00000020033000c91edd1ea70000040f000000480100035f0000000602000029000000470220024f000000000220004c000010470000613d000000000101043b1edd1edb0000040f000000ff0110018f000000000110004c000008c40000c13d0000000e010000291edd16a20000040f0000000b010000290000000a020000290000000c030000290000000d04000029000000080500002900000005060000291edd1a7b0000040f000e00000001001d00000008020000291edd1dce0000040f0000000b010000290000000a020000290000000c030000290000000d040000291edd1d0e0000040f0000005301000029000000000901043300000040029000390000000901000029000000000012043500000020029000390000000a0100002900000000001204350000000b01000029000007c702100197000000000029043500000060029000390000000d01000029000000000012043500000002020003670000000c03000029000000000432034f0000001f0310018f00000080029000390000000505100270000000000650004c000008f20000613d000000000600001900000005076002100000000008720019000000000774034f000000000707043b00000000007804350000000106600039000000000756004b000008ea0000413d000000000630004c000009010000613d0000000505500210000000000454034f00000000055200190000000303300210000000000605043300000000063601cf000000000636022f000000000404043b0000010003300089000000000434022f00000000033401cf000000000363019f00000000003504350000000d04000029000000000342001900000000000304350000001f03400039000000200400008a000000000343016f00000000023200190000000003920049000000200330021000000003033001bf0000005105000029000007f904000041000000000043041f0000000e01000029000d00000005001d000000000051041e000000000392004b00000c670000a13d000009180000013d000000000003041e0000004009900039000000000392004b00000c670000a13d000000000492004900000000030904330000003f0440008c000009140000a13d00000020049000390000000004040433000000000043041e000009150000013d000007d10430009c00000b170000213d000007d50430009c00000ecb0000c13d0000000003000416000000000330004c000010650000c13d000000040220008a000007bb030000410000001f0420008c00000000040000190000000004032019000007bb02200197000000000520004c0000000003008019000007bb0220009c00000000020400190000000002036019000000000220004c000010670000613d0000000401900370000000000101043b000b00000001001d000007c50100004100000000001004350000002001000039000d00000001001d0000000000010435000007be0100004100008010020000390000000003000415000000260330008a00000020033000c91edd1ea70000040f000000260100035f000000ff02000039000c00000002001d000000250220024f000000010220008c000010690000c13d000000000101043b00000051020000290000000e0300002900000000003204350000000d0200002900000000001204350000006001000039000900000001001d00000053011001ef000007c0011001970000000a0200002900000051022001ef000007c102200197000000000112019f000007f8011001c700008010020000390000000003000415000000240330008a00000020033000c91edd1ea70000040f000000240100035f0000000c02000029000000230220024f000000000220004c000010870000613d000000000101043b1edd1edb0000040f000000ff0110018f000000000110004c00000c760000c13d0000000e010000291edd1e250000040f00000053020000290000000008020433000000810200008a000000000228004b00000cb70000213d0000008002800039000007bc0320009c00000cb70000813d0000000a06000029000000000026043500000042020000390000000000280435000000200980003900000002020003670000000002200368000000000300001900000005043002100000000005490019000000000442034f000000000404043b00000000004504350000000103300039000000030430008c000009780000413d0000000002080433000000000220004c00000d2b0000c13d0000005101000029000007c802000041000000000021043500000032010000390000005202000029000000000012043500000051016001ef000007c101100197000007c9011001c700001edf00010430000007e20430009c00000e4d0000213d000007e90430009c00000e720000a13d000007ea0430009c00000f5d0000c13d0000000003000416000000000330004c000010a50000c13d000000040220008a000007bb030000410000003f0420008c00000000040000190000000004032019000007bb02200197000000000520004c0000000003008019000007bb0220009c00000000020400190000000002036019000000000220004c000010a70000613d0000000402900370000000000202043b0000002401900370000000000101043b000900000001001d000007f60110009c000010a90000813d00000000002004350000002001000039000c00000001001d0000000000010435000007be01000041000b00000002001d00008010020000390000000003000415000000440330008a00000020033000c91edd1ea70000040f000000440100035f000000ff02000039000d00000002001d000000430220024f000000010220008c000010ab0000c13d000000000101043b00000001011000391edd1edb0000040f0000000e020000291edd17b00000040f00000051010000290000000b02000029000000000021043500000051010000290000000c0200002900000000001204350000004001100210000007c1011001970000006002000039000a00000002001d00000053022001ef000007c002200197000000000121019f000007f8011001c700008010020000390000000003000415000000420330008a00000020033000c91edd1ea70000040f000000420100035f0000000d03000029000000410230024f000000000220004c00000c8e0000613d000000000101043b0000005102000029000000090300002900000000003204350000000c0200002900000000001204350000000a0100002900000053011001ef000007c0011001970000004002000039000800000002001d00000051022001ef000007c102200197000000000112019f000007f8011001c700008010020000390000000003000415000000400330008a00000020033000c91edd1ea70000040f000000400100035f0000000d020000290000003f0220024f000000000220004c00000ce50000613d000000000101043b1edd1edb0000040f000000ff0110018f000000000110004c00000d5a0000c13d00000051010000290000000b02000029000000000021043500000051010000290000000c0200002900000000001204350000004001100210000007c1011001970000000a0200002900000053022001ef000007c002200197000000000121019f000007f8011001c7000080100200003900000000030004150000003e0330008a00000020033000c91edd1ea70000040f0000003e0100035f0000000d030000290000003d0230024f000000000220004c00000ddc0000613d000000000101043b0000005102000029000000090300002900000000003204350000000c0200002900000000001204350000000a0100002900000053011001ef000007c001100197000000080200002900000051022001ef000007c102200197000000000112019f000007f8011001c7000080100200003900000000030004150000003c0330008a00000020033000c91edd1ea70000040f0000003c0100035f0000000d020000290000003b0220024f000000000220004c00000e010000613d000000000101043b000d00000001001d1edd1edb0000040f000001000200008a000000000121016f00000001011001bf0000000d020000291edd1ed90000040f00000053010000290000005102000029000000000320004c00000e2d0000c13d000007c6020000410000000403000039000000000023041f0000000b020000290000000903000029000000000032041e0000000e02000029000000000002041e000000000200001900000d5c0000013d000007de0430009c00000ee10000c13d0000000003000416000000000330004c000010c90000c13d000000040320008a000007bb04000041000000bf0530008c00000000050000190000000005042019000007bb03300197000000000630004c0000000004008019000007bb0330009c00000000030500190000000003046019000000000330004c000010cb0000613d0000000403900370000000000303043b000007bc0430009c000010cd0000813d0000002304300039000007bb05000041000000000624004b00000000060000190000000006054019000007bb07200197000007bb04400197000000000874004b000000000500a019000000000474013f000007bb0440009c00000000040600190000000004056019000000000440004c000010cf0000613d0000000404300039000000000449034f000000000b04043b000007bc04b0009c000010d10000813d00000024043000390000000503b00210000500000004001d0000000003430019000000000323004b000010d30000213d0000002403900370000000000303043b000007bc0430009c000010d50000813d0000002304300039000007bb05000041000000000624004b00000000060000190000000006054019000007bb07200197000007bb04400197000000000874004b000000000500a019000000000474013f000007bb0440009c00000000040600190000000004056019000000000440004c000010d70000613d0000000404300039000000000449034f000000000c04043b000007bc04c0009c000010d90000813d00000024043000390000000503c00210000400000004001d0000000003430019000000000323004b000010db0000213d0000004403900370000000000303043b000007bc0430009c000010dd0000813d0000002304300039000007bb05000041000000000624004b00000000060000190000000006054019000007bb07200197000007bb04400197000000000874004b000000000500a019000000000474013f000007bb0440009c00000000040600190000000004056019000000000440004c000010df0000613d0000000404300039000000000449034f000000000504043b000007bc0450009c000010e10000813d00080000000c001d00090000000b001d00000024043000390000000503500210000600000004001d0000000003430019000000000223004b000700000005001d000010e30000213d000000a402900370000000000202043b000300000002001d0000006402900370000000000202043b000200000002001d1edd15940000040f00000009010000290000000802000029000000000121004b000000000100001900000001010060391edd1c240000040f00000007020000290000000901000029000000000121004b000000000100001900000001010060391edd1c240000040f00000002010003670000008401100370000000000801043b00000005010000290000000902000029000000040300002900000008040000290000000605000029000000070600002900000002070000291edd1af60000040f000100000001001d00000003020000291edd1c790000040f0000000901000029000000000110004c000000000100001900000d250000613d000000000400001900000008070000290000000705000029000000060600002900000ada0000013d0000000104400039000000000154004b00000008070000290000000705000029000000060600002900000d220000813d0000000501400210000000050200002900000000032100190000000202000367000000000332034f000000000803043b000007f60380009c00000d190000813d000000000374004b00000d1b0000813d00000004030000290000000001310019000000000112034f000000000101043b000d00000001001d003300000000001d003400000000001d0000000001000415000000340110008a00000020011000c900000000020600190000000003050019000e00000004001d000c00000008001d1edd1c3b0000040f0000005301000029000a00000001001d0000000001010433000b00000001001d000000340400002900000033050000290000000c020000290000000d03000029000000020600002900000003070000291edd1bf10000040f0000000b060000290000000e0400002900000009050000290000000002610049000000200220021000000003022001bf0000080c03000041000000000032041f0000000102000029000000000042041e000000000261004b00000ad40000a13d00000b0f0000013d000000000002041e0000004006600039000000000261004b00000ad40000a13d000000000361004900000000020604330000003f0330008c00000b0b0000a13d00000020036000390000000003030433000000000032041e00000b0c0000013d000007d20430009c00000ef70000c13d001500000000001d001600000000001d001700000000001d001800000000001d001900000000001d001a00000000001d001b00000000001d001c00000000001d00000000010004150000001c0110008a00000020011000c91edd14ad0000040f0000001c01000029000600000001001d0000001b01000029000900000001001d0000001a01000029000500000001001d0000001901000029000800000001001d0000001801000029000400000001001d0000001701000029000700000001001d0000001601000029000d00000001001d0000001501000029000200000001001d0000005101000029000007c402000041000000000021043500000051010000290000002002000039000c00000002001d00000000001204350000004001100210000007c1011001970000006002000039000300000002001d00000053022001ef000007c002200197000000000121019f000007f8011001c700008010020000390000000003000415000000140330008a00000020033000c91edd1ea70000040f000000140100035f000000ff02000039000b00000002001d000000130220024f000000010220008c000010e50000c13d000000000101043b000000510200002900000000002204350000000c020000290000000000120435000000030100002900000053011001ef000007c0011001970000000a0200002900000051022001ef000007c102200197000000000112019f000007f8011001c700008010020000390000000003000415000000120330008a00000020033000c91edd1ea70000040f000000120100035f0000000b02000029000000110220024f000000000220004c000011030000613d000000000101043b1edd1edb0000040f000000ff0110018f000000000110004c00000b6d0000c13d0000000e010000291edd16a20000040f00000009010000290000000802000029000000000121004b000000000100001900000001010060391edd1c240000040f00000007020000290000000901000029000000000121004b000000000100001900000001010060391edd1c240000040f0000000601000029000000090200002900000005030000290000000804000029000000040500002900000007060000290000000d0700002900000002080000291edd1af60000040f000200000001001d0000000d020000291edd1dce0000040f000000020500002900000051040000290000000901000029000000000114004b00000d0d0000813d00000b8f0000013d00000001044000390000000901000029000000000114004b00000d0c0000813d0000000501400210000000060200002900000000032100190000000202000367000000000332034f000000000603043b000007f60360009c00000d030000813d0000000803000029000000000334004b00000d050000813d00000005030000290000000001310019000000000112034f000000000101043b000e00000001001d000f00000000001d001000000000001d0000000001000415000000100110008a00000020011000c900000004020000290000000703000029000c00000004001d000d00000006001d1edd1c3b0000040f0000001003000029000b00000003001d0000000f04000029000a00000004001d0000000d010000290000000e020000291edd1d0e0000040f0000000a080000290000005301000029000000000101043300000040021000390000000303000029000000000032043500000020021000390000000e0300002900000000003204350000000d0200002900000000002104350000006002100039000000000082043500000002020003670000000b03000029000000000332034f00000080021000390000000504800270000000000540004c00000bcd0000613d000000000500001900000005065002100000000007620019000000000663034f000000000606043b00000000006704350000000105500039000000000645004b00000bc50000413d0000001f0580018f000000000650004c00000bdd0000613d0000000504400210000000000343034f00000000044200190000000305500210000000000604043300000000065601cf000000000656022f000000000303043b0000010005500089000000000353022f00000000035301cf000000000363019f0000000000340435000000000382001900000000000304350000001f03800039000000200400008a000000000343016f00000000023200190000000003120049000000200330021000000003033001bf000007f904000041000000000043041f00000002050000290000000c04000029000000000045041e000000000312004b00000b8b0000a13d00000bf20000013d000000000003041e0000004001100039000000000312004b00000b8b0000a13d000000000612004900000000030104330000003f0660008c00000bee0000a13d00000020061000390000000006060433000000000063041e00000bef0000013d000007f30430009c00000f490000c13d0000000003000416000000000330004c000011210000c13d000000040320008a000007bb04000041000000bf0530008c00000000050000190000000005042019000007bb03300197000000000630004c0000000004008019000007bb0330009c00000000030500190000000003046019000000000330004c000011230000613d0000000403900370000000000a03043b000007f603a0009c000011250000813d0000002403900370000000000b03043b0000004403900370000000000303043b000007bc0430009c000011270000813d0000002304300039000007bb05000041000000000624004b00000000060000190000000006054019000007bb07200197000007bb04400197000000000874004b000000000500a019000000000474013f000007bb0440009c00000000040600190000000004056019000000000440004c000011290000613d0000000404300039000000000449034f000000000504043b000007bc0450009c0000112b0000813d000c0000000b001d000d0000000a001d0000002403300039000b00000005001d000a00000003001d0000000003350019000000000223004b0000112d0000213d000000a402900370000000000202043b000900000002001d0000006402900370000000000202043b000800000002001d1edd15940000040f00000002010003670000008401100370000000000601043b0000000d010000290000000c020000290000000a030000290000000b0400002900000008050000291edd1a7b0000040f000700000001001d00000009020000291edd1c790000040f0000004001000039000e00000001001d0000000001010433000600000001001d0000000d020000290000000c030000290000000a040000290000000b05000029000000080600002900000009070000291edd1bf10000040f00000006040000290000000002410049000000200220021000000003022001bf0000080c03000041000000000032041f0000000702000029000000000002041e000000000241004b00000c710000a13d00000c5f0000013d000000000002041e0000004004400039000000000241004b00000c710000a13d000000000341004900000000020404330000003f0330008c00000c5b0000a13d00000020034000390000000003030433000000000032041e00000c5c0000013d1edd1dee0000040f0000000d010000290000006001100210000007c001100197000000530200002900000000020204330000004002200210000007c102200197000000000121019f00001ede0001042e0000000e0100002900000000010104330000004001100210000007c10110019700001ede0001042e0000000b010000291edd19c50000040f000000000110004c00000cbe0000c13d00000053010000290000000001010433000007fb02000041000000000021043500000052021000290000000d0300002900000000003204350000006402100039000007fc0300004100000000003204350000004402100039000007fd0300004100000000003204350000002402100039000000310300003900000000003204350000004001100210000007c101100197000007fe011001c700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c00000c9c0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b00000c950000413d000000000420004c00000caa0000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf00010430000000000200003100000004011000391edd14500000040f0000000a0100002900000000010104330000080b0200004100000000002104350000004001100210000007c101100197000007f5011001c700001ede0001042e000007c8010000410000000000100435000000410100003900000004020000390000000000120435000007c90100004100001edf0001043000000051010000290000000b02000029000000000021043500000001010000390000000d020000290000000000120435000000090100002900000053011001ef000007c0011001970000000a0200002900000051022001ef000007c102200197000000000112019f000007f8011001c700008010020000390000000003000415000000220330008a00000020033000c91edd1ea70000040f000000220100035f0000000c02000029000000210220024f000000010220008c00000d3c0000c13d000000000201043b0000005101000029000e00000001001d1edd1ed90000040f0000000e0600002900000053010000290000000001010433000000000260004c00000d630000c13d000007fa020000410000000203000039000000000023041f0000000b02000029000000000002041e00000d7b0000013d00000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c00000cf30000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b00000cec0000413d000000000420004c00000d010000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf00010430000000000100001900001edf00010430000007c8010000410000000000100435000000320100003900000004020000390000000000120435000007c90100004100001edf000104300000005104000029000c00000004001d00000000010500191edd1dee0000040f0000000c010000290000006001100210000007c001100197000000530200002900000000020204330000004002200210000007c102200197000000000121019f00001ede0001042e000000000100001900001edf00010430000007c8010000410000000000100435000000320100003900000004020000390000000000120435000007c90100004100001edf00010430000000600100003900000051011001ef000007c0011001970000000a0200002900000000020204330000004002200210000007c102200197000000000121019f00001ede0001042e0000000002090433000007ff0220019700000800022001c700000000002904350000000002080433000000010220008c00000d810000213d0000005101000029000007c802000041000000000021043500000032010000390000005202000029000000000012043500000051016001ef000007c101100197000007c9011001c700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c00000d4a0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b00000d430000413d000000000420004c00000d580000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf00010430000000530100002900000051020000290000006002200210000007c00220019700000000010104330000004001100210000007c101100197000000000112019f00001ede0001042e000000200260021000000002022001bf0000000003010433000007fa04000041000000000042041f0000000b02000029000000000032041e00000000021600190000002003100039000000000432004b00000d7b0000a13d00000d730000013d000000000004041e0000004003300039000000000432004b00000d7b0000a13d000000000532004900000000040304330000003f0550008c00000d6f0000a13d00000020053000390000000005050433000000000054041e00000d700000013d0000004001100210000007c1011001970000006002600210000007c002200197000000000112019f00001ede0001042e00000021028000390000000003020433000007ff0330019700000801033001c70000000000320435000007c502000041000000410300003900000052040000290000000005080433000000000535004b00000dfa0000a13d0000000f0520018f0000000305500210000000f8055000890000080206000041000000000556022f00000000069300190000000007060433000007ff07700197000000f805500210000000000557019f0000000000560435000000000242022f000000ff0540008c0000000002002019000000010330008a000000010530008c00000d890000213d00000053030000290000000004030433000000000220004c00000e1f0000c13d0000002003400039000b00000003001d000008050200004100000000002304350000000003010433000c00000003001d00000020011000390000003702400039000900000008001d000a00000009001d000e00000004001d1edd15870000040f0000000e010000290000000c020000290000000001120019000000370210003900000806030000410000000000320435000000480210003900000009010000290000000003010433000900000003001d0000000a010000291edd15870000040f0000000c010000290000000902000029000000000321001900000028023000390000000e01000029000000000021043500000048023000391edd143a0000040f00000053010000290000000004010433000c00000004001d000007fb01000041000000000014043500000052014000290000000d0200002900000000002104350000000e010000290000000003010433000e00000003001d0000002401400039000000000031043500000044024000390000000b010000291edd15870000040f0000000c010000290000004001100210000007c1011001970000000e0200002900000060022002100000080702200041000008080220019700000809022000410000080a02200197000000000112019f00001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c00000dea0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b00000de30000413d000000000420004c00000df80000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf00010430000007c8010000410000000000100435000000320100003900000004020000390000000000120435000007c90100004100001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c00000e0f0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b00000e080000413d000000000420004c00000e1d0000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf00010430000007fb01000041000000000014043500000052014000290000000d030000290000000000310435000000440140003900000803020000410000000000210435000000240140003900000000003104350000004001400210000007c10110019700000804011001c700001edf000104300000000004010433000000200320021000000004033001bf0000000005040433000007c606000041000000000063041f0000000b030000290000000906000029000000000063041e0000000e03000029000000000053041e00000000034200190000002004400039000000000543004b00000d5c0000a13d00000e410000013d000000000005041e0000004004400039000000000543004b00000d5c0000a13d000000000643004900000000050404330000003f0660008c00000e3d0000a13d00000020064000390000000006060433000000000065041e00000e3e0000013d000000000120004c00000f710000c13d000000000100001900001ede0001042e00000000070500190000000006010019000007e30430009c00000f0f0000a13d000007e40430009c00000f730000613d000007e50430009c00000f850000613d000007e60130009c00000f710000c13d0000000001000416000000000110004c000011350000c13d003500000000001d003600000000001d003700000000001d003800000000001d003900000000001d003a00000000001d00000000010004150000003a0110008a00000020011000c91edd13ef0000040f0000003a01000029000000390200002900000038030000290000003704000029000000360500002900000035060000291edd1a7b0000040f0000005302000029000000000202043300000000001204350000004001200210000007c101100197000007f5011001c700001ede0001042e000007ec0430009c00000f250000613d000007ed0430009c00000f370000613d000007ee0330009c00000f710000c13d0000000003000416000000000330004c0000112f0000c13d000000040220008a000007bb030000410000001f0420008c00000000040000190000000004032019000007bb02200197000000000520004c0000000003008019000007bb0220009c00000000020400190000000002036019000000000220004c000011590000c13d000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001ede0001042e000007db0130009c00000f970000613d000007dc0130009c00000fab0000613d000007dd0130009c00000f710000c13d0000000001000416000000000110004c000011370000c13d002700000000001d002800000000001d002900000000001d002a00000000001d002b00000000001d002c00000000001d002d00000000001d002e00000000001d00000000010004150000002e0110008a00000020011000c91edd14ad0000040f0000002e010000290000002d020000290000002c030000290000002b040000290000002a050000290000002906000029000000280700002900000027080000291edd1af60000040f0000005302000029000000000202043300000000001204350000004001200210000007c101100197000007f5011001c700001ede0001042e000007f10130009c00000fbf0000613d000007f20130009c00000f710000c13d0000000001000416000000000110004c000011390000c13d000000040120008a000000010200008a000007bb03000041000000000221004b00000000020000190000000002032019000007bb01100197000007bb0410009c0000000003008019000007bb01100167000007bb0110009c00000000010200190000000001036019000000000110004c000011860000c13d000000000100001900001edf00010430000007d60430009c00000fd30000613d000007d70330009c00000f710000c13d0000000003000416000000000330004c0000113b0000c13d000000040220008a000007bb030000410000003f0420008c00000000040000190000000004032019000007bb02200197000000000520004c0000000003008019000007bb0220009c00000000020400190000000002036019000000000220004c0000118e0000c13d000000000100001900001edf00010430000007df0430009c00000fe50000613d000007e00330009c00000f710000c13d0000000003000416000000000330004c000011530000c13d000000040220008a000007bb030000410000003f0420008c00000000040000190000000004032019000007bb02200197000000000520004c0000000003008019000007bb0220009c00000000020400190000000002036019000000000220004c000012220000c13d000000000100001900001edf00010430000007d30430009c00000ff90000613d000007d40130009c00000f710000c13d0000000001000416000000000110004c0000113d0000c13d000000040120008a000000010200008a000007bb03000041000000000221004b00000000020000190000000002032019000007bb01100197000007bb0410009c0000000003008019000007bb01100167000007bb0110009c00000000010200190000000001036019000000000110004c000011980000c13d000000000100001900001edf00010430000007e70430009c0000100b0000613d000007e80330009c00000f710000c13d0000000003000416000000000330004c0000113f0000c13d000000040220008a000007bb030000410000003f0420008c00000000040000190000000004032019000007bb02200197000000000520004c0000000003008019000007bb0220009c00000000020400190000000002036019000000000220004c000011a10000c13d000000000100001900001edf000104300000000003000416000000000330004c000011310000c13d000000040220008a000007bb030000410000001f0420008c00000000040000190000000004032019000007bb02200197000000000520004c0000000003008019000007bb0220009c00000000020400190000000002036019000000000220004c000011730000c13d000000000100001900001edf000104300000000003000416000000000330004c000011330000c13d000000040320008a000007bb040000410000007f0530008c00000000050000190000000005042019000007bb03300197000000000630004c0000000004008019000007bb0330009c00000000030500190000000003046019000000000330004c000011800000c13d000000000100001900001edf00010430000007f40330009c00000f710000c13d0000000003000416000000000330004c000011550000c13d000000040220008a000007bb030000410000001f0420008c00000000040000190000000004032019000007bb02200197000000000520004c0000000003008019000007bb0220009c00000000020400190000000002036019000000000220004c000012290000c13d000000000100001900001edf00010430000007eb0330009c00000f710000c13d0000000003000416000000000330004c000011570000c13d000000040220008a000007bb030000410000001f0420008c00000000040000190000000004032019000007bb02200197000000000520004c0000000003008019000007bb0220009c00000000020400190000000002036019000000000220004c000012400000c13d000000000100001900001edf00010430000000000100001900001edf000104300000000003000416000000000330004c000011410000c13d000000040220008a000007bb030000410000001f0420008c00000000040000190000000004032019000007bb02200197000000000520004c0000000003008019000007bb0220009c00000000020400190000000002036019000000000220004c000011a70000c13d000000000100001900001edf000104300000000003000416000000000330004c000011430000c13d000000040220008a000007bb030000410000001f0420008c00000000040000190000000004032019000007bb02200197000000000520004c0000000003008019000007bb0220009c00000000020400190000000002036019000000000220004c000011b40000c13d000000000100001900001edf000104300000000001000416000000000110004c000011450000c13d000000040120008a000000010200008a000007bb03000041000000000221004b00000000020000190000000002032019000007bb01100197000007bb0410009c0000000003008019000007bb01100167000007bb0110009c00000000010200190000000001036019000000000110004c000011d80000c13d000000000100001900001edf000104300000000001000416000000000110004c000011470000c13d000000040120008a000000010200008a000007bb03000041000000000221004b00000000020000190000000002032019000007bb01100197000007bb0410009c0000000003008019000007bb01100167000007bb0110009c00000000010200190000000001036019000000000110004c000011de0000c13d000000000100001900001edf000104300000000001000416000000000110004c000011490000c13d000000040120008a000000010200008a000007bb03000041000000000221004b00000000020000190000000002032019000007bb01100197000007bb0410009c0000000003008019000007bb01100167000007bb0110009c00000000010200190000000001036019000000000110004c000011e50000c13d000000000100001900001edf000104300000000003000416000000000330004c0000114b0000c13d000000040220008a000007bb030000410000001f0420008c00000000040000190000000004032019000007bb02200197000000000520004c0000000003008019000007bb0220009c00000000020400190000000002036019000000000220004c000011ed0000c13d000000000100001900001edf000104300000000001000416000000000110004c0000114d0000c13d000000040120008a000000010200008a000007bb03000041000000000221004b00000000020000190000000002032019000007bb01100197000007bb0410009c0000000003008019000007bb01100167000007bb0110009c00000000010200190000000001036019000000000110004c000012070000c13d000000000100001900001edf000104300000000003000416000000000330004c0000114f0000c13d000000040320008a000007bb040000410000009f0530008c00000000050000190000000005042019000007bb03300197000000000630004c0000000004008019000007bb0330009c00000000030500190000000003046019000000000330004c0000120f0000c13d000000000100001900001edf000104300000000003000416000000000330004c000011510000c13d000000040220008a000007bb030000410000001f0420008c00000000040000190000000004032019000007bb02200197000000000520004c0000000003008019000007bb0220009c00000000020400190000000002036019000000000220004c000012150000c13d000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000010370000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000010300000413d000000000420004c000010450000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000010550000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b0000104e0000413d000000000420004c000010630000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf00010430000000000100001900001edf00010430000000000100001900001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000010770000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000010700000413d000000000420004c000010850000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000010950000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b0000108e0000413d000000000420004c000010a30000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000010b90000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000010b20000413d000000000420004c000010c70000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000010f30000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000010ec0000413d000000000420004c000011010000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000011110000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b0000110a0000413d000000000420004c0000111f0000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf000104300000000401900370000000000101043b000000000010043500000020010000390000000000010435000007be0100004100008010020000390000000003000415000000460330008a00000020033000c91edd1ea70000040f000000460100035f000000ff02000039000000450220024f000000010220008c0000124d0000c13d000000000101043b00000001011000391edd1edb0000040f0000005302000029000000000202043300000000001204350000004001200210000007c101100197000007f5011001c700001ede0001042e0000000401900370000000000101043b1edd19fa0000040f00000040020000390000000002020433000000000110004c0000000001000019000000010100c03900000000001204350000004001200210000007c101100197000007f5011001c700001ede0001042e0000000403900370000000000303043b000007f60330009c0000126b0000413d000000000100001900001edf0001043000000040010000390000000001010433000007bd0200004100000000002104350000004001100210000007c101100197000007f5011001c700001ede0001042e0000000402900370000000000102043b000d00000001001d0000002401900370000000000101043b000c00000001001d000007f60110009c000012710000413d000000000100001900001edf0001043000000002010000391edd1edb0000040f0000000a02000029000000000202043300000000001204350000004001200210000007c101100197000007f5011001c700001ede0001042e0000002402900370000000000202043b000007f60320009c000012910000413d000000000100001900001edf000104300000000401900370000000000101043b1edd19c50000040f00000040020000390000000002020433000000000110004c0000000001000019000000010100c03900000000001204350000004001200210000007c101100197000007f5011001c700001ede0001042e000000000276004b0000129c0000c13d0000000401900370000000000101043b000d00000001001d00000002010000391edd1edb0000040f0000004002000039000000000202043300000020032000390000000d040000290000000005040019000000000043043500000000001204350000005304000029000000200140021000000001011001bf000007ca03000041000000000031041f000e00000004001d0000000001240019000000000321004b000012b00000a13d000011d00000013d000000000003041e0000004002200039000000000321004b000012b00000a13d000000000421004900000000030204330000003f0440008c000011cc0000a13d00000020042000390000000004040433000000000043041e000011cd0000013d00000000010a043300000000000104350000004001100210000007c101100197000007f5011001c700001ede0001042e00000000010a0433000007c50200004100000000002104350000004001100210000007c101100197000007f5011001c700001ede0001042e00000040010000390000000001010433000007c40200004100000000002104350000004001100210000007c101100197000007f5011001c700001ede0001042e0000000401900370000000000101043b0000000000100435000000010100003900000020020000390000000000120435000007be0100004100008010020000390000000003000415000000200330008a00000020033000c91edd1ea70000040f000000200100035f000000ff020000390000001f0220024f000000010220008c000012bc0000c13d000000000101043b1edd1edb0000040f0000005302000029000000000202043300000000001204350000004001200210000007c101100197000007f5011001c700001ede0001042e0000000a010000290000000001010433000007c30200004100000000002104350000004001100210000007c101100197000007f5011001c700001ede0001042e0000000403900370000000000303043b000007f60330009c000012da0000413d000000000100001900001edf000104300000000401900370000000000101043b1edd19900000040f00000040020000390000000002020433000000000110004c0000000001000019000000010100c03900000000001204350000004001200210000007c101100197000007f5011001c700001ede0001042e0000002402900370000000000102043b000e00000001001d000007f60210009c000012e00000413d000000000100001900001edf000104300000000401900370000000000101043b0000081202100197000000000221004b000013170000c13d0000000102000039000008130310009c000012380000613d000008140210009c00000000020000190000000102006039000008150110009c00000000010000190000000101006039000000000221019f00000040010000390000000001010433000000010220018f00000000002104350000004001100210000007c101100197000007f5011001c700001ede0001042e0000000401900370000000000101043b1edd1a460000040f00000040020000390000000002020433000000000110004c0000000001000019000000010100c03900000000001204350000004001200210000007c101100197000007f5011001c700001ede0001042e00000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c0000125b0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000012540000413d000000000420004c000012690000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf000104300000002403900370000000000303043b000007f60330009c000013190000413d000000000100001900001edf000104300000000d01000029000000000010043500000020010000390000000000010435000007be01000041000080100200003900000000030004150000001e0330008a00000020033000c91edd1ea70000040f0000001e0100035f000000ff020000390000001d0220024f000000010220008c0000131f0000c13d000000000101043b00000001011000391edd1edb0000040f0000000e020000291edd17b00000040f0000000d010000290000000c020000291edd18be0000040f000000600100003900000051011001ef000007c001100197000000530200002900000000020204330000004002200210000007c102200197000000000121019f00001ede0001042e000000000262004b0000133d0000c13d0000000401900370000000000101043b00000000020600191edd18be0000040f000000400100003900000000010104330000004001100210000007c10110019700001ede0001042e0000004001000039000000000101043300000064021000390000080d03000041000000000032043500000044021000390000080e03000041000000000032043500000024021000390000002b030000390000000000320435000007fb0200004100000000002104350000000402100039000000200300003900000000003204350000004001100210000007c101100197000007fe011001c700001edf00010430000000020200003900000000010500191edd1ed90000040f000000600100003900000051011001ef000007c0011001970000000e0200002900000000020204330000004002200210000007c102200197000000000121019f00001ede0001042e00000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000012ca0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000012c30000413d000000000420004c000012d80000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf000104300000002403900370000000000303043b000007f60330009c000013510000413d000000000100001900001edf000104300000000401900370000000000101043b00000000001004350000002001000039000c00000001001d0000000000010435000007be0100004100008010020000390000000003000415000000320330008a00000020033000c91edd1ea70000040f000000320100035f000000ff02000039000d00000002001d000000310220024f000000010220008c000013570000c13d000000000101043b00000051020000290000000e0300002900000000003204350000000c020000290000000000120435000000600100003900000053011001ef000007c0011001970000000a0200002900000051022001ef000007c102200197000000000112019f000007f8011001c700008010020000390000000003000415000000300330008a00000020033000c91edd1ea70000040f000000300100035f0000000d020000290000002f0220024f000000000220004c0000137f0000613d000000000101043b1edd1edb0000040f00000053020000290000000002020433000000ff0110018f000000000110004c0000000001000019000000010100c03900000000001204350000004001200210000007c101100197000007f5011001c700001ede0001042e000000000100001900001edf000104300000006401900370000000000101043b000007bc0310009c000013750000413d000000000100001900001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c0000132d0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000013260000413d000000000420004c0000133b0000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf000104300000004001000039000000000101043300000064021000390000080f03000041000000000032043500000044021000390000081003000041000000000032043500000024021000390000002f030000390000000000320435000007fb0200004100000000002104350000000402100039000000200300003900000000003204350000004001100210000007c101100197000007fe011001c700001edf000104300000008401900370000000000101043b000007bc0310009c0000139d0000413d000000000100001900001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000013650000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b0000135e0000413d000000000420004c000013730000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000004011000391edd14500000040f00000040010000390000000001010433000008110200004100000000002104350000004001100210000007c101100197000007f5011001c700001ede0001042e00000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c0000138d0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000013860000413d000000000420004c0000139b0000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000004011000391edd14500000040f0000000a010000290000000001010433000007f70200004100000000002104350000004001100210000007c101100197000007f5011001c700001ede0001042e00000000030100190000001f01300039000007bb04000041000000000521004b00000000050000190000000005044019000007bb06200197000007bb01100197000000000761004b000000000400a019000000000161013f000007bb0110009c00000000010500190000000001046019000000000110004c000013dd0000613d0000000004030433000007bc0140009c000013df0000813d00000005054002100000003f01500039000000200600008a000000000761016f000000400600003900000000010604330000000007710019000000000817004b00000000080000190000000108004039000007ba0970009c000013e60000213d000000010880018f000000000880004c000013e60000c13d0000000000760435000000000041043500000020033000390000000004530019000000000224004b000013ed0000213d000000000243004b000013da0000813d00000000020100190000000005030433000007c70650009c000013db0000213d000000200220003900000000005204350000002003300039000000000543004b000013d20000413d000000000001042d000000000100001900001edf00010430000000000100001900001edf00010430000007c8010000410000000000100435000000410100003900000004020000390000000000120435000007c90100004100001edf00010430000007c8010000410000000000100435000000410100003900000004020000390000000000120435000007c90100004100001edf00010430000000000100001900001edf00010430000000040320008a000007bb040000410000009f0530008c00000000050000190000000005042019000007bb03300197000000000630004c0000000004008019000007bb0330009c00000000030500190000000003046019000000000330004c0000142e0000613d00000002030003670000000404300370000000000404043b000007f60540009c000014300000813d0000002005100039000000200610011a000000000604001f0000002404300370000000000404043b000000200550011a000000000504001f0000004404300370000000000404043b000007bc0540009c000014320000813d0000002305400039000007bb06000041000000000725004b00000000070000190000000007064019000007bb08200197000007bb05500197000000000985004b000000000600a019000000000585013f000007bb0550009c00000000050700190000000005066019000000000550004c000014340000613d0000000405400039000000000553034f000000000505043b000007bc0650009c000014360000813d00000024044000390000000006450019000000000226004b000014380000213d000000200210011a000300000205001f000200000204001f0000006404300370000000000404043b000400000204001f0000008403300370000000000303043b000500000203001f000000000001042d000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf000104300000001f02200039000000200300008a000000000232016f0000000001120019000000000221004b00000000020000190000000102004039000007ba0310009c000014490000213d000000010220018f000000000220004c000014490000c13d00000040020000390000000000120435000000000001042d000007c8010000410000000000100435000000410100003900000004020000390000000000120435000007c90100004100001edf000104300000001f03100039000007bb04000041000000000523004b00000000050000190000000005044019000007bb06200197000007bb03300197000000000763004b000000000400a019000000000363013f000007bb0330009c00000000030500190000000003046019000000000330004c0000149b0000613d0000000203000367000000000313034f000000000303043b000007bc0430009c0000149d0000813d0000003f04300039000000200500008a000000000654016f000000400500003900000000040504330000000006640019000000000746004b00000000070000190000000107004039000007ba0860009c000014a40000213d000000010770018f000000000770004c000014a40000c13d0000000000650435000000000034043500000020011000390000000005310019000000000225004b000014ab0000213d0000000202000367000000000212034f0000001f0130018f00000020054000390000000506300270000000000760004c000014880000613d000000000700001900000005087002100000000009850019000000000882034f000000000808043b00000000008904350000000107700039000000000867004b000014800000413d000000000710004c000014970000613d0000000506600210000000000262034f00000000056500190000000301100210000000000605043300000000061601cf000000000616022f000000000202043b0000010001100089000000000212022f00000000011201cf000000000161019f0000000000150435000000000143001900000020011000390000000000010435000000000001042d000000000100001900001edf00010430000007c8010000410000000000100435000000410100003900000004020000390000000000120435000007c90100004100001edf00010430000007c8010000410000000000100435000000410100003900000004020000390000000000120435000007c90100004100001edf00010430000000000100001900001edf00010430000000040320008a000007bb040000410000009f0530008c00000000050000190000000005042019000007bb03300197000000000630004c0000000004008019000007bb0330009c00000000030500190000000003046019000000000330004c000015270000613d00000002030003670000000404300370000000000404043b000007bc0540009c000015290000813d0000002305400039000007bb06000041000000000725004b00000000070000190000000007064019000007bb08200197000007bb05500197000000000985004b000000000600a019000000000585013f000007bb0550009c00000000050700190000000005066019000000000550004c0000152b0000613d0000000405400039000000000553034f000000000505043b000007bc0650009c0000152d0000813d000000240440003900000005065002100000000006460019000000000626004b0000152f0000213d0000002006100039000000200710011a000000000704001f000000200460011a000000000405001f0000002404300370000000000404043b000007bc0540009c000015310000813d0000002305400039000007bb06000041000000000725004b00000000070000190000000007064019000007bb08200197000007bb05500197000000000985004b000000000600a019000000000585013f000007bb0550009c00000000050700190000000005066019000000000550004c000015330000613d0000000405400039000000000553034f000000000505043b000007bc0650009c000015350000813d000000240440003900000005065002100000000006460019000000000626004b000015370000213d00000060061000390000004007100039000000200770011a000000000704001f000000200460011a000000000405001f0000004404300370000000000404043b000007bc0540009c000015390000813d0000002305400039000007bb06000041000000000725004b00000000070000190000000007064019000007bb08200197000007bb05500197000000000985004b000000000600a019000000000585013f000007bb0550009c00000000050700190000000005066019000000000550004c0000153b0000613d0000000405400039000000000553034f000000000505043b000007bc0650009c0000153d0000813d000000240440003900000005065002100000000006460019000000000226004b0000153f0000213d000000200210011a000500000205001f000400000204001f0000006404300370000000000404043b000600000204001f0000008403300370000000000303043b000700000203001f000000000001042d000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf000104300000001f03100039000007bb04000041000000000523004b00000000050000190000000005044019000007bb06200197000007bb03300197000000000763004b000000000400a019000000000363013f000007bb0330009c00000000030500190000000003046019000000000330004c000015750000613d0000000203000367000000000313034f000000000403043b000007bc0340009c000015770000813d00000005054002100000003f03500039000000200600008a000000000763016f000000400600003900000000030604330000000007730019000000000837004b00000000080000190000000108004039000007ba0970009c0000157e0000213d000000010880018f000000000880004c0000157e0000c13d0000000000760435000000000043043500000020011000390000000004510019000000000224004b000015850000213d000000000241004b000015740000813d0000000202000367000000000212034f000000000202043b000000200330003900000000002304350000002001100039000000000241004b0000156c0000413d000000000001042d000000000100001900001edf00010430000007c8010000410000000000100435000000410100003900000004020000390000000000120435000007c90100004100001edf00010430000007c8010000410000000000100435000000410100003900000004020000390000000000120435000007c90100004100001edf00010430000000000100001900001edf00010430000000000430004c000015910000613d000000000400001900000000052400190000000006140019000000000606043300000000006504350000002004400039000000000534004b0000158a0000413d00000000012300190000000000010435000000000001042d000b000000000002000600000001001d000007c30100004100000000001004350000002001000039000700000001001d0000000000010435000007be01000041000080100200003900000000030004150000000b0330008a00000020033000c91edd1ea70000040f0000000b0100035f000000ff02000039000500000002001d0000000a0220024f000000010220008c000016660000c13d000000000101043b0000000602000029000007c702200197000600000002001d000000000020043500000007020000290000000000120435000007be0100004100008010020000390000000003000415000000090330008a00000020033000c91edd1ea70000040f000000090100035f0000000502000029000000080220024f000000000220004c000016840000613d000000000101043b1edd1edb0000040f000000ff0110018f000000000110004c000015c00000613d0000000b00000005000000000001042d00000006010000291edd1e250000040f00000040070000390000000008070433000000810200008a000000000228004b000015e30000213d0000008002800039000007bc0320009c000015e30000813d000000000027043500000042020000390000000000280435000000200980003900000002020003670000000002200368000000000300001900000005043002100000000005490019000000000442034f000000000404043b00000000004504350000000103300039000000030430008c000015d10000413d0000000002080433000000000220004c000015ea0000c13d000007c8010000410000000000100435000000320100003900000004020000390000000000120435000007c90100004100001edf00010430000007c8010000410000000000100435000000410100003900000004020000390000000000120435000007c90100004100001edf000104300000000002090433000007ff0220019700000800022001c700000000002904350000000002080433000000010220008c000015f80000213d000007c8010000410000000000100435000000320100003900000004020000390000000000120435000007c90100004100001edf0001043000000021028000390000000003020433000007ff0330019700000801033001c70000000000320435000007c304000041000000410200003900000000030400190000000004080433000000000424004b000016510000a13d0000000f0430018f0000000304400210000000f8044000890000080205000041000000000445022f00000000059200190000000006050433000007ff06600197000000f804400210000000000446019f00000000004504350000000404300270000000010220008a000000010520008c000015ff0000213d0000000004070433000000100230008c000016580000813d0000002003400039000400000003001d000008050200004100000000002304350000000003010433000500000003001d00000020011000390000003702400039000300000007001d000100000008001d000200000009001d000600000004001d1edd15870000040f000000060100002900000005020000290000000001120019000000370210003900000806030000410000000000320435000000480210003900000001010000290000000003010433000100000003001d00000002010000291edd15870000040f00000005010000290000000102000029000000000321001900000028023000390000000601000029000000000021043500000048023000391edd143a0000040f00000003010000290000000004010433000500000004001d000007fb01000041000000000014043500000004014000390000000702000029000000000021043500000006010000290000000003010433000700000003001d00000024014000390000000000310435000000440240003900000004010000291edd15870000040f00000005010000290000004001100210000007c101100197000000070200002900000060022002100000080702200041000008080220019700000809022000410000080a02200197000000000112019f00001edf00010430000007c8010000410000000000100435000000320100003900000004020000390000000000120435000007c90100004100001edf00010430000000440140003900000803020000410000000000210435000007fb010000410000000000140435000000240140003900000007020000290000000000210435000000040140003900000000002104350000004001400210000007c10110019700000804011001c700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000016740000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b0000166d0000413d000000000420004c000016820000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000016920000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b0000168b0000413d000000000420004c000016a00000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf00010430000b000000000002000600000001001d000007c40100004100000000001004350000002001000039000700000001001d0000000000010435000007be01000041000080100200003900000000030004150000000b0330008a00000020033000c91edd1ea70000040f0000000b0100035f000000ff02000039000500000002001d0000000a0220024f000000010220008c000017740000c13d000000000101043b0000000602000029000007c702200197000600000002001d000000000020043500000007020000290000000000120435000007be0100004100008010020000390000000003000415000000090330008a00000020033000c91edd1ea70000040f000000090100035f0000000502000029000000080220024f000000000220004c000017920000613d000000000101043b1edd1edb0000040f000000ff0110018f000000000110004c000016ce0000613d0000000b00000005000000000001042d00000006010000291edd1e250000040f00000040070000390000000008070433000000810200008a000000000228004b000016f10000213d0000008002800039000007bc0320009c000016f10000813d000000000027043500000042020000390000000000280435000000200980003900000002020003670000000002200368000000000300001900000005043002100000000005490019000000000442034f000000000404043b00000000004504350000000103300039000000030430008c000016df0000413d0000000002080433000000000220004c000016f80000c13d000007c8010000410000000000100435000000320100003900000004020000390000000000120435000007c90100004100001edf00010430000007c8010000410000000000100435000000410100003900000004020000390000000000120435000007c90100004100001edf000104300000000002090433000007ff0220019700000800022001c700000000002904350000000002080433000000010220008c000017060000213d000007c8010000410000000000100435000000320100003900000004020000390000000000120435000007c90100004100001edf0001043000000021028000390000000003020433000007ff0330019700000801033001c70000000000320435000007c404000041000000410200003900000000030400190000000004080433000000000424004b0000175f0000a13d0000000f0430018f0000000304400210000000f8044000890000080205000041000000000445022f00000000059200190000000006050433000007ff06600197000000f804400210000000000446019f00000000004504350000000404300270000000010220008a000000010520008c0000170d0000213d0000000004070433000000100230008c000017660000813d0000002003400039000400000003001d000008050200004100000000002304350000000003010433000500000003001d00000020011000390000003702400039000300000007001d000100000008001d000200000009001d000600000004001d1edd15870000040f000000060100002900000005020000290000000001120019000000370210003900000806030000410000000000320435000000480210003900000001010000290000000003010433000100000003001d00000002010000291edd15870000040f00000005010000290000000102000029000000000321001900000028023000390000000601000029000000000021043500000048023000391edd143a0000040f00000003010000290000000004010433000500000004001d000007fb01000041000000000014043500000004014000390000000702000029000000000021043500000006010000290000000003010433000700000003001d00000024014000390000000000310435000000440240003900000004010000291edd15870000040f00000005010000290000004001100210000007c101100197000000070200002900000060022002100000080702200041000008080220019700000809022000410000080a02200197000000000112019f00001edf00010430000007c8010000410000000000100435000000320100003900000004020000390000000000120435000007c90100004100001edf00010430000000440140003900000803020000410000000000210435000007fb010000410000000000140435000000240140003900000007020000290000000000210435000000040140003900000000002104350000004001400210000007c10110019700000804011001c700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000017820000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b0000177b0000413d000000000420004c000017900000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000017a00000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000017990000413d000000000420004c000017ae0000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf00010430000b000000000002000600000002001d000400000001001d00000000001004350000002001000039000700000001001d0000000000010435000007be01000041000080100200003900000000030004150000000b0330008a00000020033000c91edd1ea70000040f0000000b0100035f000000ff02000039000500000002001d0000000a0220024f000000010220008c000018820000c13d000000000101043b0000000602000029000007c702200197000600000002001d000000000020043500000007020000290000000000120435000007be0100004100008010020000390000000003000415000000090330008a00000020033000c91edd1ea70000040f000000090100035f0000000502000029000000080220024f000000000220004c000018a00000613d000000000101043b1edd1edb0000040f000000ff0110018f000000000110004c000017dc0000613d0000000b00000005000000000001042d00000006010000291edd1e250000040f00000040070000390000000008070433000000810200008a000000000228004b000017ff0000213d0000008002800039000007bc0320009c000017ff0000813d000000000027043500000042020000390000000000280435000000200980003900000002020003670000000002200368000000000300001900000005043002100000000005490019000000000442034f000000000404043b00000000004504350000000103300039000000030430008c000017ed0000413d0000000002080433000000000220004c000018060000c13d000007c8010000410000000000100435000000320100003900000004020000390000000000120435000007c90100004100001edf00010430000007c8010000410000000000100435000000410100003900000004020000390000000000120435000007c90100004100001edf000104300000000002090433000007ff0220019700000800022001c700000000002904350000000002080433000000010220008c000018140000213d000007c8010000410000000000100435000000320100003900000004020000390000000000120435000007c90100004100001edf0001043000000021028000390000000003020433000007ff0330019700000801033001c700000000003204350000004102000039000000040500002900000000030500190000000004080433000000000424004b0000186d0000a13d0000000f0430018f0000000304400210000000f8044000890000080205000041000000000445022f00000000059200190000000006050433000007ff06600197000000f804400210000000000446019f00000000004504350000000405300270000000010220008a000000010420008c0000181b0000213d0000000004070433000000100230008c000018740000813d0000002003400039000400000003001d000008050200004100000000002304350000000003010433000500000003001d00000020011000390000003702400039000300000007001d000100000008001d000200000009001d000600000004001d1edd15870000040f000000060100002900000005020000290000000001120019000000370210003900000806030000410000000000320435000000480210003900000001010000290000000003010433000100000003001d00000002010000291edd15870000040f00000005010000290000000102000029000000000321001900000028023000390000000601000029000000000021043500000048023000391edd143a0000040f00000003010000290000000004010433000500000004001d000007fb01000041000000000014043500000004014000390000000702000029000000000021043500000006010000290000000003010433000700000003001d00000024014000390000000000310435000000440240003900000004010000291edd15870000040f00000005010000290000004001100210000007c101100197000000070200002900000060022002100000080702200041000008080220019700000809022000410000080a02200197000000000112019f00001edf00010430000007c8010000410000000000100435000000320100003900000004020000390000000000120435000007c90100004100001edf00010430000000440140003900000803020000410000000000210435000007fb010000410000000000140435000000240140003900000007020000290000000000210435000000040140003900000000002104350000004001400210000007c10110019700000804011001c700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000018900000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000018890000413d000000000420004c0000189e0000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000018ae0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000018a70000413d000000000420004c000018bc0000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf00010430000c000000000002000100000002001d000200000001001d00000000001004350000002001000039000400000001001d0000000000010435000007be01000041000080100200003900000000030004150000000c0330008a00000020033000c91edd1ea70000040f0000000c0100035f000000ff02000039000300000002001d0000000b0220024f000000010220008c000019180000c13d000000000101043b0000000102000029000007c702200197000100000002001d000000000020043500000004020000290000000000120435000007be01000041000080100200003900000000030004150000000a0330008a00000020033000c91edd1ea70000040f0000000a0100035f0000000302000029000000090220024f000000000220004c000019360000613d000000000101043b1edd1edb0000040f000000ff0110018f000000000110004c000019160000613d0000000201000029000000000010043500000004010000290000000000010435000007be0100004100008010020000390000000003000415000000080330008a00000020033000c91edd1ea70000040f000000080100035f0000000302000029000000070220024f000000000220004c000019540000613d000000000101043b0000000102000029000000000020043500000004020000290000000000120435000007be0100004100008010020000390000000003000415000000060330008a00000020033000c91edd1ea70000040f000000060100035f0000000302000029000000050220024f000000000220004c000019720000613d000000000101043b000400000001001d1edd1edb0000040f000001000200008a000000000121016f00000004020000291edd1ed90000040f00000816010000410000000402000039000000000012041f00000002010000290000000102000029000000000021041e0000000001000411000000000001041e0000000c00000005000000000001042d00000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000019260000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b0000191f0000413d000000000420004c000019340000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000019440000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b0000193d0000413d000000000420004c000019520000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000019620000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b0000195b0000413d000000000420004c000019700000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000019800000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000019790000413d000000000420004c0000198e0000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000020000000000020000000000100435000000010100003900000020020000390000000000120435000007be0100004100008010020000390000000003000415000000020330008a00000020033000c91edd1ea70000040f000000020100035f000000ff02000039000000010220024f000000010220008c000019a70000c13d000000000101043b1edd1edb0000040f000000000110004c0000000001000019000000010100c0390000000200000005000000000001042d00000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000019b50000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000019ae0000413d000000000420004c000019c30000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000020000000000020000000000100435000000010100003900000020020000390000000000120435000007be0100004100008010020000390000000003000415000000020330008a00000020033000c91edd1ea70000040f000000020100035f000000ff02000039000000010220024f000000010220008c000019dc0000c13d000000000101043b1edd1edb0000040f000000010110008c000000000100001900000001010020390000000200000005000000000001042d00000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c000019ea0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000019e30000413d000000000420004c000019f80000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000060000000000020000000000100435000000010100003900000020020000390000000000120435000007be0100004100008010020000390000000003000415000000060330008a00000020033000c91edd1ea70000040f000000060100035f000000ff02000039000200000002001d000000050220024f000000010220008c00001a260000c13d000000000101043b1edd1edb0000040f000000010210008c000000000200001900001a230000a13d000100000001001d0000081701000041000000000010043900000818010000410000800b020000390000000003000415000000040330008a00000020033000c91edd1ea70000040f0000000201000029000000030110024f000000000110004c00001a440000613d000000040100035f000000000101043b0000000102000029000000000112004b0000000002000019000000010200a039000000010120018f0000000600000005000000000001042d00000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c00001a340000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b00001a2d0000413d000000000420004c00001a420000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf00010430000000000100001900001edf0001043000020000000000020000000000100435000000010100003900000020020000390000000000120435000007be0100004100008010020000390000000003000415000000020330008a00000020033000c91edd1ea70000040f000000020100035f000000ff02000039000000010220024f000000010220008c00001a5d0000c13d000000000101043b1edd1edb0000040f000000010110008c000000000100001900000001010060390000000200000005000000000001042d00000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c00001a6b0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b00001a640000413d000000000420004c00001a790000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf000104300002000000000002000000400800003900000000070804330000006009700039000000a00a0000390000000000a9043500000040097000390000000000290435000000c0027000390000000000420435000007c702100197000000200170003900000000002104350000000202000367000000000932034f0000001f0340018f000000e002700039000000050a400270000000000ba0004c00001a980000613d000000000b000019000000050cb00210000000000dc20019000000000cc9034f000000000c0c043b0000000000cd0435000000010bb00039000000000cab004b00001a900000413d000000000b30004c00001aa70000613d000000050aa002100000000009a9034f000000000aa200190000000303300210000000000b0a0433000000000b3b01cf000000000b3b022f000000000909043b0000010003300089000000000939022f00000000033901cf0000000003b3019f00000000003a043500000000024200190000000000020435000000a002700039000000000062043500000080027000390000000000520435000000df02400039000000200300008a000000000232016f0000000000270435000000ff02400039000000000332016f0000000002730019000000000332004b00000000030000190000000103004039000007ba0420009c00001ad10000213d000000010330018f000000000330004c00001ad10000c13d00000000002804350000004001100210000007c10110019700000000020704330000006002200210000007c002200197000000000121019f000007f8011001c700008010020000390000000003000415000000020330008a00000020033000c91edd1ea70000040f000000020100035f000000ff02000039000000010220024f000000010220008c00001ad80000c13d000000000101043b0000000200000005000000000001042d000007c8010000410000000000100435000000410100003900000004020000390000000000120435000007c90100004100001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c00001ae60000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b00001adf0000413d000000000420004c00001af40000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf000104300008000000000002000600000005001d000000400e00003900000000050e0433000000c00950003900000000002904350000002009500039000000a00a0000390000000000a90435000000e00c500039000000000a20004c00001b0e0000613d000000000a000019000000020b000367000000000b1b034f000000000b0b043b000007c70db0009c00001bc20000213d0000000000bc04350000002001100039000000200cc00039000000010aa00039000000000b2a004b00001b030000413d00000000015c0049000000200110008a0000004002500039000000000012043500000000004c0435000008190140009c00001bca0000213d000300000008001d000400000007001d00000002020003670000081901400197000000000710004c00001b260000613d000000000232034f0000002003c00039000000000a0000190000000507a00210000000000d730019000000000772034f000000000707043b00000000007d0435000000010aa0003900000000071a004b00001b1e0000413d000100000009001d00020000000e001d0000000501400210000000000200004c00001b2b0000613d00000000031c00190000000001530049000500000005001d000000600250003900000000001204350000002001300039000000000061043500000040013000390000000502600210000000000d210019000000000260004c00001b950000613d0000001f0200008a000000060c0000290000000005c20049000000400400008a0000000003340049000000000400001900001b490000013d0000001f02e00039000000200700008a000000000272016f0000000007de00190000000000070435000000000dd200190000002001100039000000200cc000390000000104400039000000000264004b00001b950000813d0000000007d300190000000000710435000000000f0000310000000007f50019000000020a000367000000000eca034f000000000e0e043b000007bb08000041000000000b7e004b000000000b000019000000000b084019000007bb07700197000007bb09e00197000000000279004b00000000020000190000000002082019000000000779013f000007bb0770009c00000000020bc019000000000220004c00001bc40000613d000000060200002900000000072e001900000000027a034f000000000e02043b000007bc02e0009c00001bc60000813d000000200a7000390000000002ef0049000007bb0700004100000000082a004b0000000008000019000000000807a019000007bb02200197000007bb09a00197000000000b29004b000000000700a019000000000229013f000007bb0220009c00000000020800190000000002076019000000000220004c00001bc80000613d0000000000ed04350000000202000367000000000fa2034f000000200dd00039000000050ae002700000000002a0004c00001b840000613d0000000007000019000000050270021000000000082d001900000000022f034f000000000202043b000000000028043500000001077000390000000002a7004b00001b7c0000413d0000001f07e0018f000000000270004c00001b3e0000613d0000000502a0021000000000082f034f00000000022d00190000000307700210000000000902043300000000097901cf000000000979022f000000000808043b0000010007700089000000000878022f00000000077801cf000000000797019f000000000072043500001b3e0000013d0000000504000029000000a0014000390000000302000029000000000021043500000080014000390000000402000029000000000021043500000000014d0049000000200210008a00000000002404350000001f01100039000000200200008a000000000221016f0000000001420019000000000221004b00000000020000190000000102004039000007ba0310009c00001bcc0000213d000000010220018f000000000220004c00001bcc0000c13d0000000202000029000000000012043500000001010000290000004001100210000007c10110019700000000020404330000006002200210000007c002200197000000000121019f000007f8011001c700008010020000390000000003000415000000080330008a00000020033000c91edd1ea70000040f000000080100035f000000ff02000039000000070220024f000000000220004c00001bd30000613d000000000101043b0000000800000005000000000001042d000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000007c8010000410000000000100435000000410100003900000004020000390000000000120435000007c90100004100001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c00001be10000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b00001bda0000413d000000000420004c00001bef0000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf000104300000004008100039000000a009000039000000000098043500000020081000390000000000380435000000a0031000390000000000530435000007c70220019700000000002104350000000202000367000000000442034f0000001f0350018f000000c0021000390000000508500270000000000980004c00001c0a0000613d0000000009000019000000050a900210000000000ba20019000000000aa4034f000000000a0a043b0000000000ab04350000000109900039000000000a89004b00001c020000413d000000000930004c00001c190000613d0000000508800210000000000484034f00000000088200190000000303300210000000000908043300000000093901cf000000000939022f000000000404043b0000010003300089000000000434022f00000000033401cf000000000393019f00000000003804350000000003520019000000000003043500000080031000390000000000730435000000600110003900000000006104350000001f01500039000000200300008a000000000131016f0000000001210019000000000001042d000000000110004c00001c270000613d000000000001042d0000004001000039000000000101043300000064021000390000081a03000041000000000032043500000044021000390000081b030000410000000000320435000000240210003900000023030000390000000000320435000007fb0200004100000000002104350000000402100039000000200300003900000000003204350000004001100210000007c101100197000007fe011001c700001edf00010430000000000334004b00001c6c0000813d00000005034002100000000005230019000000000300003100000000042300490000001f0640008a0000000204000367000000000554034f000000000505043b000007bb07000041000000000865004b00000000080000190000000008074019000007bb06600197000007bb09500197000000000a69004b000000000700a019000000000669013f000007bb0660009c00000000060800190000000006076019000000000660004c00001c730000613d0000000005250019000000000254034f000000000202043b000007bc0420009c00001c750000813d00000000042300490000002003500039000007bb05000041000000000643004b0000000006000019000000000605a019000007bb04400197000007bb07300197000000000847004b000000000500a019000000000447013f000007bb0440009c00000000040600190000000004056019000000000440004c00001c770000613d000000200410011a000100000402001f000000000403001f000000000001042d000007c8010000410000000000100435000000320100003900000004020000390000000000120435000007c90100004100001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000a000000000002000400000002001d000200000001001d1edd19900000040f000000000110004c00001cbd0000c13d00000002010000391edd1edb0000040f0000000402000029000000000121004b00001cd10000213d0000081701000041000000000010043900000818010000410000800b0200003900000000030004150000000a0330008a00000020033000c91edd1ea70000040f000000ff01000039000300000001001d000000090110024f000000010110008c00001ce50000c13d0000000a0100035f000000000101043b000100000001001d0000081701000041000000000010043900000818010000410000800b020000390000000003000415000000080330008a00000020033000c91edd1ea70000040f0000000302000029000000070120024f000000000110004c00001ce70000613d000000040100002900000001020000290000000002120019000000080100035f000000000101043b000400000002001d000000000121004b00001ce90000213d00000002010000290000000000100435000000010100003900000020020000390000000000120435000007be0100004100008010020000390000000003000415000000060330008a00000020033000c91edd1ea70000040f000000060100035f0000000302000029000000050220024f000000010220008c00001cf00000c13d000000000201043b00000004010000291edd1ed90000040f0000000a00000005000000000001042d0000004001000039000000000101043300000064021000390000081c03000041000000000032043500000044021000390000081d03000041000000000032043500000024021000390000002f030000390000000000320435000007fb0200004100000000002104350000000402100039000000200300003900000000003204350000004001100210000007c101100197000007fe011001c700001edf000104300000004001000039000000000101043300000064021000390000081e03000041000000000032043500000044021000390000081f030000410000000000320435000000240210003900000026030000390000000000320435000007fb0200004100000000002104350000000402100039000000200300003900000000003204350000004001100210000007c101100197000007fe011001c700001edf00010430000000000100001900001edf00010430000000000100001900001edf00010430000007c8010000410000000000100435000000110100003900000004020000390000000000120435000007c90100004100001edf0001043000000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c00001cfe0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b00001cf70000413d000000000420004c00001d0c0000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf0001043000060000000000020000000006020019000000000c0100190000000201000367000000000331034f0000001f0240018f000000400b00003900000000010b04330000000507400270000000000870004c00001d220000613d00000000080000190000000509800210000000000a910019000000000993034f000000000909043b00000000009a04350000000108800039000000000978004b00001d1a0000413d000000000820004c00001d310000613d0000000507700210000000000373034f00000000077100190000000302200210000000000807043300000000082801cf000000000828022f000000000303043b0000010002200089000000000323022f00000000022301cf000000000282019f00000000002704350000000002410019000000000002043500000000020004140000000403c0008c00001d390000c13d0000000101000039000000010200003100001d600000013d00020000000b001d000000c00220021000000820022001970000006003400210000007c0033001970000004001100210000007c101100197000000000460004c00001d4e0000613d000000000113019f000000000121019f000007f8011001c700008009020000390000000005000415000000040550008a00000020055000c9000000000306001900000000040c0019000100000005001d1edd1ec00000040f00001d560000013d000000000131019f000000000121019f0000000003000415000000060330008a00000020033000c900000000020c0019000100000003001d1edd1e8e0000040f000000ff010000390000000102000029000000200220011a000000010112025f000000000202036700030000000203550000006002200270000107b90020019d000007b902200197000000020b000029000000000320004c00001d920000613d000007bc0320009c00001da90000813d0000003f03200039000000200400008a000000000443016f00000000030b04330000000004430019000000000534004b00000000050000190000000105004039000007ba0640009c00001db00000213d000000010550018f000000000550004c00001db00000c13d00000000004b043500000000002304350000002002300039000000030300036700000001050000310000001f0450018f0000000505500270000000000650004c00001d830000613d000000000600001900000005076002100000000008720019000000000773034f000000000707043b00000000007804350000000106600039000000000756004b00001d7b0000413d000000000640004c00001d920000613d0000000505500210000000000353034f00000000025200190000000304400210000000000502043300000000054501cf000000000545022f000000000303043b0000010004400089000000000343022f00000000034301cf000000000353019f0000000000320435000000000110004c00001d960000613d0000000600000005000000000001042d00000000010b0433000000640210003900000821030000410000000000320435000000440210003900000822030000410000000000320435000000240210003900000033030000390000000000320435000007fb0200004100000000002104350000000402100039000000200300003900000000003204350000004001100210000007c101100197000007fe011001c700001edf00010430000007c8010000410000000000100435000000410100003900000004020000390000000000120435000007c90100004100001edf00010430000007c8010000410000000000100435000000410100003900000004020000390000000000120435000007c90100004100001edf00010430000000000110004c00001dba0000613d000000000001042d0000004001000039000000000101043300000064021000390000082303000041000000000032043500000044021000390000082403000041000000000032043500000024021000390000002a030000390000000000320435000007fb0200004100000000002104350000000402100039000000200300003900000000003204350000004001100210000007c101100197000007fe011001c700001edf000104300001000000000002000100000002001d1edd19fa0000040f1edd1db70000040f0000000101000029000000000210004c00001dd70000c13d0000000100000005000000000001042d1edd1a460000040f000000000110004c00001dd50000c13d00000040010000390000000001010433000000640210003900000825030000410000000000320435000000440210003900000826030000410000000000320435000000240210003900000026030000390000000000320435000007fb0200004100000000002104350000000402100039000000200300003900000000003204350000004001100210000007c101100197000007fe011001c700001edf000104300003000000000002000100000001001d1edd19fa0000040f1edd1db70000040f00000001010000290000000000100435000000010100003900000020020000390000000000120435000007be0100004100008010020000390000000003000415000000030330008a00000020033000c91edd1ea70000040f000000030100035f000000ff02000039000000020220024f000000010220008c00001e070000c13d000000000201043b00000001010000391edd1ed90000040f0000000300000005000000000001042d00000060021002700000001f0220018f0000006503100270000007bf03300197000000000430004c00001e150000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b00001e0e0000413d000000000420004c00001e230000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000007c00110019700001edf00010430000000000201001900000040030000390000000001030433000000610400008a000000000441004b00001e6a0000213d0000006004100039000007bc0540009c00001e6a0000813d00000000004304350000002a040000390000000000410435000000200410003900000002050003670000000005500368000000000600001900000005076002100000000008740019000000000775034f000000000707043b00000000007804350000000106600039000000020760008c00001e350000413d0000000005010433000000000550004c00001e710000613d0000000005040433000007ff0550019700000800055001c700000000005404350000000005010433000000010550008c00001e780000a13d00000021051000390000000006050433000007ff0660019700000801066001c70000000000650435000000290500003900000000060200190000000002010433000000000252004b00001e630000a13d0000000f0260018f0000000302200210000000f8022000890000080207000041000000000227022f00000000074500190000000008070433000007ff08800197000000f802200210000000000228019f00000000002704350000000402600270000000010550008a000000010750008c00001e4d0000213d000000100260008c00001e7f0000813d000000000001042d000007c8010000410000000000100435000000320100003900000004020000390000000000120435000007c90100004100001edf00010430000007c8010000410000000000100435000000410100003900000004020000390000000000120435000007c90100004100001edf00010430000007c8010000410000000000100435000000320100003900000004020000390000000000120435000007c90100004100001edf00010430000007c8010000410000000000100435000000320100003900000004020000390000000000120435000007c90100004100001edf000104300000000001030433000000440210003900000803030000410000000000320435000007fb020000410000000000210435000000240210003900000020030000390000000000320435000000040210003900000000003204350000004001100210000007c10110019700000804011001c700001edf000104300002000000000002000200000003001d0000002003300039000100000003001d00001e9d002104210000000203000029000000200230011a0000000002010355000007bb010000410000000102000029000000200220011a00000000021201bd00000000010300190000000200000005000000000001042d0000000203000029000000200230011a000000000201035500000827010000410000000102000029000000200220011a000000000212018d00000000010300190000000200000005000000000001042d0002000000000002000200000003001d0000002003300039000100000003001d00001eb6002104230000000203000029000000200230011a0000000002010355000007bb010000410000000102000029000000200220011a00000000021201bd00000000010300190000000200000005000000000001042d0000000203000029000000200230011a000000000201035500000827010000410000000102000029000000200220011a000000000212018d00000000010300190000000200000005000000000001042d0002000000000002000200000005001d0000002005500039000100000005001d00001ecf002104210000000203000029000000200230011a0000000002010355000007bb010000410000000102000029000000200220011a00000000021201bd00000000010300190000000200000005000000000001042d0000000203000029000000200230011a000000000201035500000827010000410000000102000029000000200220011a000000000212018d00000000010300190000000200000005000000000001042d000000000012041b000000000001042d000000000101041a000000000001042d00001edd0000043200001ede0001042e00001edf00010430000000000000000100000000000000010000000000000001000000000000000100000000000000000000000000000000000000000000000000000000ffffffff000000000000000000000000000000000000000000000000ffffffffffffffff800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000005f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5020000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000007ffffffffffffff00000000000000000000000000000000ffffffff0000000000000000000000000000000000000000000000000000000000000000ffffffff0000000000000000bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ffb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1d8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63fd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f7832f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d000000000000000000000000ffffffffffffffffffffffffffffffffffffffff4e487b7100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002400000000000000000000000011c24f4ead16507c69ac467fbd5e4eed5fb5c699626d2cc6d66421df253886d5000000000000000000000000000000000000000000000000000000400000000100000002000000000000000000000000000000400000010000000000000000001806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b830200020000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000000000000000000000008f2a0baf00000000000000000000000000000000000000000000000000000000c4d252f400000000000000000000000000000000000000000000000000000000e38335e400000000000000000000000000000000000000000000000000000000e38335e500000000000000000000000000000000000000000000000000000000f23a6e6100000000000000000000000000000000000000000000000000000000f27a0c9200000000000000000000000000000000000000000000000000000000c4d252f500000000000000000000000000000000000000000000000000000000d45c443500000000000000000000000000000000000000000000000000000000d547741f00000000000000000000000000000000000000000000000000000000a217fdde00000000000000000000000000000000000000000000000000000000bc197c8000000000000000000000000000000000000000000000000000000000bc197c8100000000000000000000000000000000000000000000000000000000a217fddf00000000000000000000000000000000000000000000000000000000b08e51c000000000000000000000000000000000000000000000000000000000b1c5f427000000000000000000000000000000000000000000000000000000008f2a0bb0000000000000000000000000000000000000000000000000000000008f61f4f50000000000000000000000000000000000000000000000000000000091d148540000000000000000000000000000000000000000000000000000000013bc9f1f0000000000000000000000000000000000000000000000000000000031d5074f00000000000000000000000000000000000000000000000000000000584b153d00000000000000000000000000000000000000000000000000000000584b153e0000000000000000000000000000000000000000000000000000000064d62353000000000000000000000000000000000000000000000000000000008065657f0000000000000000000000000000000000000000000000000000000031d507500000000000000000000000000000000000000000000000000000000036568abe000000000000000000000000000000000000000000000000000000002ab0f528000000000000000000000000000000000000000000000000000000002f2ff15d000000000000000000000000000000000000000000000000000000002ab0f5290000000000000000000000000000000000000000000000000000000013bc9f2000000000000000000000000000000000000000000000000000000000150b7a0200000000000000000000000000000000000000000000000000000000248a9ca30000000000000000000000000000000000000000000000000000000007bd026400000000000000000000000000000000000000000000000000000000134008d30000000000000000000000000000000000000000000000000000000007bd0265000000000000000000000000000000000000000000000000000000000d3cf6fc0000000000000000000000000000000000000000000000000000000001d5062a0000000000000000000000000000000000000000000000000000000001ffc9a700000000000000000000000000000000000000200000000000000000000000000000000000000000000000010000000000000000000000000000000000000000f23a6e61000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000c2617efa69bab66782fa219543714338489c4e9e178271560a91b82c3f612b58baa1eb22f2a492ba1a5fea61b8df4d27c6c8b5f3971e63bb58fa14ff72eedb7008c379a0000000000000000000000000000000000000000000000000000000006e6e6f742062652063616e63656c6c656400000000000000000000000000000054696d656c6f636b436f6e74726f6c6c65723a206f7065726174696f6e206361000000000000000000000000000000000000008400000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff300000000000000000000000000000000000000000000000000000000000000078000000000000000000000000000000000000000000000000000000000000003031323334353637383961626364656600000000000000000000000000000000537472696e67733a20686578206c656e67746820696e73756666696369656e740000000000000000000000000000000000000064000000000000000000000000416363657373436f6e74726f6c3a206163636f756e7420000000000000000000206973206d697373696e6720726f6c6520000000000000000000000000000000000000000000000000000000000000000000001f00000000000000000000000000000000000000000000000000000000ffffffe0000000000000000000000000000000000000000000000000000000000000004400000000000000000000000000000000000000000000000000000000ffffffe4000000000000000000000000bc197c81000000000000000000000000000000000000000000000000000000004cf4410cc57040e44862ef0f45f3dd5a5e02db8eb8add648d4b0e236f1d07dca62652074696d656c6f636b00000000000000000000000000000000000000000054696d656c6f636b436f6e74726f6c6c65723a2063616c6c6572206d7573742020726f6c657320666f722073656c660000000000000000000000000000000000416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365150b7a0200000000000000000000000000000000000000000000000000000000ffffffff000000000000000000000000000000000000000000000000000000004e2312e00000000000000000000000000000000000000000000000000000000001ffc9a7000000000000000000000000000000000000000000000000000000007965db0b00000000000000000000000000000000000000000000000000000000f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b796b89b91644bc98cd93958e4c9038275d622183e25ac5af08cc6b5d95539132020002000000000000000000000000000000000400000000000000000000000007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff746368000000000000000000000000000000000000000000000000000000000054696d656c6f636b436f6e74726f6c6c65723a206c656e677468206d69736d617265616479207363686564756c6564000000000000000000000000000000000054696d656c6f636b436f6e74726f6c6c65723a206f7065726174696f6e20616c2064656c6179000000000000000000000000000000000000000000000000000054696d656c6f636b436f6e74726f6c6c65723a20696e73756666696369656e7400000000ffffffff00000000000000000000000000000000000000000000000072616e73616374696f6e2072657665727465640000000000000000000000000054696d656c6f636b436f6e74726f6c6c65723a20756e6465726c79696e672074206e6f742072656164790000000000000000000000000000000000000000000054696d656c6f636b436f6e74726f6c6c65723a206f7065726174696f6e2069736e64656e6379000000000000000000000000000000000000000000000000000054696d656c6f636b436f6e74726f6c6c65723a206d697373696e6720646570657fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000"
            }
          },
          "factoryDependencies": {},
          "hash": "01000829d55bb18b4d53ee1f8513aaa4f60ef6df7c50f59a4cca441088553dfe"
        }
      },
      "@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol": {
        "GovernorCountingSimple": {
          "abi": [
            {
              "inputs": [],
              "name": "Empty",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "ProposalCanceled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "proposer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "string[]",
                  "name": "signatures",
                  "type": "string[]"
                },
                {
                  "indexed": false,
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "startBlock",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "endBlock",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "ProposalCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "ProposalExecuted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                }
              ],
              "name": "VoteCast",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "VoteCastWithParams",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "BALLOT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "COUNTING_MODE",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "EXTENDED_BALLOT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                }
              ],
              "name": "castVote",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "castVoteBySig",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                }
              ],
              "name": "castVoteWithReason",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "castVoteWithReasonAndParams",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "castVoteWithReasonAndParamsBySig",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "descriptionHash",
                  "type": "bytes32"
                }
              ],
              "name": "execute",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "getVotes",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "getVotesWithParams",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasVoted",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "descriptionHash",
                  "type": "bytes32"
                }
              ],
              "name": "hashProposal",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155BatchReceived",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "proposalDeadline",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "proposalSnapshot",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "proposalThreshold",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "proposalVotes",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "abstainVotes",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "propose",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "quorum",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "relay",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "state",
              "outputs": [
                {
                  "internalType": "enum IGovernor.ProposalState",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "votingDelay",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "votingPeriod",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ]
        }
      },
      "@openzeppelin/contracts/governance/extensions/GovernorSettings.sol": {
        "GovernorSettings": {
          "abi": [
            {
              "inputs": [],
              "name": "Empty",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "ProposalCanceled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "proposer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "string[]",
                  "name": "signatures",
                  "type": "string[]"
                },
                {
                  "indexed": false,
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "startBlock",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "endBlock",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "ProposalCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "ProposalExecuted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oldProposalThreshold",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newProposalThreshold",
                  "type": "uint256"
                }
              ],
              "name": "ProposalThresholdSet",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                }
              ],
              "name": "VoteCast",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "VoteCastWithParams",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oldVotingDelay",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newVotingDelay",
                  "type": "uint256"
                }
              ],
              "name": "VotingDelaySet",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oldVotingPeriod",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newVotingPeriod",
                  "type": "uint256"
                }
              ],
              "name": "VotingPeriodSet",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "BALLOT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "COUNTING_MODE",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "EXTENDED_BALLOT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                }
              ],
              "name": "castVote",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "castVoteBySig",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                }
              ],
              "name": "castVoteWithReason",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "castVoteWithReasonAndParams",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "castVoteWithReasonAndParamsBySig",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "descriptionHash",
                  "type": "bytes32"
                }
              ],
              "name": "execute",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "getVotes",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "getVotesWithParams",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasVoted",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "descriptionHash",
                  "type": "bytes32"
                }
              ],
              "name": "hashProposal",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155BatchReceived",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "proposalDeadline",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "proposalSnapshot",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "proposalThreshold",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "propose",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "quorum",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "relay",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newProposalThreshold",
                  "type": "uint256"
                }
              ],
              "name": "setProposalThreshold",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newVotingDelay",
                  "type": "uint256"
                }
              ],
              "name": "setVotingDelay",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newVotingPeriod",
                  "type": "uint256"
                }
              ],
              "name": "setVotingPeriod",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "state",
              "outputs": [
                {
                  "internalType": "enum IGovernor.ProposalState",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "votingDelay",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "votingPeriod",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ]
        }
      },
      "@openzeppelin/contracts/governance/extensions/GovernorTimelockControl.sol": {
        "GovernorTimelockControl": {
          "abi": [
            {
              "inputs": [],
              "name": "Empty",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "ProposalCanceled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "proposer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "string[]",
                  "name": "signatures",
                  "type": "string[]"
                },
                {
                  "indexed": false,
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "startBlock",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "endBlock",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "ProposalCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "ProposalExecuted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "eta",
                  "type": "uint256"
                }
              ],
              "name": "ProposalQueued",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "oldTimelock",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "newTimelock",
                  "type": "address"
                }
              ],
              "name": "TimelockChange",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                }
              ],
              "name": "VoteCast",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "VoteCastWithParams",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "BALLOT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "COUNTING_MODE",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "EXTENDED_BALLOT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                }
              ],
              "name": "castVote",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "castVoteBySig",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                }
              ],
              "name": "castVoteWithReason",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "castVoteWithReasonAndParams",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "castVoteWithReasonAndParamsBySig",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "descriptionHash",
                  "type": "bytes32"
                }
              ],
              "name": "execute",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "getVotes",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "getVotesWithParams",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasVoted",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "descriptionHash",
                  "type": "bytes32"
                }
              ],
              "name": "hashProposal",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155BatchReceived",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "proposalDeadline",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "proposalEta",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "proposalSnapshot",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "proposalThreshold",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "propose",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "descriptionHash",
                  "type": "bytes32"
                }
              ],
              "name": "queue",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "quorum",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "relay",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "state",
              "outputs": [
                {
                  "internalType": "enum IGovernor.ProposalState",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "timelock",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract TimelockController",
                  "name": "newTimelock",
                  "type": "address"
                }
              ],
              "name": "updateTimelock",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "votingDelay",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "votingPeriod",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ]
        }
      },
      "@openzeppelin/contracts/governance/extensions/GovernorVotes.sol": {
        "GovernorVotes": {
          "abi": [
            {
              "inputs": [],
              "name": "Empty",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "ProposalCanceled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "proposer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "string[]",
                  "name": "signatures",
                  "type": "string[]"
                },
                {
                  "indexed": false,
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "startBlock",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "endBlock",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "ProposalCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "ProposalExecuted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                }
              ],
              "name": "VoteCast",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "VoteCastWithParams",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "BALLOT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "COUNTING_MODE",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "EXTENDED_BALLOT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                }
              ],
              "name": "castVote",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "castVoteBySig",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                }
              ],
              "name": "castVoteWithReason",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "castVoteWithReasonAndParams",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "castVoteWithReasonAndParamsBySig",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "descriptionHash",
                  "type": "bytes32"
                }
              ],
              "name": "execute",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "getVotes",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "getVotesWithParams",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasVoted",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "descriptionHash",
                  "type": "bytes32"
                }
              ],
              "name": "hashProposal",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155BatchReceived",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "proposalDeadline",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "proposalSnapshot",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "proposalThreshold",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "propose",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "quorum",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "relay",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "state",
              "outputs": [
                {
                  "internalType": "enum IGovernor.ProposalState",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token",
              "outputs": [
                {
                  "internalType": "contract IVotes",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "votingDelay",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "votingPeriod",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ]
        }
      },
      "@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol": {
        "GovernorVotesQuorumFraction": {
          "abi": [
            {
              "inputs": [],
              "name": "Empty",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "ProposalCanceled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "proposer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "string[]",
                  "name": "signatures",
                  "type": "string[]"
                },
                {
                  "indexed": false,
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "startBlock",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "endBlock",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "ProposalCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "ProposalExecuted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oldQuorumNumerator",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newQuorumNumerator",
                  "type": "uint256"
                }
              ],
              "name": "QuorumNumeratorUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                }
              ],
              "name": "VoteCast",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "VoteCastWithParams",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "BALLOT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "COUNTING_MODE",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "EXTENDED_BALLOT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                }
              ],
              "name": "castVote",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "castVoteBySig",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                }
              ],
              "name": "castVoteWithReason",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "castVoteWithReasonAndParams",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "castVoteWithReasonAndParamsBySig",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "descriptionHash",
                  "type": "bytes32"
                }
              ],
              "name": "execute",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "getVotes",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "getVotesWithParams",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasVoted",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "descriptionHash",
                  "type": "bytes32"
                }
              ],
              "name": "hashProposal",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155BatchReceived",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "proposalDeadline",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "proposalSnapshot",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "proposalThreshold",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "propose",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "quorum",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "quorumDenominator",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "quorumNumerator",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "quorumNumerator",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "relay",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "state",
              "outputs": [
                {
                  "internalType": "enum IGovernor.ProposalState",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token",
              "outputs": [
                {
                  "internalType": "contract IVotes",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newQuorumNumerator",
                  "type": "uint256"
                }
              ],
              "name": "updateQuorumNumerator",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "votingDelay",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "votingPeriod",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ]
        }
      },
      "@openzeppelin/contracts/governance/extensions/IGovernorTimelock.sol": {
        "IGovernorTimelock": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "ProposalCanceled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "proposer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "string[]",
                  "name": "signatures",
                  "type": "string[]"
                },
                {
                  "indexed": false,
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "startBlock",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "endBlock",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "ProposalCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "ProposalExecuted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "eta",
                  "type": "uint256"
                }
              ],
              "name": "ProposalQueued",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                }
              ],
              "name": "VoteCast",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "VoteCastWithParams",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "COUNTING_MODE",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                }
              ],
              "name": "castVote",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "castVoteBySig",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                }
              ],
              "name": "castVoteWithReason",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "castVoteWithReasonAndParams",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "castVoteWithReasonAndParamsBySig",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "descriptionHash",
                  "type": "bytes32"
                }
              ],
              "name": "execute",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "getVotes",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "getVotesWithParams",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasVoted",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "descriptionHash",
                  "type": "bytes32"
                }
              ],
              "name": "hashProposal",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "proposalDeadline",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "proposalEta",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "proposalSnapshot",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "propose",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "descriptionHash",
                  "type": "bytes32"
                }
              ],
              "name": "queue",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "quorum",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "state",
              "outputs": [
                {
                  "internalType": "enum IGovernor.ProposalState",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "timelock",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "votingDelay",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "votingPeriod",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ]
        }
      },
      "@openzeppelin/contracts/governance/utils/IVotes.sol": {
        "IVotes": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "delegator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "fromDelegate",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "toDelegate",
                  "type": "address"
                }
              ],
              "name": "DelegateChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "delegate",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "previousBalance",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newBalance",
                  "type": "uint256"
                }
              ],
              "name": "DelegateVotesChanged",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "delegatee",
                  "type": "address"
                }
              ],
              "name": "delegate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "delegatee",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiry",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "delegateBySig",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "delegates",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "getPastTotalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "getPastVotes",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "getVotes",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ]
        }
      },
      "@openzeppelin/contracts/security/Pausable.sol": {
        "Pausable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ]
        }
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": []
        }
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "IERC1155Receiver": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155BatchReceived",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ]
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "name_",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol_",
                  "type": "string"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "subtractedValue",
                  "type": "uint256"
                }
              ],
              "name": "decreaseAllowance",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "addedValue",
                  "type": "uint256"
                }
              ],
              "name": "increaseAllowance",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "legacyAssembly": null,
            "bytecode": {
              "object": ""
            }
          },
          "factoryDependencies": {},
          "hash": "010002730a5e409221fcfc87f30341f74a83b825b5cddc045a53b69d9787902a"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ]
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "ERC20Burnable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "subtractedValue",
                  "type": "uint256"
                }
              ],
              "name": "decreaseAllowance",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "addedValue",
                  "type": "uint256"
                }
              ],
              "name": "increaseAllowance",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ]
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ]
        }
      },
      "@openzeppelin/contracts/token/ERC20/presets/ERC20PresetFixedSupply.sol": {
        "ERC20PresetFixedSupply": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "initialSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "subtractedValue",
                  "type": "uint256"
                }
              ],
              "name": "decreaseAllowance",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "addedValue",
                  "type": "uint256"
                }
              ],
              "name": "increaseAllowance",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "legacyAssembly": null,
            "bytecode": {
              "object": ""
            }
          },
          "factoryDependencies": {},
          "hash": "010002e33f93e27a7c7c95cb39bba11d13a9e2c7cf7c6690cd538d276bb33b30"
        }
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "IERC721Receiver": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ]
        }
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "Address": {
          "abi": [],
          "evm": {
            "legacyAssembly": null,
            "bytecode": {
              "object": "000000010120018f000000000110004c000000040000c13d004c00140000040f004c00050000040f0000008001000039000000400200003900000000001204350000000001000416000000000110004c000000120000c13d0000002001000039000001000200003900000000001204390000012001000039000000000001043900000014010000410000004d0001042e00000000010000190000004e0001043000020000000000020000000001000410000080020210008c0000002f0000613d0000000002000411000080010220008c0000002f0000613d0000001502000041000000000020043900000004020000390000000000120439000000160100004100008002020000390000000003000415000000020330008a00000020033000c9004c00330000040f000000ff01000039000000010110024f000000000110004c000000310000613d000000020100035f000000000101043b000000000110004c0000002f0000c13d00000000010000190000004d0001042e00000000010000190000004e0001043000000000010000190000004e000104300002000000000002000200000003001d0000002003300039000100000003001d00000042002104230000000203000029000000200230011a000000000201035500000018010000410000000102000029000000200220011a00000000021201bd00000000010300190000000200000005000000000001042d0000000203000029000000200230011a000000000201035500000017010000410000000102000029000000200220011a000000000212018d00000000010300190000000200000005000000000001042d0000004c000004320000004d0001042e0000004e00010430000000000000000100000002000000000000000000000000000000400000010000000000000000001806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b8302000200000000000000000000000000000000240000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000000000000000000000000000000000000000000000000000000000000000"
            }
          },
          "factoryDependencies": {},
          "hash": "01000019fbbd8491bfdb3d3e4964bdbf44a15474e2c4a8704c135a516a93c592"
        }
      },
      "@openzeppelin/contracts/utils/Checkpoints.sol": {
        "Checkpoints": {
          "abi": [],
          "evm": {
            "legacyAssembly": null,
            "bytecode": {
              "object": "000000010120018f000000000110004c000000040000c13d004c00140000040f004c00050000040f0000008001000039000000400200003900000000001204350000000001000416000000000110004c000000120000c13d0000002001000039000001000200003900000000001204390000012001000039000000000001043900000014010000410000004d0001042e00000000010000190000004e0001043000020000000000020000000001000410000080020210008c0000002f0000613d0000000002000411000080010220008c0000002f0000613d0000001502000041000000000020043900000004020000390000000000120439000000160100004100008002020000390000000003000415000000020330008a00000020033000c9004c00330000040f000000ff01000039000000010110024f000000000110004c000000310000613d000000020100035f000000000101043b000000000110004c0000002f0000c13d00000000010000190000004d0001042e00000000010000190000004e0001043000000000010000190000004e000104300002000000000002000200000003001d0000002003300039000100000003001d00000042002104230000000203000029000000200230011a000000000201035500000018010000410000000102000029000000200220011a00000000021201bd00000000010300190000000200000005000000000001042d0000000203000029000000200230011a000000000201035500000017010000410000000102000029000000200220011a000000000212018d00000000010300190000000200000005000000000001042d0000004c000004320000004d0001042e0000004e00010430000000000000000100000002000000000000000000000000000000400000010000000000000000001806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b8302000200000000000000000000000000000000240000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000000000000000000000000000000000000000000000000000000000000000"
            }
          },
          "factoryDependencies": {},
          "hash": "01000019fbbd8491bfdb3d3e4964bdbf44a15474e2c4a8704c135a516a93c592"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": []
        }
      },
      "@openzeppelin/contracts/utils/Strings.sol": {
        "Strings": {
          "abi": [],
          "evm": {
            "legacyAssembly": null,
            "bytecode": {
              "object": "000000010120018f000000000110004c000000040000c13d004c00140000040f004c00050000040f0000008001000039000000400200003900000000001204350000000001000416000000000110004c000000120000c13d0000002001000039000001000200003900000000001204390000012001000039000000000001043900000014010000410000004d0001042e00000000010000190000004e0001043000020000000000020000000001000410000080020210008c0000002f0000613d0000000002000411000080010220008c0000002f0000613d0000001502000041000000000020043900000004020000390000000000120439000000160100004100008002020000390000000003000415000000020330008a00000020033000c9004c00330000040f000000ff01000039000000010110024f000000000110004c000000310000613d000000020100035f000000000101043b000000000110004c0000002f0000c13d00000000010000190000004d0001042e00000000010000190000004e0001043000000000010000190000004e000104300002000000000002000200000003001d0000002003300039000100000003001d00000042002104230000000203000029000000200230011a000000000201035500000018010000410000000102000029000000200220011a00000000021201bd00000000010300190000000200000005000000000001042d0000000203000029000000200230011a000000000201035500000017010000410000000102000029000000200220011a000000000212018d00000000010300190000000200000005000000000001042d0000004c000004320000004d0001042e0000004e00010430000000000000000100000002000000000000000000000000000000400000010000000000000000001806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b8302000200000000000000000000000000000000240000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000000000000000000000000000000000000000000000000000000000000000"
            }
          },
          "factoryDependencies": {},
          "hash": "01000019fbbd8491bfdb3d3e4964bdbf44a15474e2c4a8704c135a516a93c592"
        }
      },
      "@openzeppelin/contracts/utils/Timers.sol": {
        "Timers": {
          "abi": [],
          "evm": {
            "legacyAssembly": null,
            "bytecode": {
              "object": "000000010120018f000000000110004c000000040000c13d004c00140000040f004c00050000040f0000008001000039000000400200003900000000001204350000000001000416000000000110004c000000120000c13d0000002001000039000001000200003900000000001204390000012001000039000000000001043900000014010000410000004d0001042e00000000010000190000004e0001043000020000000000020000000001000410000080020210008c0000002f0000613d0000000002000411000080010220008c0000002f0000613d0000001502000041000000000020043900000004020000390000000000120439000000160100004100008002020000390000000003000415000000020330008a00000020033000c9004c00330000040f000000ff01000039000000010110024f000000000110004c000000310000613d000000020100035f000000000101043b000000000110004c0000002f0000c13d00000000010000190000004d0001042e00000000010000190000004e0001043000000000010000190000004e000104300002000000000002000200000003001d0000002003300039000100000003001d00000042002104230000000203000029000000200230011a000000000201035500000018010000410000000102000029000000200220011a00000000021201bd00000000010300190000000200000005000000000001042d0000000203000029000000200230011a000000000201035500000017010000410000000102000029000000200220011a000000000212018d00000000010300190000000200000005000000000001042d0000004c000004320000004d0001042e0000004e00010430000000000000000100000002000000000000000000000000000000400000010000000000000000001806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b8302000200000000000000000000000000000000240000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000000000000000000000000000000000000000000000000000000000000000"
            }
          },
          "factoryDependencies": {},
          "hash": "01000019fbbd8491bfdb3d3e4964bdbf44a15474e2c4a8704c135a516a93c592"
        }
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "ECDSA": {
          "abi": [],
          "evm": {
            "legacyAssembly": null,
            "bytecode": {
              "object": "000000010120018f000000000110004c000000040000c13d004c00140000040f004c00050000040f0000008001000039000000400200003900000000001204350000000001000416000000000110004c000000120000c13d0000002001000039000001000200003900000000001204390000012001000039000000000001043900000014010000410000004d0001042e00000000010000190000004e0001043000020000000000020000000001000410000080020210008c0000002f0000613d0000000002000411000080010220008c0000002f0000613d0000001502000041000000000020043900000004020000390000000000120439000000160100004100008002020000390000000003000415000000020330008a00000020033000c9004c00330000040f000000ff01000039000000010110024f000000000110004c000000310000613d000000020100035f000000000101043b000000000110004c0000002f0000c13d00000000010000190000004d0001042e00000000010000190000004e0001043000000000010000190000004e000104300002000000000002000200000003001d0000002003300039000100000003001d00000042002104230000000203000029000000200230011a000000000201035500000018010000410000000102000029000000200220011a00000000021201bd00000000010300190000000200000005000000000001042d0000000203000029000000200230011a000000000201035500000017010000410000000102000029000000200220011a000000000212018d00000000010300190000000200000005000000000001042d0000004c000004320000004d0001042e0000004e00010430000000000000000100000002000000000000000000000000000000400000010000000000000000001806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b8302000200000000000000000000000000000000240000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000000000000000000000000000000000000000000000000000000000000000"
            }
          },
          "factoryDependencies": {},
          "hash": "01000019fbbd8491bfdb3d3e4964bdbf44a15474e2c4a8704c135a516a93c592"
        }
      },
      "@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol": {
        "EIP712": {
          "abi": []
        }
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "ERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ]
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ]
        }
      },
      "@openzeppelin/contracts/utils/math/Math.sol": {
        "Math": {
          "abi": [],
          "evm": {
            "legacyAssembly": null,
            "bytecode": {
              "object": "000000010120018f000000000110004c000000040000c13d004c00140000040f004c00050000040f0000008001000039000000400200003900000000001204350000000001000416000000000110004c000000120000c13d0000002001000039000001000200003900000000001204390000012001000039000000000001043900000014010000410000004d0001042e00000000010000190000004e0001043000020000000000020000000001000410000080020210008c0000002f0000613d0000000002000411000080010220008c0000002f0000613d0000001502000041000000000020043900000004020000390000000000120439000000160100004100008002020000390000000003000415000000020330008a00000020033000c9004c00330000040f000000ff01000039000000010110024f000000000110004c000000310000613d000000020100035f000000000101043b000000000110004c0000002f0000c13d00000000010000190000004d0001042e00000000010000190000004e0001043000000000010000190000004e000104300002000000000002000200000003001d0000002003300039000100000003001d00000042002104230000000203000029000000200230011a000000000201035500000018010000410000000102000029000000200220011a00000000021201bd00000000010300190000000200000005000000000001042d0000000203000029000000200230011a000000000201035500000017010000410000000102000029000000200220011a000000000212018d00000000010300190000000200000005000000000001042d0000004c000004320000004d0001042e0000004e00010430000000000000000100000002000000000000000000000000000000400000010000000000000000001806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b8302000200000000000000000000000000000000240000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000000000000000000000000000000000000000000000000000000000000000"
            }
          },
          "factoryDependencies": {},
          "hash": "01000019fbbd8491bfdb3d3e4964bdbf44a15474e2c4a8704c135a516a93c592"
        }
      },
      "@openzeppelin/contracts/utils/math/SafeCast.sol": {
        "SafeCast": {
          "abi": [],
          "evm": {
            "legacyAssembly": null,
            "bytecode": {
              "object": "000000010120018f000000000110004c000000040000c13d004c00140000040f004c00050000040f0000008001000039000000400200003900000000001204350000000001000416000000000110004c000000120000c13d0000002001000039000001000200003900000000001204390000012001000039000000000001043900000014010000410000004d0001042e00000000010000190000004e0001043000020000000000020000000001000410000080020210008c0000002f0000613d0000000002000411000080010220008c0000002f0000613d0000001502000041000000000020043900000004020000390000000000120439000000160100004100008002020000390000000003000415000000020330008a00000020033000c9004c00330000040f000000ff01000039000000010110024f000000000110004c000000310000613d000000020100035f000000000101043b000000000110004c0000002f0000c13d00000000010000190000004d0001042e00000000010000190000004e0001043000000000010000190000004e000104300002000000000002000200000003001d0000002003300039000100000003001d00000042002104230000000203000029000000200230011a000000000201035500000018010000410000000102000029000000200220011a00000000021201bd00000000010300190000000200000005000000000001042d0000000203000029000000200230011a000000000201035500000017010000410000000102000029000000200220011a000000000212018d00000000010300190000000200000005000000000001042d0000004c000004320000004d0001042e0000004e00010430000000000000000100000002000000000000000000000000000000400000010000000000000000001806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b8302000200000000000000000000000000000000240000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000000000000000000000000000000000000000000000000000000000000000"
            }
          },
          "factoryDependencies": {},
          "hash": "01000019fbbd8491bfdb3d3e4964bdbf44a15474e2c4a8704c135a516a93c592"
        }
      },
      "@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol": {
        "DoubleEndedQueue": {
          "abi": [
            {
              "inputs": [],
              "name": "Empty",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "OutOfBounds",
              "type": "error"
            }
          ],
          "evm": {
            "legacyAssembly": null,
            "bytecode": {
              "object": "000000010120018f000000000110004c000000040000c13d004c00140000040f004c00050000040f0000008001000039000000400200003900000000001204350000000001000416000000000110004c000000120000c13d0000002001000039000001000200003900000000001204390000012001000039000000000001043900000014010000410000004d0001042e00000000010000190000004e0001043000020000000000020000000001000410000080020210008c0000002f0000613d0000000002000411000080010220008c0000002f0000613d0000001502000041000000000020043900000004020000390000000000120439000000160100004100008002020000390000000003000415000000020330008a00000020033000c9004c00330000040f000000ff01000039000000010110024f000000000110004c000000310000613d000000020100035f000000000101043b000000000110004c0000002f0000c13d00000000010000190000004d0001042e00000000010000190000004e0001043000000000010000190000004e000104300002000000000002000200000003001d0000002003300039000100000003001d00000042002104230000000203000029000000200230011a000000000201035500000018010000410000000102000029000000200220011a00000000021201bd00000000010300190000000200000005000000000001042d0000000203000029000000200230011a000000000201035500000017010000410000000102000029000000200220011a000000000212018d00000000010300190000000200000005000000000001042d0000004c000004320000004d0001042e0000004e00010430000000000000000100000002000000000000000000000000000000400000010000000000000000001806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b8302000200000000000000000000000000000000240000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000000000000000000000000000000000000000000000000000000000000000"
            }
          },
          "factoryDependencies": {},
          "hash": "01000019fbbd8491bfdb3d3e4964bdbf44a15474e2c4a8704c135a516a93c592"
        }
      },
      "contracts/AccessRolesBox.sol": {
        "AccessRolesBox": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "initialValue",
                  "type": "string"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "newValue",
                  "type": "string"
                }
              ],
              "name": "ColorChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "VALUE_GETTER",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "VALUE_SETTER",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "newValue",
                  "type": "string"
                }
              ],
              "name": "changeValue",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getValue",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "value",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "legacyAssembly": null,
            "bytecode": {
              "object": ""
            }
          },
          "factoryDependencies": {},
          "hash": "010003c1ef4d4095758d8a712a2865ad19a77de3494d65590d22a541bed231a0"
        }
      },
      "contracts/DaoNat.sol": {
        "DaoNat": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_anyNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IVotes",
                  "name": "_testAddressToken",
                  "type": "address"
                },
                {
                  "internalType": "contract TimelockController",
                  "name": "_testAddressTimeLock",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "Empty",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "anyThing",
                  "type": "string"
                }
              ],
              "name": "Nothing",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "ProposalCanceled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "proposer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "string[]",
                  "name": "signatures",
                  "type": "string[]"
                },
                {
                  "indexed": false,
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "startBlock",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "endBlock",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "ProposalCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "ProposalExecuted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "eta",
                  "type": "uint256"
                }
              ],
              "name": "ProposalQueued",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oldProposalThreshold",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newProposalThreshold",
                  "type": "uint256"
                }
              ],
              "name": "ProposalThresholdSet",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oldQuorumNumerator",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newQuorumNumerator",
                  "type": "uint256"
                }
              ],
              "name": "QuorumNumeratorUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "oldTimelock",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "newTimelock",
                  "type": "address"
                }
              ],
              "name": "TimelockChange",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                }
              ],
              "name": "VoteCast",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "VoteCastWithParams",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oldVotingDelay",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newVotingDelay",
                  "type": "uint256"
                }
              ],
              "name": "VotingDelaySet",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oldVotingPeriod",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newVotingPeriod",
                  "type": "uint256"
                }
              ],
              "name": "VotingPeriodSet",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "BALLOT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "COUNTING_MODE",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "EXTENDED_BALLOT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "aPublicString",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                }
              ],
              "name": "castVote",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "castVoteBySig",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                }
              ],
              "name": "castVoteWithReason",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "castVoteWithReasonAndParams",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "castVoteWithReasonAndParamsBySig",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "descriptionHash",
                  "type": "bytes32"
                }
              ],
              "name": "execute",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAllProposalsId",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "getProposal",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "targets",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "values",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "bytes[]",
                      "name": "calldatas",
                      "type": "bytes[]"
                    },
                    {
                      "internalType": "string",
                      "name": "description",
                      "type": "string"
                    }
                  ],
                  "internalType": "struct DaoNat.ClearProposal",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "getVotes",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "getVotesWithParams",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasVoted",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "descriptionHash",
                  "type": "bytes32"
                }
              ],
              "name": "hashProposal",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155BatchReceived",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "proposalDeadline",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "proposalEta",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "proposalSnapshot",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "proposalThreshold",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "proposalVotes",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "abstainVotes",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "proposalsId",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "propose",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "descriptionHash",
                  "type": "bytes32"
                }
              ],
              "name": "queue",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "quorum",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "quorumDenominator",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "quorumNumerator",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "quorumNumerator",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "relay",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newProposalThreshold",
                  "type": "uint256"
                }
              ],
              "name": "setProposalThreshold",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newVotingDelay",
                  "type": "uint256"
                }
              ],
              "name": "setVotingDelay",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newVotingPeriod",
                  "type": "uint256"
                }
              ],
              "name": "setVotingPeriod",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "state",
              "outputs": [
                {
                  "internalType": "enum IGovernor.ProposalState",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "timelock",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token",
              "outputs": [
                {
                  "internalType": "contract IVotes",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newQuorumNumerator",
                  "type": "uint256"
                }
              ],
              "name": "updateQuorumNumerator",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract TimelockController",
                  "name": "newTimelock",
                  "type": "address"
                }
              ],
              "name": "updateTimelock",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "votingDelay",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "votingPeriod",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "legacyAssembly": null,
            "bytecode": {
              "object": ""
            }
          },
          "factoryDependencies": {},
          "hash": "01000d4da6995a4f13e57683eaa961822aa5fd7329de450c38e6f5f97ba228ed"
        }
      },
      "contracts/DummyGovernor.sol": {
        "DummyGovernor": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "Empty",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "ProposalCanceled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "proposer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "string[]",
                  "name": "signatures",
                  "type": "string[]"
                },
                {
                  "indexed": false,
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "startBlock",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "endBlock",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "ProposalCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "ProposalExecuted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oldProposalThreshold",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newProposalThreshold",
                  "type": "uint256"
                }
              ],
              "name": "ProposalThresholdSet",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                }
              ],
              "name": "VoteCast",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "VoteCastWithParams",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oldVotingDelay",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newVotingDelay",
                  "type": "uint256"
                }
              ],
              "name": "VotingDelaySet",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oldVotingPeriod",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newVotingPeriod",
                  "type": "uint256"
                }
              ],
              "name": "VotingPeriodSet",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "BALLOT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "COUNTING_MODE",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "EXTENDED_BALLOT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                }
              ],
              "name": "castVote",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "castVoteBySig",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                }
              ],
              "name": "castVoteWithReason",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "castVoteWithReasonAndParams",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "support",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "castVoteWithReasonAndParamsBySig",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "descriptionHash",
                  "type": "bytes32"
                }
              ],
              "name": "execute",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAllProposalsId",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "getProposal",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "targets",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "values",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "bytes[]",
                      "name": "calldatas",
                      "type": "bytes[]"
                    },
                    {
                      "internalType": "string",
                      "name": "description",
                      "type": "string"
                    }
                  ],
                  "internalType": "struct DummyGovernor.ProposalInfo",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "getVotes",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                }
              ],
              "name": "getVotesWithParams",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasVoted",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "bytes32",
                  "name": "descriptionHash",
                  "type": "bytes32"
                }
              ],
              "name": "hashProposal",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155BatchReceived",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC1155Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "proposalDeadline",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "proposalSnapshot",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "proposalThreshold",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "proposalVotes",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "abstainVotes",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "proposalsId",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "targets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes[]",
                  "name": "calldatas",
                  "type": "bytes[]"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "propose",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                }
              ],
              "name": "quorum",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "relay",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newProposalThreshold",
                  "type": "uint256"
                }
              ],
              "name": "setProposalThreshold",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newVotingDelay",
                  "type": "uint256"
                }
              ],
              "name": "setVotingDelay",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newVotingPeriod",
                  "type": "uint256"
                }
              ],
              "name": "setVotingPeriod",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                }
              ],
              "name": "state",
              "outputs": [
                {
                  "internalType": "enum IGovernor.ProposalState",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "votingDelay",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "votingPeriod",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "legacyAssembly": null,
            "bytecode": {
              "object": ""
            }
          },
          "factoryDependencies": {},
          "hash": "010007f76c0819fdaa7167d4dbde3282c527beba61705dcee37c48be3636b340"
        }
      },
      "contracts/FactoredBox.sol": {
        "BoxFactory": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "boxes",
              "outputs": [
                {
                  "internalType": "contract FactoredBox",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_value",
                  "type": "string"
                }
              ],
              "name": "createNewBox",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAllBoxes",
              "outputs": [
                {
                  "internalType": "contract FactoredBox[]",
                  "name": "",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "legacyAssembly": null,
            "bytecode": {
              "object": ""
            }
          },
          "factoryDependencies": {
            "01000233b943677f389a3203e9ab4347c199e9437bbcca1f2026e260d1b92cf4": "contracts/FactoredBox.sol:FactoredBox"
          },
          "hash": "010000bbbe479aa288f0f2a61a51f1561e1cae9f204975e19b00793ebc37af7c"
        },
        "FactoredBox": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "initialValue",
                  "type": "string"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "newValue",
                  "type": "bool"
                }
              ],
              "name": "ShouldRevertChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "newValue",
                  "type": "string"
                }
              ],
              "name": "ValueChanged",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "newValue",
                  "type": "string"
                }
              ],
              "name": "changeValueCouldRevert",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "newValue",
                  "type": "string"
                }
              ],
              "name": "changeValueDryRun",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "newValue",
                  "type": "string"
                }
              ],
              "name": "changeValueOwner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_testKey",
                  "type": "string"
                }
              ],
              "name": "getMapping",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getValue",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getVersion",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "shouldRevert",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "switchShouldRevert",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "name": "testMapping",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "testRevert",
              "outputs": [],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_testKey",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "_testVal",
                  "type": "uint256"
                }
              ],
              "name": "updateMapping",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "legacyAssembly": null,
            "bytecode": {
              "object": ""
            }
          },
          "factoryDependencies": {},
          "hash": "01000233b943677f389a3203e9ab4347c199e9437bbcca1f2026e260d1b92cf4"
        }
      },
      "contracts/PausableBox.sol": {
        "PausableBox": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "initialValue",
                  "type": "string"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "newValue",
                  "type": "string"
                }
              ],
              "name": "ColorChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "newValue",
                  "type": "string"
                }
              ],
              "name": "changeValue",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getValue",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "value",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "legacyAssembly": null,
            "bytecode": {
              "object": ""
            }
          },
          "factoryDependencies": {},
          "hash": "0100018d20e143d0ff854a06c69dd17459d55c91fe839972159f7cae16e476a8"
        }
      },
      "contracts/RevertibleBox.sol": {
        "RevertibleBox": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "initialValue",
                  "type": "string"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "newValue",
                  "type": "bool"
                }
              ],
              "name": "ShouldRevertChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "newValue",
                  "type": "string"
                }
              ],
              "name": "ValueChanged",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "newValue",
                  "type": "string"
                }
              ],
              "name": "changeValueCouldRevert",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "newValue",
                  "type": "string"
                }
              ],
              "name": "changeValueDryRun",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "newValue",
                  "type": "string"
                }
              ],
              "name": "changeValueNoRevert",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "newValue",
                  "type": "string"
                }
              ],
              "name": "changeValueOwner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_testKey",
                  "type": "string"
                }
              ],
              "name": "getMapping",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getValue",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getVersion",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "shouldRevert",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "switchShouldRevert",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "name": "testMapping",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_testKey",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "_testVal",
                  "type": "uint256"
                }
              ],
              "name": "updateMapping",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "legacyAssembly": null,
            "bytecode": {
              "object": ""
            }
          },
          "factoryDependencies": {},
          "hash": "0100022d6c8d381d189e5146224229fba0c9a684abfb816cf145d621fea54085"
        }
      },
      "contracts/VerifyableBox.sol": {
        "VerifiableBox": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "initialValue",
                  "type": "string"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "newValue",
                  "type": "bool"
                }
              ],
              "name": "ShouldRevertChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "newValue",
                  "type": "string"
                }
              ],
              "name": "ValueChanged",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "newValue",
                  "type": "string"
                }
              ],
              "name": "changeValueCouldRevert",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "newValue",
                  "type": "string"
                }
              ],
              "name": "changeValueDryRun",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "newValue",
                  "type": "string"
                }
              ],
              "name": "changeValueOwner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_testKey",
                  "type": "string"
                }
              ],
              "name": "getMapping",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getValue",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getVersion",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "shouldRevert",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "switchShouldRevert",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "name": "testMapping",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "testRevert",
              "outputs": [],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_testKey",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "_testVal",
                  "type": "uint256"
                }
              ],
              "name": "updateMapping",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "legacyAssembly": null,
            "bytecode": {
              "object": ""
            }
          },
          "factoryDependencies": {},
          "hash": "01000233b943677f389a3203e9ab4347c199e9437bbcca1f2026e260d1b92cf4"
        }
      },
      "contracts/test/MockERC20Token.sol": {
        "MockERC20Token": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "_symbol",
                  "type": "string"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "subtractedValue",
                  "type": "uint256"
                }
              ],
              "name": "decreaseAllowance",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "addedValue",
                  "type": "uint256"
                }
              ],
              "name": "increaseAllowance",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "legacyAssembly": null,
            "bytecode": {
              "object": "0002000000000002000100000001035500000060011002700000029d0010019d000000010120018f000000000110004c000000080000c13d0a7002960000040f0a7000090000040f00130000000000020000008001000039000000400800003900000000001804350000000001000416000000000110004c000002870000c13d00000000010000310000001f02100039000000200300008a000300000003001d000000000332016f00000000090804330000000002930019000000000332004b000000000300001900000001030040390000029e0420009c000002890000213d000000010330018f000000000330004c000002890000c13d00000000002804350000001f0210018f00000001030003670000000504100270000000000540004c0000002e0000613d000000000500001900000005065002100000000007690019000000000663034f000000000606043b00000000006704350000000105500039000000000645004b000000260000413d000000000520004c0000003d0000613d0000000504400210000000000343034f00000000044900190000000302200210000000000504043300000000052501cf000000000525022f000000000303043b0000010002200089000000000323022f00000000022301cf000000000252019f00000000002404350000029f020000410000003f0310008c000000000300001900000000030220190000029f04100197000000000540004c00000000020080190000029f0440009c000000000203c019000000000220004c000002900000613d000200000008001d0000000004090433000002a00340009c000002920000813d00000000021900190000000001940019000800000002001d000900000009001d0a7006f90000040f0000000903000029000600000001001d00000020013000390000000001010433000002a00210009c000002940000813d000000000131001900000008020000290a7006f90000040f00000006040000290000000003040433000002a00230009c000000650000413d000002aa010000410000000000100435000000410100003900000004020000390000000000120435000002ab0100004100000a7200010430000100000003001d000400000001001d0000000301000039000700000001001d0a700a6e0000040f000000010210018f00000001011002700000007f0310018f000000000420004c000000000301c0190000001f0130008c00000000010000190000000101002039000000010110018f000000000220004c0000000002000019000000010200c039000000010220018f000000000112004b000000800000613d000002aa010000410000000000100435000000220100003900000004020000390000000000120435000002ab0100004100000a7200010430000000200130008c000000a70000413d000900000003001d00000007010000290000000000100435000002a10100004100008010020000390000000003000415000000130330008a00000020033000c90a700a530000040f000000130100035f000000ff02000039000000120220024f000000000220004c000001170000613d00000001030000290000001f023000390000000502200270000000200330008c0000000002004019000000000101043b00000009030000290000001f03300039000000050330027000000000033100190000000002210019000000000132004b000000a70000813d000800000003001d000900000002001d000000000100001900000009020000290a700a6c0000040f000000090200002900000008030000290000000102200039000000000132004b0000009e0000413d00000001040000290000001f0140008c000000e30000a13d00000007010000290000000000100435000002a10100004100008010020000390000000003000415000000110330008a00000020033000c90a700a530000040f000000110100035f000000ff02000039000000100220024f000000010220008c000001350000c13d00000003020000290000000103000029000000000323016f0000002005000039000000000201043b000000000130004c0000000606000029000000d20000613d00000020050000390000000004000019000500000003001d000700000004001d000800000005001d000900000002001d000000000165001900000000010104330a700a6c0000040f00000007040000290000000606000029000000050300002900000008050000290000000902000029000000200550003900000001022000390000002004400039000000000134004b000000c20000413d0000000104000029000000000143004b0000000003060019000000e00000813d0000000301400210000000f80110018f000000010400008a000000000114022f000000000141013f00000000033500190000000003030433000000000113016f0a700a6c0000040f000000010400002900000001010000390000000102400210000000ef0000013d000000000140004c0000000001000019000000e90000613d0000000601000029000000200110003900000000010104330000000302400210000000010300008a000000000223022f000000000232013f000000000221016f0000000101400210000000000112019f00000003020000390a700a6c0000040f000000040100002900000000020104330000029e0120009c000000fd0000a13d000002aa010000410000000000100435000000410100003900000004020000390000000000120435000002ab0100004100000a7200010430000500000002001d0000000401000039000700000001001d0a700a6e0000040f000000010210018f00000001011002700000007f0310018f000000000420004c000000000301c0190000001f0130008c00000000010000190000000101002039000000010110018f000000000220004c0000000002000019000000010200c039000000010220018f000000000112004b000001530000613d000002aa010000410000000000100435000000220100003900000007020000290000000000120435000002ab0100004100000a720001043000000060021002700000001f0220018f0000006503100270000002a203300197000000000430004c000001250000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b0000011e0000413d000000000420004c000001330000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000002a30110019700000a720001043000000060021002700000001f0220018f0000006503100270000002a203300197000000000430004c000001430000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b0000013c0000413d000000000420004c000001510000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000002a30110019700000a72000104300000000701000029000000200130008c0000017b0000413d000900000003001d00000007010000290000000000100435000002a101000041000080100200003900000000030004150000000f0330008a00000020033000c90a700a530000040f0000000f0100035f000000ff020000390000000e0220024f000000000220004c000001ea0000613d00000005030000290000001f023000390000000502200270000000200330008c0000000002004019000000000101043b00000009030000290000001f03300039000000050330027000000000033100190000000002210019000000000132004b0000017b0000813d000800000003001d000900000002001d000000000100001900000009020000290a700a6c0000040f000000090200002900000008030000290000000102200039000000000132004b000001720000413d00000005040000290000001f0140008c000001ba0000a13d00000007010000290000000000100435000002a101000041000080100200003900000000030004150000000d0330008a00000020033000c90a700a530000040f0000000d0100035f000000ff020000390000000c0220024f000000010220008c000002080000c13d00000003020000290000000503000029000000000523016f0000002004000039000000000301043b000000000150004c0000000401000029000001a80000613d00000020040000390000000002000019000600000005001d000700000002001d000800000004001d000900000003001d00000004010000290000000001140019000000000101043300000000020300190a700a6c0000040f0000000702000029000000060500002900000008040000290000000903000029000000200440003900000001033000390000002002200039000000000152004b0000000401000029000001960000413d0000000502000029000000000125004b000001b70000813d0000000301200210000000f80110018f000000010200008a000000000112022f000000000121013f000000040200002900000000022400190000000002020433000000000112016f00000000020300190a700a6c0000040f000000050200002900000001010000390000000102200210000001c60000013d000000000140004c0000000001000019000001c00000613d0000000401000029000000200110003900000000010104330000000302400210000000010300008a000000000223022f000000000232013f000000000221016f0000000101400210000000000112019f0000000402000039000900000002001d0a700a6c0000040f0000000002000411000000000120004c000001de0000c13d000000020100002900000000010104330000004402100039000002ac03000041000000000032043500000024021000390000001f030000390000000000320435000002ad0200004100000000002104350000000402100039000000200300003900000000003204350000004001100210000002ae01100197000002af011001c700000a7200010430000800000002001d00000002010000390a700a6e0000040f000002a40210009c000002260000413d000002aa010000410000000000100435000000110100003900000009020000290000000000120435000002ab0100004100000a720001043000000060021002700000001f0220018f0000006503100270000002a203300197000000000430004c000001f80000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000001f10000413d000000000420004c000002060000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000002a30110019700000a720001043000000060021002700000001f0220018f0000006503100270000002a203300197000000000430004c000002160000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b0000020f0000413d000000000420004c000002240000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000002a30110019700000a7200010430000002a50110004100000002020000390a700a6c0000040f000000080100002900000000001004350000002001000039000700000001001d0000000000010435000002a601000041000080100200003900000000030004150000000b0330008a00000020033000c90a700a530000040f0000000b0100035f000000ff020000390000000a0220024f000000010220008c000002450000c13d000000000101043b000600000001001d0a700a6e0000040f000002a40210009c000002630000413d000002aa010000410000000000100435000000110100003900000009020000290000000000120435000002ab0100004100000a720001043000000060021002700000001f0220018f0000006503100270000002a203300197000000000430004c000002530000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b0000024c0000413d000000000420004c000002610000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000002a30110019700000a7200010430000002a50110004100000006020000290a700a6c0000040f00000002010000290000000001010433000002a5020000410000000000210435000002a702000041000002a803000041000000000023041f0000000802000029000000000020041e000000210200008a000000000221004b000002800000213d0000002002100039000002780000013d000000000003041e0000004001100039000000000312004b000002800000a13d000000000412004900000000030104330000003f0440008c000002740000a13d00000020041000390000000004040433000000000043041e000002750000013d00000100010000390000000702000029000000000021043900000120010000390000000000010439000002a90100004100000a710001042e000000000100001900000a7200010430000002aa010000410000000000100435000000410100003900000004020000390000000000120435000002ab0100004100000a7200010430000000000100001900000a7200010430000000000100001900000a7200010430000000000100001900000a7200010430001800000000000200000000070004110000000001000410000080020210008c000002b30000613d000080010270008c000002b30000613d000600000007001d000002b002000041000000000020043900000004020000390000000000120439000002b10100004100008002020000390000000003000415000000180330008a00000020033000c90a700a530000040f000000ff01000039000000170110024f000000000110004c000002da0000613d000000180100035f000000000101043b000000000110004c0000000607000029000002b30000c13d000000000100001900000a710001042e001600400000003d0000008005000039000000400600003900000000005604350000000002000031000000030120008c0000033e0000a13d001500000000001d0000000108000367000000000308043b000000e003300270000002b20430009c000002dc0000a13d000002b30430009c000002f80000a13d000002b40430009c000003280000213d000002b70430009c000003400000613d000002b80330009c0000033e0000c13d0000000003000416000000000330004c000003dc0000c13d000000040220008a0000029f030000410000003f0420008c000000000400001900000000040320190000029f02200197000000000520004c00000000030080190000029f0220009c00000000020400190000000002036019000000000220004c0000041c0000c13d000000000100001900000a7200010430000000000100001900000a7200010430000002bc0430009c000003100000213d000002c00430009c000003780000613d000002c10430009c0000038c0000613d000002c20130009c0000033e0000c13d0000000001000416000000000110004c000003de0000c13d000000040120008a000000010200008a0000029f03000041000000000221004b000000000200001900000000020320190000029f011001970000029f0410009c00000000030080190000029f011001670000029f0110009c00000000010200190000000001036019000000000110004c000004220000c13d000000000100001900000a7200010430000002b90430009c000003540000613d000002ba0430009c0000039e0000613d000002bb0330009c0000033e0000c13d0000000003000416000000000330004c000003e00000c13d000000040220008a0000029f030000410000003f0420008c000000000400001900000000040320190000029f02200197000000000520004c00000000030080190000029f0220009c00000000020400190000000002036019000000000220004c0000042c0000c13d000000000100001900000a7200010430000002bd0430009c000003b00000613d000002be0430009c000003c20000613d000002bf0330009c0000033e0000c13d0000000003000416000000000330004c000003e20000c13d000000040220008a0000029f030000410000003f0420008c000000000400001900000000040320190000029f02200197000000000520004c00000000030080190000029f0220009c00000000020400190000000002036019000000000220004c000004320000c13d000000000100001900000a7200010430000002b50430009c000003660000613d000002b60330009c0000033e0000c13d0000000003000416000000000330004c000003e40000c13d000000040220008a0000029f030000410000003f0420008c000000000400001900000000040320190000029f02200197000000000520004c00000000030080190000029f0220009c00000000020400190000000002036019000000000220004c000004380000c13d000000000100001900000a7200010430000000000100001900000a72000104300000000001000416000000000110004c000003d60000c13d000000040120008a000000010200008a0000029f03000041000000000221004b000000000200001900000000020320190000029f011001970000029f0410009c00000000030080190000029f011001670000029f0110009c00000000010200190000000001036019000000000110004c000003f00000c13d000000000100001900000a72000104300000000003000416000000000330004c000003d80000c13d000000040220008a0000029f030000410000001f0420008c000000000400001900000000040320190000029f02200197000000000520004c00000000030080190000029f0220009c00000000020400190000000002036019000000000220004c0000040c0000c13d000000000100001900000a72000104300000000003000416000000000330004c000003da0000c13d000000040220008a0000029f030000410000003f0420008c000000000400001900000000040320190000029f02200197000000000520004c00000000030080190000029f0220009c00000000020400190000000002036019000000000220004c000004160000c13d000000000100001900000a72000104300000000001000416000000000110004c000003e60000c13d000000040120008a000000010200008a0000029f03000041000000000221004b000000000200001900000000020320190000029f011001970000029f0410009c00000000030080190000029f011001670000029f0110009c00000000010200190000000001036019000000000110004c0000043e0000c13d000000000100001900000a72000104300000000003000416000000000330004c000003e80000c13d000000040220008a0000029f030000410000003f0420008c000000000400001900000000040320190000029f02200197000000000520004c00000000030080190000029f0220009c00000000020400190000000002036019000000000220004c0000045a0000c13d000000000100001900000a72000104300000000003000416000000000330004c000003ea0000c13d000000040220008a0000029f030000410000001f0420008c000000000400001900000000040320190000029f02200197000000000520004c00000000030080190000029f0220009c00000000020400190000000002036019000000000220004c000004600000c13d000000000100001900000a72000104300000000003000416000000000330004c000003ec0000c13d000000040220008a0000029f030000410000005f0420008c000000000400001900000000040320190000029f02200197000000000520004c00000000030080190000029f0220009c00000000020400190000000002036019000000000220004c000004660000c13d000000000100001900000a72000104300000000001000416000000000110004c000003ee0000c13d000000040120008a000000010200008a0000029f03000041000000000221004b000000000200001900000000020320190000029f011001970000029f0410009c00000000030080190000029f011001670000029f0110009c00000000010200190000000001036019000000000110004c0000046c0000c13d000000000100001900000a7200010430000000000100001900000a7200010430000000000100001900000a7200010430000000000100001900000a7200010430000000000100001900000a7200010430000000000100001900000a7200010430000000000100001900000a7200010430000000000100001900000a7200010430000000000100001900000a7200010430000000000100001900000a7200010430000000000100001900000a7200010430000000000100001900000a7200010430000000000100001900000a7200010430000000000100001900000a72000104300000000001060433000100000001001d0000000401000039000200000001001d0a700a6e0000040f000000010210018f00000001031002700000007f0430018f000000000520004c000000000503001900000000050460190000001f0350008c00000000030000190000000103002039000000010330018f000000000420004c0000000004000019000000010400c039000000010440018f000000000334004b000004730000613d000002aa010000410000000000100435000000220100003900000002020000290000000000120435000002ab0100004100000a72000104300000000401800370000000000201043b0000000001070019000300000006001d0a7009930000040f000000030100002900000000010104330000004001100210000002ae0110019700000a710001042e0000000402800370000000000202043b000002c30320009c000004800000413d000000000100001900000a72000104300000000402800370000000000302043b000002c30230009c0000048d0000413d000000000100001900000a72000104300000000201000039000300000006001d0a700a6e0000040f0000000302000029000000000202043300000000001204350000004001200210000002ae01100197000002c5011001c700000a710001042e0000000402800370000000000102043b000002c30210009c000004d40000413d000000000100001900000a72000104300000000401800370000000000201043b000002c30120009c000004e30000413d000000000100001900000a72000104300000000402800370000000000202043b000002c30320009c0000051e0000413d000000000100001900000a7200010430000600000005001d000300000006001d0000000301000039000500000001001d0a700a6e0000040f000000010210018f00000001031002700000007f0430018f000000000520004c000000000503001900000000050460190000001f0350008c00000000030000190000000103002039000000010330018f000000000420004c0000000004000019000000010400c039000000010440018f000000000334004b000005240000613d000002aa010000410000000000100435000000220100003900000004020000390000000000120435000002ab0100004100000a72000104300000000402800370000000000202043b000002c30320009c000005310000413d000000000100001900000a72000104300000000401800370000000000101043b000002c30210009c0000053e0000413d000000000100001900000a72000104300000000402800370000000000102043b000002c30210009c000005560000413d000000000100001900000a72000104300000000001060433000000120200003900000000002104350000004001100210000002ae01100197000002c5011001c700000a710001042e000000020300002900000001030000290000000000530435000000000220004c0000055c0000c13d000001000200008a000000000121016f00000020023000390000000000120435000000000150004c00000020030000390000000003006019000005730000013d0000002401800370000000000301043b0000000001070019000300000006001d0a7007570000040f00000003010000290000000001010433000000010200003900000000002104350000004001100210000002ae01100197000002c5011001c700000a710001042e000400000003001d0000002401800370000000000101043b000300000001001d000600000007001d000000000070043500000001010000390000002002000039000200000001001d000500000002001d0000000000120435000002a601000041000080100200003900000000030004150000000e0330008a00000020033000c90a700a530000040f0000000e0100035f000000ff030000390000000d0230024f000000010220008c000005960000c13d000000000101043b0000001502000029000100000003001d00000004030000290000000000320435000000050300002900000000001304350000004001200210000002ae01100197000000600200003900000016022001ef000002a302200197000000000121019f000002c4011001c7000080100200003900000000030004150000000c0330008a00000020033000c90a700a530000040f0000000c0100035f00000001020000290000000b0220024f000000000220004c0000066a0000613d000000000101043b0a700a6e0000040f0000000303000029000000000231004b000006c40000813d000000160100002900000000010104330000006402100039000002c60300004100000000003204350000004402100039000002c7030000410000000000320435000000240210003900000025030000390000000000320435000002ad0200004100000000002104350000000402100039000000050300002900000000003204350000004001100210000002ae01100197000002c8011001c700000a72000104300000002402800370000000000302043b000600000003001d0000000002070019000500000001001d000300000006001d0a7009100000040f000000050100002900000006020000290a7009930000040f000000030100002900000000010104330000004001100210000002ae0110019700000a710001042e000500000002001d000300000006001d000600000007001d000000000070043500000001010000390000002002000039000200000001001d000400000002001d0000000000120435000002a60100004100008010020000390000000003000415000000140330008a00000020033000c90a700a530000040f000000140100035f000000ff03000039000000130230024f000000010220008c000005b40000c13d000000000101043b0000001502000029000100000003001d00000005030000290000000000320435000000040300002900000000001304350000004001200210000002ae01100197000002a6011001c700008010020000390000000003000415000000120330008a00000020033000c90a700a530000040f000000120100035f0000000102000029000000110220024f000000000220004c000006880000613d000000000101043b0a700a6e0000040f00000001020003670000002402200370000000000202043b0000000003120019000000000123004b00000000010000190000000101004039000000010110018f000000000110004c000006d00000613d000002aa010000410000000000100435000000110100003900000004020000390000000000120435000002ab0100004100000a72000104300000002401800370000000000301043b000002c30130009c000005d20000413d000000000100001900000a720001043000000006030000290000000000530435000000000220004c000006040000c13d000001000200008a000000000121016f000000a0020000390000000000120435000000000150004c000000c001000039000000a00100603900000003020000290000061d0000013d0000002401800370000000000301043b0000000001070019000300000006001d0a7008610000040f00000003010000290000000001010433000000010200003900000000002104350000004001100210000002ae01100197000002c5011001c700000a710001042e000300000006001d000000000010043500000020010000390000000000010435000002a60100004100008010020000390000000003000415000000100330008a00000020033000c90a700a530000040f000000100100035f000000ff020000390000000f0220024f000000010220008c000006380000c13d000000000101043b0a700a6e0000040f0000000302000029000000000202043300000000001204350000004001200210000002ae01100197000002c5011001c700000a710001042e0000002402800370000000000402043b000002c30240009c000006560000413d000000000100001900000a7200010430000000150300002900000002010000290000000000130435000000000153004b000005730000813d00000001010000290000002001100039000300000001001d000002c901000041000400000005001d000500000001001d000600000003001d0a700a6e0000040f00000006030000290000000405000029000000030200002900000000023200190000000000120435000000050100002900000001011000390000002003300039000000000253004b000005660000413d0000003f01300039000000200200008a000000000321016f00000001020000290000000001230019000000000331004b000000000400001900000001040040390000029e0310009c0000058c0000213d000000010340018f000000000330004c0000058c0000c13d00000016030000290000000000130435000600000001001d0a7007400000040f000000060200002900000000012100490000006001100210000002a3011001970000004002200210000002ae02200197000000000121019f00000a710001042e0000001501000029000002aa0200004100000000002104350000004102000039000000020300002900000000002304350000004001100210000002ae01100197000002ab011001c700000a720001043000000060021002700000001f0220018f0000006503100270000002a203300197000000000430004c000005a40000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b0000059d0000413d000000000420004c000005b20000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000002a30110019700000a720001043000000060021002700000001f0220018f0000006503100270000002a203300197000000000430004c000005c20000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000005bb0000413d000000000420004c000005d00000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000002a30110019700000a7200010430000600000003001d000000000020043500000001010000390000002002000039000500000002001d0000000000120435000002a601000041000080100200003900000000030004150000000a0330008a00000020033000c90a700a530000040f0000000a0100035f000000ff03000039000000090230024f000000010220008c000006a60000c13d000000000101043b0000001502000029000400000003001d00000006030000290000000000320435000000050300002900000000001304350000004001200210000002ae01100197000000600200003900000016022001ef000002a302200197000000000121019f000002c4011001c700008010020000390000000003000415000000080330008a00000020033000c90a700a530000040f000000080100035f0000000402000029000000070220024f000000000220004c000006db0000613d000000000101043b0a700a6e0000040f0000001602000029000000000202043300000000001204350000004001200210000002ae01100197000002c5011001c700000a710001042e00000005010000290000000000100435000000bf03000039000000a001000039000000000250004c00000003020000290000062a0000613d000002ca030000410000000001000019000400000005001d000600000003001d000500000001001d00000000010300190a700a6e0000040f000000050400002900000006030000290000000405000029000000a002400039000000000012043500000001033000390000002001400039000000000251004b0000060e0000413d000000c00140003900000003020000290000001f03100039000000200100008a000000000113016f000000800410008a000002cb0440009c0000062a0000a13d000002aa010000410000000000100435000000410100003900000004020000390000000000120435000002ab0100004100000a7200010430000500000001001d000600000003001d000000000012043500000080020000390a7007400000040f000000050200002900000000012100490000006001100210000002a30110019700000006020000290000004002200210000002cc02200197000000000121019f00000a710001042e00000060021002700000001f0220018f0000006503100270000002a203300197000000000430004c000006460000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b0000063f0000413d000000000420004c000006540000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000002a30110019700000a72000104300000004402800370000000000302043b000600000003001d0000000002070019000400000001001d000500000004001d000300000006001d0a7009100000040f0000000401000029000000050200002900000006030000290a7007570000040f00000003010000290000000001010433000000010200003900000000002104350000004001100210000002ae01100197000002c5011001c700000a710001042e00000060021002700000001f0220018f0000006503100270000002a203300197000000000430004c000006780000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000006710000413d000000000420004c000006860000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000002a30110019700000a720001043000000060021002700000001f0220018f0000006503100270000002a203300197000000000430004c000006960000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b0000068f0000413d000000000420004c000006a40000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000002a30110019700000a720001043000000060021002700000001f0220018f0000006503100270000002a203300197000000000430004c000006b40000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000006ad0000413d000000000420004c000006c20000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000002a30110019700000a72000104300000000003310049000000060100002900000004020000290a7008610000040f00000016010000290000000001010433000000020200002900000000002104350000004001100210000002ae01100197000002c5011001c700000a710001042e000000060100002900000005020000290a7008610000040f00000003010000290000000001010433000000020200002900000000002104350000004001100210000002ae01100197000002c5011001c700000a710001042e00000060021002700000001f0220018f0000006503100270000002a203300197000000000430004c000006e90000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000006e20000413d000000000420004c000006f70000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000002a30110019700000a72000104300000001f031000390000029f04000041000000000523004b000000000500001900000000050440190000029f062001970000029f03300197000000000763004b000000000400a019000000000363013f0000029f0330009c00000000030500190000000003046019000000000330004c0000072e0000613d0000000004010433000002a00340009c000007300000813d0000003f03400039000000200500008a000000000653016f000000400500003900000000030504330000000006630019000000000736004b000000000700001900000001070040390000029e0860009c000007370000213d000000010770018f000000000770004c000007370000c13d0000000000650435000000000043043500000000054100190000002005500039000000000225004b0000073e0000213d000000000240004c000007290000613d000000000200001900000020022000390000000005320019000000000612001900000000060604330000000000650435000000000542004b000007220000413d0000000001340019000000200110003900000000000104350000000001030019000000000001042d000000000100001900000a7200010430000002aa010000410000000000100435000000410100003900000004020000390000000000120435000002ab0100004100000a7200010430000002aa010000410000000000100435000000410100003900000004020000390000000000120435000002ab0100004100000a7200010430000000000100001900000a7200010430000000200300003900000000003104350000000003020433000000200410003900000000003404350000004001100039000000000430004c000007500000613d000000000400001900000000054100190000002004400039000000000624001900000000060604330000000000650435000000000534004b000007490000413d000000000231001900000000000204350000001f02300039000000200300008a000000000232016f0000000001210019000000000001042d000c000000000002000002cd04100197000000000140004c000007c40000613d000600000003001d000002cd01200197000300000001001d000000000110004c000007d80000613d000400000004001d00000000004004350000002001000039000200000001001d0000000000010435000002a601000041000080100200003900000000030004150000000c0330008a00000020033000c90a700a530000040f0000000c0100035f000000ff02000039000500000002001d0000000b0220024f000000010220008c000007ec0000c13d000000000101043b0a700a6e0000040f00000000020100190000000601000029000100000002001d000000000112004b0000080a0000413d0000000401000029000000000010043500000002010000290000000000010435000002a601000041000080100200003900000000030004150000000a0330008a00000020033000c90a700a530000040f0000000a0200035f0000000501000029000000090110024f000000010110008c0000081e0000c13d000000060100002900000001030000290000000001130049000000000202043b0a700a6c0000040f00000003010000290000000000100435000002a60100004100008010020000390000000003000415000000080330008a00000020033000c90a700a530000040f000000080100035f0000000502000029000000070220024f000000000220004c0000083c0000613d000000000101043b000500000001001d0a700a6e0000040f000000000201001900000006010000290000000001120019000000000221004b00000000020000190000000102004039000000010220018f000000000220004c0000085a0000c13d00000005020000290a700a6c0000040f0000004001000039000000000101043300000006020000290000000000210435000002a702000041000002a803000041000000000023041f00000004020000290000000303000029000000000032041e000000210200008a000000000221004b000007c20000213d0000002002100039000007ba0000013d000000000003041e0000004001100039000000000312004b000007c20000a13d000000000412004900000000030104330000003f0440008c000007b60000a13d00000020041000390000000004040433000000000043041e000007b70000013d0000000c00000005000000000001042d000000400100003900000000010104330000006402100039000002d20300004100000000003204350000004402100039000002d3030000410000000000320435000000240210003900000025030000390000000000320435000002ad0200004100000000002104350000000402100039000000200300003900000000003204350000004001100210000002ae01100197000002c8011001c700000a7200010430000000400100003900000000010104330000006402100039000002d00300004100000000003204350000004402100039000002d1030000410000000000320435000000240210003900000023030000390000000000320435000002ad0200004100000000002104350000000402100039000000200300003900000000003204350000004001100210000002ae01100197000002c8011001c700000a720001043000000060021002700000001f0220018f0000006503100270000002a203300197000000000430004c000007fa0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000007f30000413d000000000420004c000008080000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000002a30110019700000a7200010430000000400100003900000000010104330000006402100039000002ce0300004100000000003204350000004402100039000002cf030000410000000000320435000000240210003900000026030000390000000000320435000002ad0200004100000000002104350000000402100039000000020300002900000000003204350000004001100210000002ae01100197000002c8011001c700000a720001043000000060012002700000001f0110018f0000006503200270000002a203300197000000000430004c0000082c0000613d00000000040000190000000505400210000000000652034f000000000606043b00000000006504350000000104400039000000000534004b000008250000413d000000000410004c0000083a0000613d00000003011002100000000503300210000000000403043300000000041401cf000000000414022f000000000532034f000000000505043b0000010001100089000000000515022f00000000011501cf000000000141019f0000000000130435000002a30120019700000a720001043000000060021002700000001f0220018f0000006503100270000002a203300197000000000430004c0000084a0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000008430000413d000000000420004c000008580000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000002a30110019700000a7200010430000002aa010000410000000000100435000000110100003900000004020000390000000000120435000002ab0100004100000a72000104300009000000000002000500000003001d000002cd03100197000000000130004c000008ac0000613d000002cd01200197000400000001001d000000000110004c000008c00000613d000100000003001d000000000030043500000001010000390000002002000039000300000002001d0000000000120435000002a60100004100008010020000390000000003000415000000090330008a00000020033000c90a700a530000040f000000090100035f000000ff02000039000200000002001d000000080220024f000000010220008c000008d40000c13d000000000101043b0000000402000029000000000020043500000003020000290000000000120435000002a60100004100008010020000390000000003000415000000070330008a00000020033000c90a700a530000040f000000070100035f0000000202000029000000060220024f000000000220004c000008f20000613d000000000201043b00000005010000290a700a6c0000040f0000004001000039000000000101043300000005020000290000000000210435000002d402000041000002a803000041000000000023041f00000001020000290000000403000029000000000032041e000000210200008a000000000221004b000008aa0000213d0000002002100039000008a20000013d000000000003041e0000004001100039000000000312004b000008aa0000a13d000000000412004900000000030104330000003f0440008c0000089e0000a13d00000020041000390000000004040433000000000043041e0000089f0000013d0000000900000005000000000001042d000000400100003900000000010104330000006402100039000002d70300004100000000003204350000004402100039000002d8030000410000000000320435000000240210003900000024030000390000000000320435000002ad0200004100000000002104350000000402100039000000200300003900000000003204350000004001100210000002ae01100197000002c8011001c700000a7200010430000000400100003900000000010104330000006402100039000002d50300004100000000003204350000004402100039000002d6030000410000000000320435000000240210003900000022030000390000000000320435000002ad0200004100000000002104350000000402100039000000200300003900000000003204350000004001100210000002ae01100197000002c8011001c700000a720001043000000060021002700000001f0220018f0000006503100270000002a203300197000000000430004c000008e20000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000008db0000413d000000000420004c000008f00000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000002a30110019700000a720001043000000060021002700000001f0220018f0000006503100270000002a203300197000000000430004c000009000000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b000008f90000413d000000000420004c0000090e0000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000002a30110019700000a72000104300009000000000002000200000003001d000500000002001d000100000001001d000002cd01100197000000000010043500000001010000390000002002000039000400000002001d0000000000120435000002a60100004100008010020000390000000003000415000000090330008a00000020033000c90a700a530000040f000000090100035f000000ff02000039000300000002001d000000080220024f000000010220008c000009460000c13d000000000101043b0000000502000029000002cd02200197000000000020043500000004020000290000000000120435000002a60100004100008010020000390000000003000415000000070330008a00000020033000c90a700a530000040f000000070100035f0000000302000029000000060220024f000000000220004c000009640000613d000000000101043b0a700a6e0000040f000000010200008a000000000221004b0000093e0000c13d0000000900000005000000000001042d0000000203000029000000000231004b000009820000413d0000000003310049000000010100002900000005020000290a7008610000040f0000093c0000013d00000060021002700000001f0220018f0000006503100270000002a203300197000000000430004c000009540000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b0000094d0000413d000000000420004c000009620000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000002a30110019700000a720001043000000060021002700000001f0220018f0000006503100270000002a203300197000000000430004c000009720000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b0000096b0000413d000000000420004c000009800000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000002a30110019700000a7200010430000000400100003900000000010104330000004402100039000002d903000041000000000032043500000024021000390000001d030000390000000000320435000002ad0200004100000000002104350000000402100039000000040300002900000000003204350000004001100210000002ae01100197000002af011001c700000a72000104300009000000000002000500000002001d000002cd02100197000000000120004c000009e80000613d000400000002001d00000000002004350000002001000039000300000001001d0000000000010435000002a60100004100008010020000390000000003000415000000090330008a00000020033000c90a700a530000040f000000090100035f000000ff02000039000200000002001d000000080220024f000000010220008c000009fc0000c13d000000000101043b0a700a6e0000040f00000000020100190000000501000029000100000002001d000000000112004b00000a1a0000413d0000000401000029000000000010043500000003010000290000000000010435000002a60100004100008010020000390000000003000415000000070330008a00000020033000c90a700a530000040f000000070200035f0000000201000029000000060110024f000000010110008c00000a2e0000c13d000000050300002900000001010000290000000001310049000000000202043b0a700a6c0000040f00000002010000390a700a6e0000040f0000000503000029000000000231004b00000a4c0000413d000000000131004900000002020000390a700a6c0000040f0000004001000039000000000101043300000005020000290000000000210435000002a702000041000002a803000041000000000023041f0000000402000029000000000002041e000000210200008a000000000221004b000009e60000213d0000002002100039000009de0000013d000000000003041e0000004001100039000000000312004b000009e60000a13d000000000412004900000000030104330000003f0440008c000009da0000a13d00000020041000390000000004040433000000000043041e000009db0000013d0000000900000005000000000001042d000000400100003900000000010104330000006402100039000002dc0300004100000000003204350000004402100039000002dd030000410000000000320435000000240210003900000021030000390000000000320435000002ad0200004100000000002104350000000402100039000000200300003900000000003204350000004001100210000002ae01100197000002c8011001c700000a720001043000000060021002700000001f0220018f0000006503100270000002a203300197000000000430004c00000a0a0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000534004b00000a030000413d000000000420004c00000a180000613d00000003022002100000000503300210000000000403043300000000042401cf000000000424022f000000000531034f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000002a30110019700000a7200010430000000400100003900000000010104330000006402100039000002da0300004100000000003204350000004402100039000002db030000410000000000320435000000240210003900000022030000390000000000320435000002ad0200004100000000002104350000000402100039000000030300002900000000003204350000004001100210000002ae01100197000002c8011001c700000a720001043000000060012002700000001f0110018f0000006503200270000002a203300197000000000430004c00000a3c0000613d00000000040000190000000505400210000000000652034f000000000606043b00000000006504350000000104400039000000000534004b00000a350000413d000000000410004c00000a4a0000613d00000003011002100000000503300210000000000403043300000000041401cf000000000414022f000000000532034f000000000505043b0000010001100089000000000515022f00000000011501cf000000000141019f0000000000130435000002a30120019700000a7200010430000002aa010000410000000000100435000000110100003900000004020000390000000000120435000002ab0100004100000a72000104300002000000000002000200000003001d0000002003300039000100000003001d00000a62002104230000000203000029000000200230011a00000000020103550000029f010000410000000102000029000000200220011a00000000021201bd00000000010300190000000200000005000000000001042d0000000203000029000000200230011a0000000002010355000002de010000410000000102000029000000200220011a000000000212018d00000000010300190000000200000005000000000001042d000000000012041b000000000001042d000000000101041a000000000001042d00000a700000043200000a710001042e00000a7200010430000000000000000100000000000000000000000000000000000000000000000000000000ffffffff000000000000000000000000000000000000000000000000ffffffffffffffff80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000020000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000007ffffffffffffff00000000000000000000000000000000ffffffff000000000000000000000000fffffffffffffffffffffffffffffffffffffffffcc4d1c3602f7fc3180000000000000000000000000000000000000000000000033b2e3c9fd0803ce80000000200000000000000000000000000000000000040000000000000000000000000ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef000000000000000000000000000000000000000000000000000000200000000300000002000000000000000000000000000000400000010000000000000000004e487b7100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002400000000000000000000000045524332303a206d696e7420746f20746865207a65726f20616464726573730008c379a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff000000000000000000000000000000000000000000000000000000640000000000000000000000001806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b8302000200000000000000000000000000000000240000000000000000000000000000000000000000000000000000000000000000000000000000000042966c670000000000000000000000000000000000000000000000000000000095d89b4000000000000000000000000000000000000000000000000000000000a9059cba00000000000000000000000000000000000000000000000000000000a9059cbb00000000000000000000000000000000000000000000000000000000dd62ed3e0000000000000000000000000000000000000000000000000000000095d89b4100000000000000000000000000000000000000000000000000000000a457c2d70000000000000000000000000000000000000000000000000000000042966c680000000000000000000000000000000000000000000000000000000070a082310000000000000000000000000000000000000000000000000000000079cc67900000000000000000000000000000000000000000000000000000000023b872dc0000000000000000000000000000000000000000000000000000000023b872dd00000000000000000000000000000000000000000000000000000000313ce56700000000000000000000000000000000000000000000000000000000395093510000000000000000000000000000000000000000000000000000000006fdde0300000000000000000000000000000000000000000000000000000000095ea7b30000000000000000000000000000000000000000000000000000000018160ddd000000000000000000000001000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000207a65726f00000000000000000000000000000000000000000000000000000045524332303a2064656372656173656420616c6c6f77616e63652062656c6f7700000000000000000000000000000000000000840000000000000000000000008a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19bc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b000000000000000000000000000000000000000000000000ffffffffffffff7f0000000000000000000000000000000000000000ffffffe00000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff616c616e6365000000000000000000000000000000000000000000000000000045524332303a207472616e7366657220616d6f756e7420657863656564732062657373000000000000000000000000000000000000000000000000000000000045524332303a207472616e7366657220746f20746865207a65726f2061646472647265737300000000000000000000000000000000000000000000000000000045524332303a207472616e736665722066726f6d20746865207a65726f2061648c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925737300000000000000000000000000000000000000000000000000000000000045524332303a20617070726f766520746f20746865207a65726f206164647265726573730000000000000000000000000000000000000000000000000000000045524332303a20617070726f76652066726f6d20746865207a65726f2061646445524332303a20696e73756666696369656e7420616c6c6f77616e6365000000636500000000000000000000000000000000000000000000000000000000000045524332303a206275726e20616d6f756e7420657863656564732062616c616e730000000000000000000000000000000000000000000000000000000000000045524332303a206275726e2066726f6d20746865207a65726f206164647265737fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
            }
          },
          "factoryDependencies": {},
          "hash": "010002df84d6138d9b0cba89b770887763330b22c0e6298245f06dc056f74740"
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/DummyGovernor.sol:38:19:\n   |\n38 |   function quorum(uint256 blockNumber) public pure override returns (uint256) {\n   |                   ^^^^^^^^^^^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "file": "contracts/DummyGovernor.sol",
          "start": 1028,
          "end": 1047
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/DummyGovernor.sol:42:27:\n   |\n42 |   function _quorumReached(uint256 proposalId)\n   |                           ^^^^^^^^^^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "file": "contracts/DummyGovernor.sol",
          "start": 1138,
          "end": 1156
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/DummyGovernor.sol:60:27:\n   |\n60 |   function _voteSucceeded(uint256 proposalId)\n   |                           ^^^^^^^^^^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "file": "contracts/DummyGovernor.sol",
          "start": 1500,
          "end": 1518
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/DummyGovernor.sol:70:5:\n   |\n70 |     address account,\n   |     ^^^^^^^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "file": "contracts/DummyGovernor.sol",
          "start": 1660,
          "end": 1675
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/DummyGovernor.sol:71:5:\n   |\n71 |     uint256 blockNumber,\n   |     ^^^^^^^^^^^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "file": "contracts/DummyGovernor.sol",
          "start": 1681,
          "end": 1700
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": null,
        "formattedMessage": "\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ zkSync 2.0 will come with the native account abstraction support. It is highly recommended NOT   │\n│ to rely on the fact that the account has an ECDSA private key attached to it, since they may be  │\n│ ruled by a multisig and use another signature scheme. You can read more about how you can get    │\n│ ready for the future launch of AA here:                                                          │\n│ https://v2-docs.zksync.io/dev/zksync-v2/aa.html#important-account-abstraction-support            │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> @openzeppelin/contracts/utils/cryptography/ECDSA.sol\n",
        "message": "\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ zkSync 2.0 will come with the native account abstraction support. It is highly recommended NOT   │\n│ to rely on the fact that the account has an ECDSA private key attached to it, since they may be  │\n│ ruled by a multisig and use another signature scheme. You can read more about how you can get    │\n│ ready for the future launch of AA here:                                                          │\n│ https://v2-docs.zksync.io/dev/zksync-v2/aa.html#important-account-abstraction-support            │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘",
        "severity": "warning",
        "sourceLocation": {
          "file": "27",
          "start": 6581,
          "end": 6605
        },
        "type": "Warning"
      }
    ],
    "version": "0.8.16",
    "long_version": "0.8.16+commit.07a7930e.Linux.g++",
    "zk_version": "1.2.0"
  }
}
