/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Box, BoxInterface } from "../../../contracts/ColorBox.sol/Box";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "initialColor",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newValue",
        type: "string",
      },
    ],
    name: "ColorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "newValue",
        type: "bool",
      },
    ],
    name: "ShouldRevertChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newValue",
        type: "string",
      },
    ],
    name: "changeColorDryRun",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newValue",
        type: "string",
      },
    ],
    name: "changeValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newValue",
        type: "string",
      },
    ],
    name: "changeValueOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "switchShouldRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161098138038061098183398101604081905261002f9161015b565b6100383361005c565b805161004b9060019060208401906100ac565b50506002805460ff19169055610265565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546100b89061022a565b90600052602060002090601f0160209004810192826100da5760008555610120565b82601f106100f357805160ff1916838001178555610120565b82800160010185558215610120579182015b82811115610120578251825591602001919060010190610105565b5061012c929150610130565b5090565b5b8082111561012c5760008155600101610131565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561016e57600080fd5b82516001600160401b038082111561018557600080fd5b818501915085601f83011261019957600080fd5b8151818111156101ab576101ab610145565b604051601f8201601f19908116603f011681019083821181831017156101d3576101d3610145565b8160405282815288868487010111156101eb57600080fd5b600093505b8284101561020d57848401860151818501870152928501926101f0565b8284111561021e5760008684830101525b98975050505050505050565b600181811c9082168061023e57607f821691505b6020821081141561025f57634e487b7160e01b600052602260045260246000fd5b50919050565b61070d806102746000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638d73fe89116100665780638d73fe89146100e25780638da5cb5b146100f5578063ac7a25ee14610110578063e3a07ac014610123578063f2fde38b1461013657600080fd5b80630d8e6e2c14610098578063142c9eb5146100c857806320965255146100d2578063715018a6146100da575b600080fd5b604080518082019091526002815261563160f01b60208201525b6040516100bf9190610541565b60405180910390f35b6100d0610149565b005b6100b26101c9565b6100d061029f565b6100d06100f0366004610596565b6102d5565b6000546040516001600160a01b0390911681526020016100bf565b6100d061011e366004610596565b610349565b6100d0610131366004610596565b61037a565b6100d0610144366004610608565b6103bd565b6000546001600160a01b0316331461017c5760405162461bcd60e51b815260040161017390610638565b60405180910390fd5b6002805460ff8082161560ff1990921682179092556040519116151581527f88e95cf2f314e458491f98f3be8f296ee704bfc5b2cbeddcda73b61d44c9060b9060200160405180910390a1565b60025460609060ff161561020f5760405162461bcd60e51b815260206004820152600d60248201526c14d95d081d1bc81c995d995c9d609a1b6044820152606401610173565b6001805461021c9061066d565b80601f01602080910402602001604051908101604052809291908181526020018280546102489061066d565b80156102955780601f1061026a57610100808354040283529160200191610295565b820191906000526020600020905b81548152906001019060200180831161027857829003601f168201915b5050505050905090565b6000546001600160a01b031633146102c95760405162461bcd60e51b815260040161017390610638565b6102d36000610458565b565b6000546001600160a01b031633146102ff5760405162461bcd60e51b815260040161017390610638565b61030b600183836104a8565b507fea8482eb24fdcbd88250f9fd14644f201467fcaf3c5f08a0675ed9d46977ae3b828260405161033d9291906106a8565b60405180910390a15050565b7fea8482eb24fdcbd88250f9fd14644f201467fcaf3c5f08a0675ed9d46977ae3b828260405161033d9291906106a8565b60025460ff16156102ff5760405162461bcd60e51b815260206004820152600d60248201526c14d95d081d1bc81c995d995c9d609a1b6044820152606401610173565b6000546001600160a01b031633146103e75760405162461bcd60e51b815260040161017390610638565b6001600160a01b03811661044c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610173565b61045581610458565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546104b49061066d565b90600052602060002090601f0160209004810192826104d6576000855561051c565b82601f106104ef5782800160ff1982351617855561051c565b8280016001018555821561051c579182015b8281111561051c578235825591602001919060010190610501565b5061052892915061052c565b5090565b5b80821115610528576000815560010161052d565b600060208083528351808285015260005b8181101561056e57858101830151858201604001528201610552565b81811115610580576000604083870101525b50601f01601f1916929092016040019392505050565b600080602083850312156105a957600080fd5b823567ffffffffffffffff808211156105c157600080fd5b818501915085601f8301126105d557600080fd5b8135818111156105e457600080fd5b8660208285010111156105f657600080fd5b60209290920196919550909350505050565b60006020828403121561061a57600080fd5b81356001600160a01b038116811461063157600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c9082168061068157607f821691505b602082108114156106a257634e487b7160e01b600052602260045260246000fd5b50919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f1916010191905056fea264697066735822122069c67bbd360e63ea85f966251ce090330241e094c4cdd4cc60a609f8d732de7864736f6c63430008090033";

type BoxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BoxConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Box__factory extends ContractFactory {
  constructor(...args: BoxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialColor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Box> {
    return super.deploy(initialColor, overrides || {}) as Promise<Box>;
  }
  override getDeployTransaction(
    initialColor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialColor, overrides || {});
  }
  override attach(address: string): Box {
    return super.attach(address) as Box;
  }
  override connect(signer: Signer): Box__factory {
    return super.connect(signer) as Box__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BoxInterface {
    return new utils.Interface(_abi) as BoxInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Box {
    return new Contract(address, _abi, signerOrProvider) as Box;
  }
}
