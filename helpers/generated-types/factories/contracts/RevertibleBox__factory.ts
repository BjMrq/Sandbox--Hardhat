/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  RevertibleBox,
  RevertibleBoxInterface,
} from "../../contracts/RevertibleBox";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "initialValue",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "newValue",
        type: "bool",
      },
    ],
    name: "ShouldRevertChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newValue",
        type: "string",
      },
    ],
    name: "ValueChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newValue",
        type: "string",
      },
    ],
    name: "changeValueCouldRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newValue",
        type: "string",
      },
    ],
    name: "changeValueDryRun",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newValue",
        type: "string",
      },
    ],
    name: "changeValueNoRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newValue",
        type: "string",
      },
    ],
    name: "changeValueOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_testKey",
        type: "string",
      },
    ],
    name: "getMapping",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "switchShouldRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "testMapping",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_testKey",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_testVal",
        type: "uint256",
      },
    ],
    name: "updateMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000bac38038062000bac83398101604081905262000034916200015c565b6200003f3362000066565b805162000054906001906020840190620000b6565b50506002805460ff1916905562000285565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620000c49062000232565b90600052602060002090601f016020900481019282620000e8576000855562000133565b82601f106200010357805160ff191683800117855562000133565b8280016001018555821562000133579182015b828111156200013357825182559160200191906001019062000116565b506200014192915062000145565b5090565b5b8082111562000141576000815560010162000146565b600060208083850312156200016f578182fd5b82516001600160401b038082111562000186578384fd5b818501915085601f8301126200019a578384fd5b815181811115620001af57620001af6200026f565b604051601f8201601f19908116603f01168101908382118183101715620001da57620001da6200026f565b816040528281528886848701011115620001f2578687fd5b8693505b82841015620002155784840186015181850187015292850192620001f6565b828411156200022657868684830101525b98975050505050505050565b600181811c908216806200024757607f821691505b602082108114156200026957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61091780620002956000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806363ba13371161008c5780638da5cb5b116100665780638da5cb5b146101d1578063b85b2995146101ec578063d3072d82146101ff578063f2fde38b1461021c57600080fd5b806363ba1337146101a3578063715018a6146101b65780638d73fe89146101be57600080fd5b8063142c9eb5116100c8578063142c9eb51461015557806315b601411461015d57806320965255146101885780635f6066621461019057600080fd5b80630d8e6e2c146100ef57806311f45e9c1461011f578063130e163314610140575b600080fd5b604080518082019091526002815261563160f01b60208201525b604051610116919061082d565b60405180910390f35b61013261012d366004610764565b61022f565b604051908152602001610116565b61015361014e3660046106f7565b610257565b005b6101536102e9565b61013261016b366004610764565b805160208183018101805160038252928201919093012091525481565b61010961033e565b61015361019e36600461079f565b610414565b6101536101b13660046106f7565b610439565b61015361046a565b6101536101cc3660046106f7565b61047e565b6000546040516001600160a01b039091168152602001610116565b6101536101fa3660046106f7565b61029f565b60025461020c9060ff1681565b6040519015158152602001610116565b61015361022a3660046106c9565b610486565b600060038260405161024191906107e2565b9081526020016040518091039020549050919050565b60025460ff161561029f5760405162461bcd60e51b815260206004820152600d60248201526c14d95d081d1bc81c995d995c9d609a1b60448201526064015b60405180910390fd5b6102ab600183836105a9565b507fce59a1f2cca0fa1bf7d80c74a303393cb56e768ec38427649054a68be65e11d782826040516102dd9291906107fe565b60405180910390a15050565b6102f16104ff565b6002805460ff8082161560ff1990921682179092556040519116151581527f88e95cf2f314e458491f98f3be8f296ee704bfc5b2cbeddcda73b61d44c9060b9060200160405180910390a1565b60025460609060ff16156103845760405162461bcd60e51b815260206004820152600d60248201526c14d95d081d1bc81c995d995c9d609a1b6044820152606401610296565b6001805461039190610890565b80601f01602080910402602001604051908101604052809291908181526020018280546103bd90610890565b801561040a5780601f106103df5761010080835404028352916020019161040a565b820191906000526020600020905b8154815290600101906020018083116103ed57829003601f168201915b5050505050905090565b8060038360405161042591906107e2565b908152604051908190036020019020555050565b7fce59a1f2cca0fa1bf7d80c74a303393cb56e768ec38427649054a68be65e11d782826040516102dd9291906107fe565b6104726104ff565b61047c6000610559565b565b61029f6104ff565b61048e6104ff565b6001600160a01b0381166104f35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610296565b6104fc81610559565b50565b6000546001600160a01b0316331461047c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610296565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546105b590610890565b90600052602060002090601f0160209004810192826105d7576000855561061d565b82601f106105f05782800160ff1982351617855561061d565b8280016001018555821561061d579182015b8281111561061d578235825591602001919060010190610602565b5061062992915061062d565b5090565b5b80821115610629576000815560010161062e565b600082601f830112610652578081fd5b813567ffffffffffffffff8082111561066d5761066d6108cb565b604051601f8301601f19908116603f01168101908282118183101715610695576106956108cb565b816040528381528660208588010111156106ad578485fd5b8360208701602083013792830160200193909352509392505050565b6000602082840312156106da578081fd5b81356001600160a01b03811681146106f0578182fd5b9392505050565b60008060208385031215610709578081fd5b823567ffffffffffffffff80821115610720578283fd5b818501915085601f830112610733578283fd5b813581811115610741578384fd5b866020828501011115610752578384fd5b60209290920196919550909350505050565b600060208284031215610775578081fd5b813567ffffffffffffffff81111561078b578182fd5b61079784828501610642565b949350505050565b600080604083850312156107b1578182fd5b823567ffffffffffffffff8111156107c7578283fd5b6107d385828601610642565b95602094909401359450505050565b600082516107f4818460208701610860565b9190910192915050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b602081526000825180602084015261084c816040850160208701610860565b601f01601f19169190910160400192915050565b60005b8381101561087b578181015183820152602001610863565b8381111561088a576000848401525b50505050565b600181811c908216806108a457607f821691505b602082108114156108c557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220196fe1422bc26bcd444e615d6300715e56a60881a7856786e9dd17ea96d62c0264736f6c63430008040033";

type RevertibleBoxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RevertibleBoxConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RevertibleBox__factory extends ContractFactory {
  constructor(...args: RevertibleBoxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialValue: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RevertibleBox> {
    return super.deploy(
      initialValue,
      overrides || {}
    ) as Promise<RevertibleBox>;
  }
  override getDeployTransaction(
    initialValue: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialValue, overrides || {});
  }
  override attach(address: string): RevertibleBox {
    return super.attach(address) as RevertibleBox;
  }
  override connect(signer: Signer): RevertibleBox__factory {
    return super.connect(signer) as RevertibleBox__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RevertibleBoxInterface {
    return new utils.Interface(_abi) as RevertibleBoxInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RevertibleBox {
    return new Contract(address, _abi, signerOrProvider) as RevertibleBox;
  }
}
