/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ColorBoxV1,
  ColorBoxV1Interface,
} from "../../contracts/ColorBoxV1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newValue",
        type: "string",
      },
    ],
    name: "ColorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newColor",
        type: "string",
      },
    ],
    name: "changeColorCouldRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newColor",
        type: "string",
      },
    ],
    name: "changeColorDryRun",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newColor",
        type: "string",
      },
    ],
    name: "changeColorOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getColor",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_testKey",
        type: "string",
      },
    ],
    name: "getMapping",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "initialColor",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "testMapping",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testRevert",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_testKey",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_testVal",
        type: "uint256",
      },
    ],
    name: "updateMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b17806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80639a86139b1161008c578063d3072d8211610066578063d3072d82146101d9578063e186e727146101f6578063f2fde38b14610209578063f62d18881461021c57600080fd5b80639a86139b146101b6578063a26388bb146101be578063ac7a25ee146101c657600080fd5b806315b60141116100c857806315b60141146101555780635f60666214610180578063715018a6146101935780638da5cb5b1461019b57600080fd5b80630cab219a146100ef5780630d8e6e2c1461010457806311f45e9c14610134575b600080fd5b6101026100fd3660046108f7565b61022f565b005b604080518082019091526002815261563160f01b60208201525b60405161012b9190610a2d565b60405180910390f35b610147610142366004610964565b6102c1565b60405190815260200161012b565b610147610163366004610964565b805160208183018101805160678252928201919093012091525481565b61010261018e36600461099f565b6102e9565b61010261030e565b6033546040516001600160a01b03909116815260200161012b565b61011e610322565b6101026103f8565b6101026101d43660046108f7565b610440565b6066546101e69060ff1681565b604051901515815260200161012b565b6101026102043660046108f7565b610471565b6101026102173660046108c9565b610479565b61010261022a366004610964565b6104f2565b60665460ff16156102775760405162461bcd60e51b815260206004820152600d60248201526c14d95d081d1bc81c995d995c9d609a1b60448201526064015b60405180910390fd5b61028360658383610735565b507fea8482eb24fdcbd88250f9fd14644f201467fcaf3c5f08a0675ed9d46977ae3b82826040516102b59291906109fe565b60405180910390a15050565b60006067826040516102d391906109e2565b9081526020016040518091039020549050919050565b806067836040516102fa91906109e2565b908152604051908190036020019020555050565b61031661061e565b6103206000610678565b565b60665460609060ff16156103685760405162461bcd60e51b815260206004820152600d60248201526c14d95d081d1bc81c995d995c9d609a1b604482015260640161026e565b6065805461037590610a90565b80601f01602080910402602001604051908101604052809291908181526020018280546103a190610a90565b80156103ee5780601f106103c3576101008083540402835291602001916103ee565b820191906000526020600020905b8154815290600101906020018083116103d157829003601f168201915b5050505050905090565b60405162461bcd60e51b815260206004820152601760248201527f43616c6c20686173206265656e20726576657274656421000000000000000000604482015260640161026e565b7fea8482eb24fdcbd88250f9fd14644f201467fcaf3c5f08a0675ed9d46977ae3b82826040516102b59291906109fe565b61027761061e565b61048161061e565b6001600160a01b0381166104e65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161026e565b6104ef81610678565b50565b600054610100900460ff16158080156105125750600054600160ff909116105b8061052c5750303b15801561052c575060005460ff166001145b61058f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161026e565b6000805460ff1916600117905580156105b2576000805461ff0019166101001790555b6105ba6106ca565b81516105cd9060659060208501906107b9565b506066805460ff19169055801561061a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020016102b5565b5050565b6033546001600160a01b031633146103205760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161026e565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166103205760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161026e565b82805461074190610a90565b90600052602060002090601f01602090048101928261076357600085556107a9565b82601f1061077c5782800160ff198235161785556107a9565b828001600101855582156107a9579182015b828111156107a957823582559160200191906001019061078e565b506107b592915061082d565b5090565b8280546107c590610a90565b90600052602060002090601f0160209004810192826107e757600085556107a9565b82601f1061080057805160ff19168380011785556107a9565b828001600101855582156107a9579182015b828111156107a9578251825591602001919060010190610812565b5b808211156107b5576000815560010161082e565b600082601f830112610852578081fd5b813567ffffffffffffffff8082111561086d5761086d610acb565b604051601f8301601f19908116603f0116810190828211818310171561089557610895610acb565b816040528381528660208588010111156108ad578485fd5b8360208701602083013792830160200193909352509392505050565b6000602082840312156108da578081fd5b81356001600160a01b03811681146108f0578182fd5b9392505050565b60008060208385031215610909578081fd5b823567ffffffffffffffff80821115610920578283fd5b818501915085601f830112610933578283fd5b813581811115610941578384fd5b866020828501011115610952578384fd5b60209290920196919550909350505050565b600060208284031215610975578081fd5b813567ffffffffffffffff81111561098b578182fd5b61099784828501610842565b949350505050565b600080604083850312156109b1578182fd5b823567ffffffffffffffff8111156109c7578283fd5b6109d385828601610842565b95602094909401359450505050565b600082516109f4818460208701610a60565b9190910192915050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6020815260008251806020840152610a4c816040850160208701610a60565b601f01601f19169190910160400192915050565b60005b83811015610a7b578181015183820152602001610a63565b83811115610a8a576000848401525b50505050565b600181811c90821680610aa457607f821691505b60208210811415610ac557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea264697066735822122077160d7d231d38229ab54d1bf8bd24a4da71c870e40da89e5528d754d87c330d64736f6c63430008040033";

type ColorBoxV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ColorBoxV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ColorBoxV1__factory extends ContractFactory {
  constructor(...args: ColorBoxV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ColorBoxV1> {
    return super.deploy(overrides || {}) as Promise<ColorBoxV1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ColorBoxV1 {
    return super.attach(address) as ColorBoxV1;
  }
  override connect(signer: Signer): ColorBoxV1__factory {
    return super.connect(signer) as ColorBoxV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ColorBoxV1Interface {
    return new utils.Interface(_abi) as ColorBoxV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ColorBoxV1 {
    return new Contract(address, _abi, signerOrProvider) as ColorBoxV1;
  }
}
