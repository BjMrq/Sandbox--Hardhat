/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ColorBoxV2,
  ColorBoxV2Interface,
} from "../../contracts/ColorBoxV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newValue",
        type: "string",
      },
    ],
    name: "ColorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newColor",
        type: "string",
      },
    ],
    name: "changeColorCouldRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newColor",
        type: "string",
      },
    ],
    name: "changeColorDryRun",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newColor",
        type: "string",
      },
    ],
    name: "changeColorOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getColor",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_testKey",
        type: "string",
      },
    ],
    name: "getMapping",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "initialColor",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isV2",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "testMapping",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testRevert",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_testKey",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_testVal",
        type: "uint256",
      },
    ],
    name: "updateMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b25806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063d3072d8211610066578063d3072d82146101f7578063e186e72714610204578063f2fde38b14610217578063f62d18881461022a57600080fd5b80638da5cb5b146101b95780639a86139b146101d4578063a26388bb146101dc578063ac7a25ee146101e457600080fd5b806315b60141116100d357806315b60141146101605780632d94a2d01461018b5780635f6066621461019e578063715018a6146101b157600080fd5b80630cab219a146100fa5780630d8e6e2c1461010f57806311f45e9c1461013f575b600080fd5b61010d610108366004610905565b61023d565b005b6040805180820190915260028152612b1960f11b60208201525b6040516101369190610a3b565b60405180910390f35b61015261014d366004610972565b6102cf565b604051908152602001610136565b61015261016e366004610972565b805160208183018101805160678252928201919093012091525481565b60015b6040519015158152602001610136565b61010d6101ac3660046109ad565b6102f7565b61010d61031c565b6033546040516001600160a01b039091168152602001610136565b610129610330565b61010d610406565b61010d6101f2366004610905565b61044e565b60665461018e9060ff1681565b61010d610212366004610905565b61047f565b61010d6102253660046108d7565b610487565b61010d610238366004610972565b610500565b60665460ff16156102855760405162461bcd60e51b815260206004820152600d60248201526c14d95d081d1bc81c995d995c9d609a1b60448201526064015b60405180910390fd5b61029160658383610743565b507fea8482eb24fdcbd88250f9fd14644f201467fcaf3c5f08a0675ed9d46977ae3b82826040516102c3929190610a0c565b60405180910390a15050565b60006067826040516102e191906109f0565b9081526020016040518091039020549050919050565b8060678360405161030891906109f0565b908152604051908190036020019020555050565b61032461062c565b61032e6000610686565b565b60665460609060ff16156103765760405162461bcd60e51b815260206004820152600d60248201526c14d95d081d1bc81c995d995c9d609a1b604482015260640161027c565b6065805461038390610a9e565b80601f01602080910402602001604051908101604052809291908181526020018280546103af90610a9e565b80156103fc5780601f106103d1576101008083540402835291602001916103fc565b820191906000526020600020905b8154815290600101906020018083116103df57829003601f168201915b5050505050905090565b60405162461bcd60e51b815260206004820152601760248201527f43616c6c20686173206265656e20726576657274656421000000000000000000604482015260640161027c565b7fea8482eb24fdcbd88250f9fd14644f201467fcaf3c5f08a0675ed9d46977ae3b82826040516102c3929190610a0c565b61028561062c565b61048f61062c565b6001600160a01b0381166104f45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161027c565b6104fd81610686565b50565b600054610100900460ff16158080156105205750600054600160ff909116105b8061053a5750303b15801561053a575060005460ff166001145b61059d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161027c565b6000805460ff1916600117905580156105c0576000805461ff0019166101001790555b6105c86106d8565b81516105db9060659060208501906107c7565b506066805460ff191690558015610628576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020016102c3565b5050565b6033546001600160a01b0316331461032e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161027c565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1661032e5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161027c565b82805461074f90610a9e565b90600052602060002090601f01602090048101928261077157600085556107b7565b82601f1061078a5782800160ff198235161785556107b7565b828001600101855582156107b7579182015b828111156107b757823582559160200191906001019061079c565b506107c392915061083b565b5090565b8280546107d390610a9e565b90600052602060002090601f0160209004810192826107f557600085556107b7565b82601f1061080e57805160ff19168380011785556107b7565b828001600101855582156107b7579182015b828111156107b7578251825591602001919060010190610820565b5b808211156107c3576000815560010161083c565b600082601f830112610860578081fd5b813567ffffffffffffffff8082111561087b5761087b610ad9565b604051601f8301601f19908116603f011681019082821181831017156108a3576108a3610ad9565b816040528381528660208588010111156108bb578485fd5b8360208701602083013792830160200193909352509392505050565b6000602082840312156108e8578081fd5b81356001600160a01b03811681146108fe578182fd5b9392505050565b60008060208385031215610917578081fd5b823567ffffffffffffffff8082111561092e578283fd5b818501915085601f830112610941578283fd5b81358181111561094f578384fd5b866020828501011115610960578384fd5b60209290920196919550909350505050565b600060208284031215610983578081fd5b813567ffffffffffffffff811115610999578182fd5b6109a584828501610850565b949350505050565b600080604083850312156109bf578182fd5b823567ffffffffffffffff8111156109d5578283fd5b6109e185828601610850565b95602094909401359450505050565b60008251610a02818460208701610a6e565b9190910192915050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6020815260008251806020840152610a5a816040850160208701610a6e565b601f01601f19169190910160400192915050565b60005b83811015610a89578181015183820152602001610a71565b83811115610a98576000848401525b50505050565b600181811c90821680610ab257607f821691505b60208210811415610ad357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea264697066735822122076ea38f06d4a1cb3b72ddce67df3f0866fbacc9bed0293491c5c78ec3c0fb3cd64736f6c63430008040033";

type ColorBoxV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ColorBoxV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ColorBoxV2__factory extends ContractFactory {
  constructor(...args: ColorBoxV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ColorBoxV2> {
    return super.deploy(overrides || {}) as Promise<ColorBoxV2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ColorBoxV2 {
    return super.attach(address) as ColorBoxV2;
  }
  override connect(signer: Signer): ColorBoxV2__factory {
    return super.connect(signer) as ColorBoxV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ColorBoxV2Interface {
    return new utils.Interface(_abi) as ColorBoxV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ColorBoxV2 {
    return new Contract(address, _abi, signerOrProvider) as ColorBoxV2;
  }
}
